{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","projectRoot()":"d930a0e6","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Using the address that calls the test contract, has the next call (at this call depth only) create a transaction that can later be signed and sent onchain.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Using the address that calls the test contract, has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59\",\"dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Using the address that calls the test contract, has the next call (at this call depth only) create a transaction that can later be signed and sent onchain."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Using the address that calls the test contract, has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"istanbul","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f","urls":["bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59","dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":15515,"exportedSymbols":{"Vm":[15514],"VmSafe":[14940]},"nodeType":"SourceUnit","src":"117:84979:14","nodes":[{"id":11900,"nodeType":"PragmaDirective","src":"117:31:14","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":11901,"nodeType":"PragmaDirective","src":"149:33:14","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":14940,"nodeType":"ContractDefinition","src":"409:70923:14","nodes":[{"id":11908,"nodeType":"EnumDefinition","src":"529:533:14","nodes":[],"canonicalName":"VmSafe.CallerMode","members":[{"id":11903,"name":"None","nodeType":"EnumValue","src":"610:4:14"},{"id":11904,"name":"Broadcast","nodeType":"EnumValue","src":"714:9:14"},{"id":11905,"name":"RecurrentBroadcast","nodeType":"EnumValue","src":"829:18:14"},{"id":11906,"name":"Prank","nodeType":"EnumValue","src":"939:5:14"},{"id":11907,"name":"RecurrentPrank","nodeType":"EnumValue","src":"1042:14:14"}],"name":"CallerMode"},{"id":11920,"nodeType":"EnumDefinition","src":"1118:791:14","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","members":[{"id":11909,"name":"Call","nodeType":"EnumValue","src":"1186:4:14"},{"id":11910,"name":"DelegateCall","nodeType":"EnumValue","src":"1252:12:14"},{"id":11911,"name":"CallCode","nodeType":"EnumValue","src":"1322:8:14"},{"id":11912,"name":"StaticCall","nodeType":"EnumValue","src":"1390:10:14"},{"id":11913,"name":"Create","nodeType":"EnumValue","src":"1446:6:14"},{"id":11914,"name":"SelfDestruct","nodeType":"EnumValue","src":"1505:12:14"},{"id":11915,"name":"Resume","nodeType":"EnumValue","src":"1644:6:14"},{"id":11916,"name":"Balance","nodeType":"EnumValue","src":"1703:7:14"},{"id":11917,"name":"Extcodesize","nodeType":"EnumValue","src":"1764:11:14"},{"id":11918,"name":"Extcodehash","nodeType":"EnumValue","src":"1829:11:14"},{"id":11919,"name":"Extcodecopy","nodeType":"EnumValue","src":"1892:11:14"}],"name":"AccountAccessKind"},{"id":11928,"nodeType":"StructDefinition","src":"1971:237:14","nodes":[],"canonicalName":"VmSafe.Log","members":[{"constant":false,"id":11923,"mutability":"mutable","name":"topics","nodeType":"VariableDeclaration","overrides":null,"scope":11928,"src":"2059:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2059:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11922,"length":null,"nodeType":"ArrayTypeName","src":"2059:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":11925,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":11928,"src":"2121:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11924,"name":"bytes","nodeType":"ElementaryTypeName","src":"2121:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":11927,"mutability":"mutable","name":"emitter","nodeType":"VariableDeclaration","overrides":null,"scope":11928,"src":"2186:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11926,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"name":"Log","scope":14940,"visibility":"public"},{"id":11933,"nodeType":"StructDefinition","src":"2277:119:14","nodes":[],"canonicalName":"VmSafe.Rpc","members":[{"constant":false,"id":11930,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":11933,"src":"2335:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11929,"name":"string","nodeType":"ElementaryTypeName","src":"2335:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":11932,"mutability":"mutable","name":"url","nodeType":"VariableDeclaration","overrides":null,"scope":11933,"src":"2379:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11931,"name":"string","nodeType":"ElementaryTypeName","src":"2379:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"name":"Rpc","scope":14940,"visibility":"public"},{"id":11953,"nodeType":"StructDefinition","src":"2456:615:14","nodes":[],"canonicalName":"VmSafe.EthGetLogs","members":[{"constant":false,"id":11935,"mutability":"mutable","name":"emitter","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"2529:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11934,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":11938,"mutability":"mutable","name":"topics","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"2621:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2621:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11937,"length":null,"nodeType":"ArrayTypeName","src":"2621:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":11940,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"2683:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11939,"name":"bytes","nodeType":"ElementaryTypeName","src":"2683:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":11942,"mutability":"mutable","name":"blockHash","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"2730:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":11944,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"2786:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11943,"name":"uint64","nodeType":"ElementaryTypeName","src":"2786:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":11946,"mutability":"mutable","name":"transactionHash","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"2847:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":11948,"mutability":"mutable","name":"transactionIndex","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"2927:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11947,"name":"uint64","nodeType":"ElementaryTypeName","src":"2927:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":11950,"mutability":"mutable","name":"logIndex","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"2986:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2986:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":11952,"mutability":"mutable","name":"removed","nodeType":"VariableDeclaration","overrides":null,"scope":11953,"src":"3052:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11951,"name":"bool","nodeType":"ElementaryTypeName","src":"3052:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"name":"EthGetLogs","scope":14940,"visibility":"public"},{"id":11964,"nodeType":"StructDefinition","src":"3147:334:14","nodes":[],"canonicalName":"VmSafe.DirEntry","members":[{"constant":false,"id":11955,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":11964,"src":"3211:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11954,"name":"string","nodeType":"ElementaryTypeName","src":"3211:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":11957,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":11964,"src":"3274:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11956,"name":"string","nodeType":"ElementaryTypeName","src":"3274:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":11959,"mutability":"mutable","name":"depth","nodeType":"VariableDeclaration","overrides":null,"scope":11964,"src":"3330:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11958,"name":"uint64","nodeType":"ElementaryTypeName","src":"3330:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":11961,"mutability":"mutable","name":"isDir","nodeType":"VariableDeclaration","overrides":null,"scope":11964,"src":"3397:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11960,"name":"bool","nodeType":"ElementaryTypeName","src":"3397:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":11963,"mutability":"mutable","name":"isSymlink","nodeType":"VariableDeclaration","overrides":null,"scope":11964,"src":"3460:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11962,"name":"bool","nodeType":"ElementaryTypeName","src":"3460:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"name":"DirEntry","scope":14940,"visibility":"public"},{"id":11979,"nodeType":"StructDefinition","src":"3711:599:14","nodes":[],"canonicalName":"VmSafe.FsMetadata","members":[{"constant":false,"id":11966,"mutability":"mutable","name":"isDir","nodeType":"VariableDeclaration","overrides":null,"scope":11979,"src":"3792:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11965,"name":"bool","nodeType":"ElementaryTypeName","src":"3792:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":11968,"mutability":"mutable","name":"isSymlink","nodeType":"VariableDeclaration","overrides":null,"scope":11979,"src":"3863:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11967,"name":"bool","nodeType":"ElementaryTypeName","src":"3863:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":11970,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","overrides":null,"scope":11979,"src":"3952:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11969,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":11972,"mutability":"mutable","name":"readOnly","nodeType":"VariableDeclaration","overrides":null,"scope":11979,"src":"4046:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11971,"name":"bool","nodeType":"ElementaryTypeName","src":"4046:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":11974,"mutability":"mutable","name":"modified","nodeType":"VariableDeclaration","overrides":null,"scope":11979,"src":"4132:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11973,"name":"uint256","nodeType":"ElementaryTypeName","src":"4132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":11976,"mutability":"mutable","name":"accessed","nodeType":"VariableDeclaration","overrides":null,"scope":11979,"src":"4208:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11975,"name":"uint256","nodeType":"ElementaryTypeName","src":"4208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":11978,"mutability":"mutable","name":"created","nodeType":"VariableDeclaration","overrides":null,"scope":11979,"src":"4288:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11977,"name":"uint256","nodeType":"ElementaryTypeName","src":"4288:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"FsMetadata","scope":14940,"visibility":"public"},{"id":11988,"nodeType":"StructDefinition","src":"4364:277:14","nodes":[],"canonicalName":"VmSafe.Wallet","members":[{"constant":false,"id":11981,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","overrides":null,"scope":11988,"src":"4421:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11980,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":11983,"mutability":"mutable","name":"publicKeyX","nodeType":"VariableDeclaration","overrides":null,"scope":11988,"src":"4483:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11982,"name":"uint256","nodeType":"ElementaryTypeName","src":"4483:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":11985,"mutability":"mutable","name":"publicKeyY","nodeType":"VariableDeclaration","overrides":null,"scope":11988,"src":"4551:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":11987,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":11988,"src":"4616:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11986,"name":"uint256","nodeType":"ElementaryTypeName","src":"4616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"Wallet","scope":14940,"visibility":"public"},{"id":11995,"nodeType":"StructDefinition","src":"4686:213:14","nodes":[],"canonicalName":"VmSafe.FfiResult","members":[{"constant":false,"id":11990,"mutability":"mutable","name":"exitCode","nodeType":"VariableDeclaration","overrides":null,"scope":11995,"src":"4751:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":11989,"name":"int32","nodeType":"ElementaryTypeName","src":"4751:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":null,"visibility":"internal"},{"constant":false,"id":11992,"mutability":"mutable","name":"stdout","nodeType":"VariableDeclaration","overrides":null,"scope":11995,"src":"4828:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11991,"name":"bytes","nodeType":"ElementaryTypeName","src":"4828:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":11994,"mutability":"mutable","name":"stderr","nodeType":"VariableDeclaration","overrides":null,"scope":11995,"src":"4880:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11993,"name":"bytes","nodeType":"ElementaryTypeName","src":"4880:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"name":"FfiResult","scope":14940,"visibility":"public"},{"id":12000,"nodeType":"StructDefinition","src":"4948:184:14","nodes":[],"canonicalName":"VmSafe.ChainInfo","members":[{"constant":false,"id":11997,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":12000,"src":"5041:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11996,"name":"uint256","nodeType":"ElementaryTypeName","src":"5041:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":11999,"mutability":"mutable","name":"chainId","nodeType":"VariableDeclaration","overrides":null,"scope":12000,"src":"5110:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5110:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"ChainInfo","scope":14940,"visibility":"public"},{"id":12028,"nodeType":"StructDefinition","src":"5193:1837:14","nodes":[],"canonicalName":"VmSafe.AccountAccess","members":[{"constant":false,"id":12002,"mutability":"mutable","name":"chainInfo","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"5275:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12000_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"contractScope":null,"id":12001,"name":"ChainInfo","nodeType":"UserDefinedTypeName","referencedDeclaration":12000,"src":"5275:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12000_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"value":null,"visibility":"internal"},{"constant":false,"id":12004,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"5730:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$11920","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"contractScope":null,"id":12003,"name":"AccountAccessKind","nodeType":"UserDefinedTypeName","referencedDeclaration":11920,"src":"5730:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$11920","typeString":"enum VmSafe.AccountAccessKind"}},"value":null,"visibility":"internal"},{"constant":false,"id":12006,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"5917:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12005,"name":"address","nodeType":"ElementaryTypeName","src":"5917:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12008,"mutability":"mutable","name":"accessor","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"5980:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12007,"name":"address","nodeType":"ElementaryTypeName","src":"5980:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12010,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"6194:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12009,"name":"bool","nodeType":"ElementaryTypeName","src":"6194:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":12012,"mutability":"mutable","name":"oldBalance","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"6277:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12011,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":12014,"mutability":"mutable","name":"newBalance","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"6452:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12013,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":12016,"mutability":"mutable","name":"deployedCode","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"6531:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12015,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":12018,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"6613:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12017,"name":"uint256","nodeType":"ElementaryTypeName","src":"6613:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":12020,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"6689:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12019,"name":"bytes","nodeType":"ElementaryTypeName","src":"6689:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":12022,"mutability":"mutable","name":"reverted","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"6785:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12021,"name":"bool","nodeType":"ElementaryTypeName","src":"6785:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":12025,"mutability":"mutable","name":"storageAccesses","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"6896:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12041_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"contractScope":null,"id":12023,"name":"StorageAccess","nodeType":"UserDefinedTypeName","referencedDeclaration":12041,"src":"6896:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$12041_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":12024,"length":null,"nodeType":"ArrayTypeName","src":"6896:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12041_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":12027,"mutability":"mutable","name":"depth","nodeType":"VariableDeclaration","overrides":null,"scope":12028,"src":"7011:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12026,"name":"uint64","nodeType":"ElementaryTypeName","src":"7011:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"name":"AccountAccess","scope":14940,"visibility":"public"},{"id":12041,"nodeType":"StructDefinition","src":"7092:425:14","nodes":[],"canonicalName":"VmSafe.StorageAccess","members":[{"constant":false,"id":12030,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":12041,"src":"7174:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12029,"name":"address","nodeType":"ElementaryTypeName","src":"7174:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12032,"mutability":"mutable","name":"slot","nodeType":"VariableDeclaration","overrides":null,"scope":12041,"src":"7238:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7238:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":12034,"mutability":"mutable","name":"isWrite","nodeType":"VariableDeclaration","overrides":null,"scope":12041,"src":"7298:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12033,"name":"bool","nodeType":"ElementaryTypeName","src":"7298:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":12036,"mutability":"mutable","name":"previousValue","nodeType":"VariableDeclaration","overrides":null,"scope":12041,"src":"7363:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7363:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":12038,"mutability":"mutable","name":"newValue","nodeType":"VariableDeclaration","overrides":null,"scope":12041,"src":"7432:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7432:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":12040,"mutability":"mutable","name":"reverted","nodeType":"VariableDeclaration","overrides":null,"scope":12041,"src":"7497:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12039,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"name":"StorageAccess","scope":14940,"visibility":"public"},{"id":12049,"nodeType":"FunctionDefinition","src":"7704:80:14","nodes":[],"documentation":{"id":12042,"nodeType":"StructuredDocumentation","src":"7561:138:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","overrides":null,"parameters":{"id":12045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12044,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12049,"src":"7724:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12043,"name":"string","nodeType":"ElementaryTypeName","src":"7724:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"7723:22:14"},"returnParameters":{"id":12048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12047,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12049,"src":"7769:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12046,"name":"address","nodeType":"ElementaryTypeName","src":"7769:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"7768:15:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12060,"nodeType":"FunctionDefinition","src":"7967:112:14","nodes":[],"documentation":{"id":12050,"nodeType":"StructuredDocumentation","src":"7790:172:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","overrides":null,"parameters":{"id":12055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12052,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12060,"src":"7987:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12051,"name":"string","nodeType":"ElementaryTypeName","src":"7987:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12054,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12060,"src":"8009:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12053,"name":"string","nodeType":"ElementaryTypeName","src":"8009:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"7986:45:14"},"returnParameters":{"id":12059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12058,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12060,"src":"8055:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12056,"name":"address","nodeType":"ElementaryTypeName","src":"8055:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12057,"length":null,"nodeType":"ArrayTypeName","src":"8055:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"8054:24:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12068,"nodeType":"FunctionDefinition","src":"8225:74:14","nodes":[],"documentation":{"id":12061,"nodeType":"StructuredDocumentation","src":"8085:135:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","overrides":null,"parameters":{"id":12064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12063,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12068,"src":"8242:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12062,"name":"string","nodeType":"ElementaryTypeName","src":"8242:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"8241:22:14"},"returnParameters":{"id":12067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12066,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12068,"src":"8287:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12065,"name":"bool","nodeType":"ElementaryTypeName","src":"8287:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"8286:12:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12079,"nodeType":"FunctionDefinition","src":"8479:106:14","nodes":[],"documentation":{"id":12069,"nodeType":"StructuredDocumentation","src":"8305:169:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","overrides":null,"parameters":{"id":12074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12071,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12079,"src":"8496:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12070,"name":"string","nodeType":"ElementaryTypeName","src":"8496:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12073,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12079,"src":"8518:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12072,"name":"string","nodeType":"ElementaryTypeName","src":"8518:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"8495:45:14"},"returnParameters":{"id":12078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12077,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12079,"src":"8564:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12075,"name":"bool","nodeType":"ElementaryTypeName","src":"8564:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12076,"length":null,"nodeType":"ArrayTypeName","src":"8564:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"}],"src":"8563:21:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12087,"nodeType":"FunctionDefinition","src":"8734:80:14","nodes":[],"documentation":{"id":12080,"nodeType":"StructuredDocumentation","src":"8591:138:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","overrides":null,"parameters":{"id":12083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12082,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12087,"src":"8754:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12081,"name":"string","nodeType":"ElementaryTypeName","src":"8754:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"8753:22:14"},"returnParameters":{"id":12086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12085,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12087,"src":"8799:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8799:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"8798:15:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12098,"nodeType":"FunctionDefinition","src":"8997:112:14","nodes":[],"documentation":{"id":12088,"nodeType":"StructuredDocumentation","src":"8820:172:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","overrides":null,"parameters":{"id":12093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12090,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12098,"src":"9017:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12089,"name":"string","nodeType":"ElementaryTypeName","src":"9017:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12092,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12098,"src":"9039:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12091,"name":"string","nodeType":"ElementaryTypeName","src":"9039:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"9016:45:14"},"returnParameters":{"id":12097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12096,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12098,"src":"9085:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9085:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12095,"length":null,"nodeType":"ArrayTypeName","src":"9085:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9084:24:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12106,"nodeType":"FunctionDefinition","src":"9256:83:14","nodes":[],"documentation":{"id":12099,"nodeType":"StructuredDocumentation","src":"9115:136:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","overrides":null,"parameters":{"id":12102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12101,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12106,"src":"9274:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12100,"name":"string","nodeType":"ElementaryTypeName","src":"9274:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"9273:22:14"},"returnParameters":{"id":12105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12104,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12106,"src":"9319:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12103,"name":"bytes","nodeType":"ElementaryTypeName","src":"9319:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9318:20:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12117,"nodeType":"FunctionDefinition","src":"9520:108:14","nodes":[],"documentation":{"id":12107,"nodeType":"StructuredDocumentation","src":"9345:170:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","overrides":null,"parameters":{"id":12112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12109,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12117,"src":"9538:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12108,"name":"string","nodeType":"ElementaryTypeName","src":"9538:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12111,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12117,"src":"9560:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12110,"name":"string","nodeType":"ElementaryTypeName","src":"9560:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"9537:45:14"},"returnParameters":{"id":12116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12115,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12117,"src":"9606:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12113,"name":"bytes","nodeType":"ElementaryTypeName","src":"9606:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12114,"length":null,"nodeType":"ArrayTypeName","src":"9606:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"}],"src":"9605:22:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12125,"nodeType":"FunctionDefinition","src":"9776:75:14","nodes":[],"documentation":{"id":12118,"nodeType":"StructuredDocumentation","src":"9634:137:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","overrides":null,"parameters":{"id":12121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12120,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12125,"src":"9792:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12119,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"9791:22:14"},"returnParameters":{"id":12124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12123,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12125,"src":"9837:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12122,"name":"int256","nodeType":"ElementaryTypeName","src":"9837:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"9836:14:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12136,"nodeType":"FunctionDefinition","src":"10033:107:14","nodes":[],"documentation":{"id":12126,"nodeType":"StructuredDocumentation","src":"9857:171:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","overrides":null,"parameters":{"id":12131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12128,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12136,"src":"10049:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12127,"name":"string","nodeType":"ElementaryTypeName","src":"10049:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12130,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12136,"src":"10071:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12129,"name":"string","nodeType":"ElementaryTypeName","src":"10071:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"10048:45:14"},"returnParameters":{"id":12135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12134,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12136,"src":"10117:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12132,"name":"int256","nodeType":"ElementaryTypeName","src":"10117:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12133,"length":null,"nodeType":"ArrayTypeName","src":"10117:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"}],"src":"10116:23:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12146,"nodeType":"FunctionDefinition","src":"10331:91:14","nodes":[],"documentation":{"id":12137,"nodeType":"StructuredDocumentation","src":"10146:180:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12139,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12146,"src":"10346:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12138,"name":"string","nodeType":"ElementaryTypeName","src":"10346:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12141,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12146,"src":"10368:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12140,"name":"bool","nodeType":"ElementaryTypeName","src":"10368:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"10345:41:14"},"returnParameters":{"id":12145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12144,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12146,"src":"10410:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12143,"name":"bool","nodeType":"ElementaryTypeName","src":"10410:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"10409:12:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12156,"nodeType":"FunctionDefinition","src":"10616:97:14","nodes":[],"documentation":{"id":12147,"nodeType":"StructuredDocumentation","src":"10428:183:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12149,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12156,"src":"10631:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12148,"name":"string","nodeType":"ElementaryTypeName","src":"10631:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12151,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12156,"src":"10653:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12150,"name":"uint256","nodeType":"ElementaryTypeName","src":"10653:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10630:44:14"},"returnParameters":{"id":12155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12154,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12156,"src":"10698:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12153,"name":"uint256","nodeType":"ElementaryTypeName","src":"10698:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10697:15:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12170,"nodeType":"FunctionDefinition","src":"10941:164:14","nodes":[],"documentation":{"id":12157,"nodeType":"StructuredDocumentation","src":"10719:217:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12159,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12170,"src":"10956:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12158,"name":"string","nodeType":"ElementaryTypeName","src":"10956:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12161,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12170,"src":"10978:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12160,"name":"string","nodeType":"ElementaryTypeName","src":"10978:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12164,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12170,"src":"11001:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12162,"name":"address","nodeType":"ElementaryTypeName","src":"11001:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12163,"length":null,"nodeType":"ArrayTypeName","src":"11001:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"10955:78:14"},"returnParameters":{"id":12169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12168,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12170,"src":"11081:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12166,"name":"address","nodeType":"ElementaryTypeName","src":"11081:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12167,"length":null,"nodeType":"ArrayTypeName","src":"11081:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"11080:24:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12184,"nodeType":"FunctionDefinition","src":"11333:164:14","nodes":[],"documentation":{"id":12171,"nodeType":"StructuredDocumentation","src":"11111:217:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12173,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12184,"src":"11348:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12172,"name":"string","nodeType":"ElementaryTypeName","src":"11348:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12175,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12184,"src":"11370:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12174,"name":"string","nodeType":"ElementaryTypeName","src":"11370:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12178,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12184,"src":"11393:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11393:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12177,"length":null,"nodeType":"ArrayTypeName","src":"11393:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"11347:78:14"},"returnParameters":{"id":12183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12182,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12184,"src":"11473:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11473:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12181,"length":null,"nodeType":"ArrayTypeName","src":"11473:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"11472:24:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12198,"nodeType":"FunctionDefinition","src":"11724:162:14","nodes":[],"documentation":{"id":12185,"nodeType":"StructuredDocumentation","src":"11503:216:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12187,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12198,"src":"11739:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12186,"name":"string","nodeType":"ElementaryTypeName","src":"11739:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12189,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12198,"src":"11761:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12188,"name":"string","nodeType":"ElementaryTypeName","src":"11761:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12192,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12198,"src":"11784:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12190,"name":"string","nodeType":"ElementaryTypeName","src":"11784:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12191,"length":null,"nodeType":"ArrayTypeName","src":"11784:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"11738:77:14"},"returnParameters":{"id":12197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12196,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12198,"src":"11863:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12194,"name":"string","nodeType":"ElementaryTypeName","src":"11863:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12195,"length":null,"nodeType":"ArrayTypeName","src":"11863:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"11862:23:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12212,"nodeType":"FunctionDefinition","src":"12112:160:14","nodes":[],"documentation":{"id":12199,"nodeType":"StructuredDocumentation","src":"11892:215:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12201,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12212,"src":"12127:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12200,"name":"string","nodeType":"ElementaryTypeName","src":"12127:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12203,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12212,"src":"12149:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12202,"name":"string","nodeType":"ElementaryTypeName","src":"12149:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12206,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12212,"src":"12172:29:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12204,"name":"bytes","nodeType":"ElementaryTypeName","src":"12172:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12205,"length":null,"nodeType":"ArrayTypeName","src":"12172:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"}],"src":"12126:76:14"},"returnParameters":{"id":12211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12210,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12212,"src":"12250:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12208,"name":"bytes","nodeType":"ElementaryTypeName","src":"12250:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12209,"length":null,"nodeType":"ArrayTypeName","src":"12250:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"}],"src":"12249:22:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12222,"nodeType":"FunctionDefinition","src":"12465:95:14","nodes":[],"documentation":{"id":12213,"nodeType":"StructuredDocumentation","src":"12278:182:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12215,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12222,"src":"12480:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12214,"name":"string","nodeType":"ElementaryTypeName","src":"12480:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12217,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12222,"src":"12502:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12216,"name":"int256","nodeType":"ElementaryTypeName","src":"12502:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"12479:43:14"},"returnParameters":{"id":12221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12220,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12222,"src":"12546:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12219,"name":"int256","nodeType":"ElementaryTypeName","src":"12546:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"12545:14:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12232,"nodeType":"FunctionDefinition","src":"12754:97:14","nodes":[],"documentation":{"id":12223,"nodeType":"StructuredDocumentation","src":"12566:183:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12225,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12232,"src":"12769:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12224,"name":"string","nodeType":"ElementaryTypeName","src":"12769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12227,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12232,"src":"12791:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12226,"name":"address","nodeType":"ElementaryTypeName","src":"12791:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12768:44:14"},"returnParameters":{"id":12231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12230,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12232,"src":"12836:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12229,"name":"address","nodeType":"ElementaryTypeName","src":"12836:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12835:15:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12242,"nodeType":"FunctionDefinition","src":"13045:97:14","nodes":[],"documentation":{"id":12233,"nodeType":"StructuredDocumentation","src":"12857:183:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12235,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12242,"src":"13060:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12234,"name":"string","nodeType":"ElementaryTypeName","src":"13060:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12237,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12242,"src":"13082:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13082:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"13059:44:14"},"returnParameters":{"id":12241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12240,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12242,"src":"13127:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13127:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"13126:15:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12252,"nodeType":"FunctionDefinition","src":"13335:111:14","nodes":[],"documentation":{"id":12243,"nodeType":"StructuredDocumentation","src":"13148:182:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12245,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12252,"src":"13350:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12244,"name":"string","nodeType":"ElementaryTypeName","src":"13350:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12247,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12252,"src":"13372:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12246,"name":"string","nodeType":"ElementaryTypeName","src":"13372:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"13349:52:14"},"returnParameters":{"id":12251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12250,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12252,"src":"13425:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12249,"name":"string","nodeType":"ElementaryTypeName","src":"13425:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"13424:21:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12262,"nodeType":"FunctionDefinition","src":"13638:109:14","nodes":[],"documentation":{"id":12253,"nodeType":"StructuredDocumentation","src":"13452:181:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12255,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12262,"src":"13653:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12254,"name":"string","nodeType":"ElementaryTypeName","src":"13653:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12257,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12262,"src":"13675:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12256,"name":"bytes","nodeType":"ElementaryTypeName","src":"13675:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13652:51:14"},"returnParameters":{"id":12261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12260,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12262,"src":"13727:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12259,"name":"bytes","nodeType":"ElementaryTypeName","src":"13727:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13726:20:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12276,"nodeType":"FunctionDefinition","src":"13972:158:14","nodes":[],"documentation":{"id":12263,"nodeType":"StructuredDocumentation","src":"13753:214:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12265,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12276,"src":"13987:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12264,"name":"string","nodeType":"ElementaryTypeName","src":"13987:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12267,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12276,"src":"14009:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12266,"name":"string","nodeType":"ElementaryTypeName","src":"14009:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12270,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12276,"src":"14032:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12268,"name":"bool","nodeType":"ElementaryTypeName","src":"14032:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12269,"length":null,"nodeType":"ArrayTypeName","src":"14032:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"}],"src":"13986:75:14"},"returnParameters":{"id":12275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12274,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12276,"src":"14109:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12272,"name":"bool","nodeType":"ElementaryTypeName","src":"14109:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12273,"length":null,"nodeType":"ArrayTypeName","src":"14109:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"}],"src":"14108:21:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12290,"nodeType":"FunctionDefinition","src":"14358:164:14","nodes":[],"documentation":{"id":12277,"nodeType":"StructuredDocumentation","src":"14136:217:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12279,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12290,"src":"14373:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12278,"name":"string","nodeType":"ElementaryTypeName","src":"14373:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12281,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12290,"src":"14395:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12280,"name":"string","nodeType":"ElementaryTypeName","src":"14395:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12284,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12290,"src":"14418:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12282,"name":"uint256","nodeType":"ElementaryTypeName","src":"14418:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12283,"length":null,"nodeType":"ArrayTypeName","src":"14418:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"14372:78:14"},"returnParameters":{"id":12289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12288,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12290,"src":"14498:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12286,"name":"uint256","nodeType":"ElementaryTypeName","src":"14498:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12287,"length":null,"nodeType":"ArrayTypeName","src":"14498:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"14497:24:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12304,"nodeType":"FunctionDefinition","src":"14749:162:14","nodes":[],"documentation":{"id":12291,"nodeType":"StructuredDocumentation","src":"14528:216:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","overrides":null,"parameters":{"id":12299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12293,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12304,"src":"14764:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12292,"name":"string","nodeType":"ElementaryTypeName","src":"14764:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12295,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12304,"src":"14786:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12294,"name":"string","nodeType":"ElementaryTypeName","src":"14786:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12298,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","overrides":null,"scope":12304,"src":"14809:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12296,"name":"int256","nodeType":"ElementaryTypeName","src":"14809:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12297,"length":null,"nodeType":"ArrayTypeName","src":"14809:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"}],"src":"14763:77:14"},"returnParameters":{"id":12303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12302,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12304,"src":"14888:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12300,"name":"int256","nodeType":"ElementaryTypeName","src":"14888:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12301,"length":null,"nodeType":"ArrayTypeName","src":"14888:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"}],"src":"14887:23:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12312,"nodeType":"FunctionDefinition","src":"15059:85:14","nodes":[],"documentation":{"id":12305,"nodeType":"StructuredDocumentation","src":"14917:137:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","overrides":null,"parameters":{"id":12308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12307,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12312,"src":"15078:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12306,"name":"string","nodeType":"ElementaryTypeName","src":"15078:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"15077:22:14"},"returnParameters":{"id":12311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12310,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12312,"src":"15123:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12309,"name":"string","nodeType":"ElementaryTypeName","src":"15123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"15122:21:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12323,"nodeType":"FunctionDefinition","src":"15326:110:14","nodes":[],"documentation":{"id":12313,"nodeType":"StructuredDocumentation","src":"15150:171:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","overrides":null,"parameters":{"id":12318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12315,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12323,"src":"15345:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12314,"name":"string","nodeType":"ElementaryTypeName","src":"15345:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12317,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12323,"src":"15367:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12316,"name":"string","nodeType":"ElementaryTypeName","src":"15367:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"15344:45:14"},"returnParameters":{"id":12322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12321,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12323,"src":"15413:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12319,"name":"string","nodeType":"ElementaryTypeName","src":"15413:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12320,"length":null,"nodeType":"ArrayTypeName","src":"15413:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"15412:23:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12331,"nodeType":"FunctionDefinition","src":"15585:77:14","nodes":[],"documentation":{"id":12324,"nodeType":"StructuredDocumentation","src":"15442:138:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","overrides":null,"parameters":{"id":12327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12326,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12331,"src":"15602:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12325,"name":"string","nodeType":"ElementaryTypeName","src":"15602:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"15601:22:14"},"returnParameters":{"id":12330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12329,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12331,"src":"15647:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12328,"name":"uint256","nodeType":"ElementaryTypeName","src":"15647:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15646:15:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12342,"nodeType":"FunctionDefinition","src":"15845:109:14","nodes":[],"documentation":{"id":12332,"nodeType":"StructuredDocumentation","src":"15668:172:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","overrides":null,"parameters":{"id":12337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12334,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12342,"src":"15862:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12333,"name":"string","nodeType":"ElementaryTypeName","src":"15862:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12336,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","overrides":null,"scope":12342,"src":"15884:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12335,"name":"string","nodeType":"ElementaryTypeName","src":"15884:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"15861:45:14"},"returnParameters":{"id":12341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12340,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12342,"src":"15930:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12338,"name":"uint256","nodeType":"ElementaryTypeName","src":"15930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12339,"length":null,"nodeType":"ArrayTypeName","src":"15930:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15929:24:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12350,"nodeType":"FunctionDefinition","src":"15996:70:14","nodes":[],"documentation":{"id":12343,"nodeType":"StructuredDocumentation","src":"15960:31:14","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","overrides":null,"parameters":{"id":12348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12345,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","overrides":null,"scope":12350,"src":"16012:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12344,"name":"string","nodeType":"ElementaryTypeName","src":"16012:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12347,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12350,"src":"16034:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12346,"name":"string","nodeType":"ElementaryTypeName","src":"16034:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"16011:45:14"},"returnParameters":{"id":12349,"nodeType":"ParameterList","parameters":[],"src":"16065:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12362,"nodeType":"FunctionDefinition","src":"16198:109:14","nodes":[],"documentation":{"id":12351,"nodeType":"StructuredDocumentation","src":"16102:91:14","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","overrides":null,"parameters":{"id":12354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12353,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":12362,"src":"16216:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12352,"name":"address","nodeType":"ElementaryTypeName","src":"16216:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16215:16:14"},"returnParameters":{"id":12361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12357,"mutability":"mutable","name":"readSlots","nodeType":"VariableDeclaration","overrides":null,"scope":12362,"src":"16250:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16250:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12356,"length":null,"nodeType":"ArrayTypeName","src":"16250:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":12360,"mutability":"mutable","name":"writeSlots","nodeType":"VariableDeclaration","overrides":null,"scope":12362,"src":"16278:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16278:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12359,"length":null,"nodeType":"ArrayTypeName","src":"16278:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"16249:57:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12370,"nodeType":"FunctionDefinition","src":"16363:74:14","nodes":[],"documentation":{"id":12363,"nodeType":"StructuredDocumentation","src":"16313:45:14","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","overrides":null,"parameters":{"id":12366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12365,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":12370,"src":"16377:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12364,"name":"uint256","nodeType":"ElementaryTypeName","src":"16377:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16376:20:14"},"returnParameters":{"id":12369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12368,"mutability":"mutable","name":"keyAddr","nodeType":"VariableDeclaration","overrides":null,"scope":12370,"src":"16420:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12367,"name":"address","nodeType":"ElementaryTypeName","src":"16420:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16419:17:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12386,"nodeType":"FunctionDefinition","src":"16500:160:14","nodes":[],"documentation":{"id":12371,"nodeType":"StructuredDocumentation","src":"16443:52:14","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","overrides":null,"parameters":{"id":12381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12373,"mutability":"mutable","name":"fromBlock","nodeType":"VariableDeclaration","overrides":null,"scope":12386,"src":"16521:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12372,"name":"uint256","nodeType":"ElementaryTypeName","src":"16521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":12375,"mutability":"mutable","name":"toBlock","nodeType":"VariableDeclaration","overrides":null,"scope":12386,"src":"16540:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12374,"name":"uint256","nodeType":"ElementaryTypeName","src":"16540:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":12377,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":12386,"src":"16557:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12376,"name":"address","nodeType":"ElementaryTypeName","src":"16557:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12380,"mutability":"mutable","name":"topics","nodeType":"VariableDeclaration","overrides":null,"scope":12386,"src":"16573:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16573:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12379,"length":null,"nodeType":"ArrayTypeName","src":"16573:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"16520:79:14"},"returnParameters":{"id":12385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12384,"mutability":"mutable","name":"logs","nodeType":"VariableDeclaration","overrides":null,"scope":12386,"src":"16634:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$11953_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"contractScope":null,"id":12382,"name":"EthGetLogs","nodeType":"UserDefinedTypeName","referencedDeclaration":11953,"src":"16634:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$11953_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":12383,"length":null,"nodeType":"ArrayTypeName","src":"16634:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$11953_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"value":null,"visibility":"internal"}],"src":"16633:26:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12392,"nodeType":"FunctionDefinition","src":"16975:65:14","nodes":[],"documentation":{"id":12387,"nodeType":"StructuredDocumentation","src":"16666:304:14","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","overrides":null,"parameters":{"id":12388,"nodeType":"ParameterList","parameters":[],"src":"16998:2:14"},"returnParameters":{"id":12391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12390,"mutability":"mutable","name":"height","nodeType":"VariableDeclaration","overrides":null,"scope":12392,"src":"17024:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12389,"name":"uint256","nodeType":"ElementaryTypeName","src":"17024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17023:16:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12398,"nodeType":"FunctionDefinition","src":"17364:71:14","nodes":[],"documentation":{"id":12393,"nodeType":"StructuredDocumentation","src":"17046:313:14","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","overrides":null,"parameters":{"id":12394,"nodeType":"ParameterList","parameters":[],"src":"17390:2:14"},"returnParameters":{"id":12397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12396,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","overrides":null,"scope":12398,"src":"17416:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12395,"name":"uint256","nodeType":"ElementaryTypeName","src":"17416:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17415:19:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12412,"nodeType":"FunctionDefinition","src":"17528:146:14","nodes":[],"documentation":{"id":12399,"nodeType":"StructuredDocumentation","src":"17441:82:14","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","overrides":null,"parameters":{"id":12404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12401,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":12412,"src":"17562:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12400,"name":"address","nodeType":"ElementaryTypeName","src":"17562:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12403,"mutability":"mutable","name":"elementSlot","nodeType":"VariableDeclaration","overrides":null,"scope":12412,"src":"17578:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17578:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17561:37:14"},"returnParameters":{"id":12411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12406,"mutability":"mutable","name":"found","nodeType":"VariableDeclaration","overrides":null,"scope":12412,"src":"17633:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12405,"name":"bool","nodeType":"ElementaryTypeName","src":"17633:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":12408,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12412,"src":"17645:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17645:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":12410,"mutability":"mutable","name":"parent","nodeType":"VariableDeclaration","overrides":null,"scope":12412,"src":"17658:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17658:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17632:41:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12422,"nodeType":"FunctionDefinition","src":"17771:97:14","nodes":[],"documentation":{"id":12413,"nodeType":"StructuredDocumentation","src":"17680:86:14","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","overrides":null,"parameters":{"id":12418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12415,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":12422,"src":"17797:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12414,"name":"address","nodeType":"ElementaryTypeName","src":"17797:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12417,"mutability":"mutable","name":"mappingSlot","nodeType":"VariableDeclaration","overrides":null,"scope":12422,"src":"17813:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17813:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17796:37:14"},"returnParameters":{"id":12421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12420,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","overrides":null,"scope":12422,"src":"17852:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12419,"name":"uint256","nodeType":"ElementaryTypeName","src":"17852:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17851:16:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12434,"nodeType":"FunctionDefinition","src":"18072:109:14","nodes":[],"documentation":{"id":12423,"nodeType":"StructuredDocumentation","src":"17874:193:14","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","overrides":null,"parameters":{"id":12430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12425,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":12434,"src":"18098:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12424,"name":"address","nodeType":"ElementaryTypeName","src":"18098:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12427,"mutability":"mutable","name":"mappingSlot","nodeType":"VariableDeclaration","overrides":null,"scope":12434,"src":"18114:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18114:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":12429,"mutability":"mutable","name":"idx","nodeType":"VariableDeclaration","overrides":null,"scope":12434,"src":"18135:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12428,"name":"uint256","nodeType":"ElementaryTypeName","src":"18135:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18097:50:14"},"returnParameters":{"id":12433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12432,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12434,"src":"18166:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18166:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"18165:15:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12442,"nodeType":"FunctionDefinition","src":"18225:72:14","nodes":[],"documentation":{"id":12435,"nodeType":"StructuredDocumentation","src":"18187:33:14","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","overrides":null,"parameters":{"id":12438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12437,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":12442,"src":"18243:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12436,"name":"address","nodeType":"ElementaryTypeName","src":"18243:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18242:17:14"},"returnParameters":{"id":12441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12440,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","overrides":null,"scope":12442,"src":"18283:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12439,"name":"uint64","nodeType":"ElementaryTypeName","src":"18283:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"18282:14:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12449,"nodeType":"FunctionDefinition","src":"18339:64:14","nodes":[],"documentation":{"id":12443,"nodeType":"StructuredDocumentation","src":"18303:31:14","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","overrides":null,"parameters":{"id":12444,"nodeType":"ParameterList","parameters":[],"src":"18363:2:14"},"returnParameters":{"id":12448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12447,"mutability":"mutable","name":"logs","nodeType":"VariableDeclaration","overrides":null,"scope":12449,"src":"18384:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$11928_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"contractScope":null,"id":12445,"name":"Log","nodeType":"UserDefinedTypeName","referencedDeclaration":11928,"src":"18384:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$11928_storage_ptr","typeString":"struct VmSafe.Log"}},"id":12446,"length":null,"nodeType":"ArrayTypeName","src":"18384:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$11928_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"value":null,"visibility":"internal"}],"src":"18383:19:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12459,"nodeType":"FunctionDefinition","src":"18455:81:14","nodes":[],"documentation":{"id":12450,"nodeType":"StructuredDocumentation","src":"18409:41:14","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","overrides":null,"parameters":{"id":12455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12452,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":12459,"src":"18469:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12451,"name":"address","nodeType":"ElementaryTypeName","src":"18469:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12454,"mutability":"mutable","name":"slot","nodeType":"VariableDeclaration","overrides":null,"scope":12459,"src":"18485:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18485:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"18468:30:14"},"returnParameters":{"id":12458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12457,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":12459,"src":"18522:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18522:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"18521:14:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12463,"nodeType":"FunctionDefinition","src":"18627:37:14","nodes":[],"documentation":{"id":12460,"nodeType":"StructuredDocumentation","src":"18542:80:14","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","overrides":null,"parameters":{"id":12461,"nodeType":"ParameterList","parameters":[],"src":"18652:2:14"},"returnParameters":{"id":12462,"nodeType":"ParameterList","parameters":[],"src":"18663:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12467,"nodeType":"FunctionDefinition","src":"18716:27:14","nodes":[],"documentation":{"id":12464,"nodeType":"StructuredDocumentation","src":"18670:41:14","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","overrides":null,"parameters":{"id":12465,"nodeType":"ParameterList","parameters":[],"src":"18731:2:14"},"returnParameters":{"id":12466,"nodeType":"ParameterList","parameters":[],"src":"18742:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12471,"nodeType":"FunctionDefinition","src":"18790:31:14","nodes":[],"documentation":{"id":12468,"nodeType":"StructuredDocumentation","src":"18749:36:14","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","overrides":null,"parameters":{"id":12469,"nodeType":"ParameterList","parameters":[],"src":"18809:2:14"},"returnParameters":{"id":12470,"nodeType":"ParameterList","parameters":[],"src":"18820:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12475,"nodeType":"FunctionDefinition","src":"18911:38:14","nodes":[],"documentation":{"id":12472,"nodeType":"StructuredDocumentation","src":"18827:79:14","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","overrides":null,"parameters":{"id":12473,"nodeType":"ParameterList","parameters":[],"src":"18937:2:14"},"returnParameters":{"id":12474,"nodeType":"ParameterList","parameters":[],"src":"18948:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12485,"nodeType":"FunctionDefinition","src":"19026:98:14","nodes":[],"documentation":{"id":12476,"nodeType":"StructuredDocumentation","src":"18955:66:14","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","overrides":null,"parameters":{"id":12481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12478,"mutability":"mutable","name":"method","nodeType":"VariableDeclaration","overrides":null,"scope":12485,"src":"19039:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12477,"name":"string","nodeType":"ElementaryTypeName","src":"19039:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12480,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","overrides":null,"scope":12485,"src":"19063:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12479,"name":"string","nodeType":"ElementaryTypeName","src":"19063:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"19038:48:14"},"returnParameters":{"id":12484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12483,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":12485,"src":"19105:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12482,"name":"bytes","nodeType":"ElementaryTypeName","src":"19105:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"19104:19:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12497,"nodeType":"FunctionDefinition","src":"19198:99:14","nodes":[],"documentation":{"id":12486,"nodeType":"StructuredDocumentation","src":"19130:63:14","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","overrides":null,"parameters":{"id":12491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12488,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":12497,"src":"19216:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12487,"name":"uint256","nodeType":"ElementaryTypeName","src":"19216:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":12490,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","overrides":null,"scope":12497,"src":"19236:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19236:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"19215:36:14"},"returnParameters":{"id":12496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12493,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","overrides":null,"scope":12497,"src":"19275:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19275:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":12495,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","overrides":null,"scope":12497,"src":"19286:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19286:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"19274:22:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12511,"nodeType":"FunctionDefinition","src":"19371:104:14","nodes":[],"documentation":{"id":12498,"nodeType":"StructuredDocumentation","src":"19303:63:14","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","overrides":null,"parameters":{"id":12503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12500,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":12511,"src":"19385:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12499,"name":"uint256","nodeType":"ElementaryTypeName","src":"19385:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":12502,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","overrides":null,"scope":12511,"src":"19405:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19405:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"19384:36:14"},"returnParameters":{"id":12510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12505,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","overrides":null,"scope":12511,"src":"19444:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12504,"name":"uint8","nodeType":"ElementaryTypeName","src":"19444:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":12507,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","overrides":null,"scope":12511,"src":"19453:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19453:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":12509,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","overrides":null,"scope":12511,"src":"19464:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19464:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"19443:31:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12515,"nodeType":"FunctionDefinition","src":"19543:42:14","nodes":[],"documentation":{"id":12512,"nodeType":"StructuredDocumentation","src":"19481:57:14","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","overrides":null,"parameters":{"id":12513,"nodeType":"ParameterList","parameters":[],"src":"19573:2:14"},"returnParameters":{"id":12514,"nodeType":"ParameterList","parameters":[],"src":"19584:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12519,"nodeType":"FunctionDefinition","src":"19729:44:14","nodes":[],"documentation":{"id":12516,"nodeType":"StructuredDocumentation","src":"19591:133:14","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","overrides":null,"parameters":{"id":12517,"nodeType":"ParameterList","parameters":[],"src":"19761:2:14"},"returnParameters":{"id":12518,"nodeType":"ParameterList","parameters":[],"src":"19772:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12526,"nodeType":"FunctionDefinition","src":"19881:92:14","nodes":[],"documentation":{"id":12520,"nodeType":"StructuredDocumentation","src":"19779:97:14","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","overrides":null,"parameters":{"id":12521,"nodeType":"ParameterList","parameters":[],"src":"19912:2:14"},"returnParameters":{"id":12525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12524,"mutability":"mutable","name":"accountAccesses","nodeType":"VariableDeclaration","overrides":null,"scope":12526,"src":"19933:38:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12028_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"contractScope":null,"id":12522,"name":"AccountAccess","nodeType":"UserDefinedTypeName","referencedDeclaration":12028,"src":"19933:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$12028_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":12523,"length":null,"nodeType":"ArrayTypeName","src":"19933:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12028_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"value":null,"visibility":"internal"}],"src":"19932:40:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12530,"nodeType":"FunctionDefinition","src":"20069:41:14","nodes":[],"documentation":{"id":12527,"nodeType":"StructuredDocumentation","src":"19979:85:14","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","overrides":null,"parameters":{"id":12528,"nodeType":"ParameterList","parameters":[],"src":"20098:2:14"},"returnParameters":{"id":12529,"nodeType":"ParameterList","parameters":[],"src":"20109:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12536,"nodeType":"FunctionDefinition","src":"20309:50:14","nodes":[],"documentation":{"id":12531,"nodeType":"StructuredDocumentation","src":"20153:151:14","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","overrides":null,"parameters":{"id":12534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12533,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12536,"src":"20328:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12532,"name":"string","nodeType":"ElementaryTypeName","src":"20328:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"20327:22:14"},"returnParameters":{"id":12535,"nodeType":"ParameterList","parameters":[],"src":"20358:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12546,"nodeType":"FunctionDefinition","src":"20674:93:14","nodes":[],"documentation":{"id":12537,"nodeType":"StructuredDocumentation","src":"20365:304:14","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","overrides":null,"parameters":{"id":12542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12539,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":12546,"src":"20692:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12538,"name":"string","nodeType":"ElementaryTypeName","src":"20692:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12541,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":12546,"src":"20714:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12540,"name":"string","nodeType":"ElementaryTypeName","src":"20714:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"20691:42:14"},"returnParameters":{"id":12545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12544,"mutability":"mutable","name":"copied","nodeType":"VariableDeclaration","overrides":null,"scope":12546,"src":"20752:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12543,"name":"uint64","nodeType":"ElementaryTypeName","src":"20752:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"20751:15:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12554,"nodeType":"FunctionDefinition","src":"21172:66:14","nodes":[],"documentation":{"id":12547,"nodeType":"StructuredDocumentation","src":"20773:394:14","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","overrides":null,"parameters":{"id":12552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12549,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12554,"src":"21191:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12548,"name":"string","nodeType":"ElementaryTypeName","src":"21191:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12551,"mutability":"mutable","name":"recursive","nodeType":"VariableDeclaration","overrides":null,"scope":12554,"src":"21213:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12550,"name":"bool","nodeType":"ElementaryTypeName","src":"21213:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21190:38:14"},"returnParameters":{"id":12553,"nodeType":"ParameterList","parameters":[],"src":"21237:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12562,"nodeType":"FunctionDefinition","src":"21333:69:14","nodes":[],"documentation":{"id":12555,"nodeType":"StructuredDocumentation","src":"21244:84:14","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","overrides":null,"parameters":{"id":12558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12557,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12562,"src":"21349:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12556,"name":"string","nodeType":"ElementaryTypeName","src":"21349:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"21348:22:14"},"returnParameters":{"id":12561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12560,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":12562,"src":"21389:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12559,"name":"bool","nodeType":"ElementaryTypeName","src":"21389:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21388:13:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12571,"nodeType":"FunctionDefinition","src":"21467:84:14","nodes":[],"documentation":{"id":12563,"nodeType":"StructuredDocumentation","src":"21408:54:14","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","overrides":null,"parameters":{"id":12567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12566,"mutability":"mutable","name":"commandInput","nodeType":"VariableDeclaration","overrides":null,"scope":12571,"src":"21480:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12564,"name":"string","nodeType":"ElementaryTypeName","src":"21480:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12565,"length":null,"nodeType":"ArrayTypeName","src":"21480:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"21479:32:14"},"returnParameters":{"id":12570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12569,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":12571,"src":"21530:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12568,"name":"bytes","nodeType":"ElementaryTypeName","src":"21530:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"21529:21:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12579,"nodeType":"FunctionDefinition","src":"21650:93:14","nodes":[],"documentation":{"id":12572,"nodeType":"StructuredDocumentation","src":"21557:88:14","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","overrides":null,"parameters":{"id":12575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12574,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12579,"src":"21670:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12573,"name":"string","nodeType":"ElementaryTypeName","src":"21670:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"21669:22:14"},"returnParameters":{"id":12578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12577,"mutability":"mutable","name":"metadata","nodeType":"VariableDeclaration","overrides":null,"scope":12579,"src":"21715:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$11979_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"contractScope":null,"id":12576,"name":"FsMetadata","nodeType":"UserDefinedTypeName","referencedDeclaration":11979,"src":"21715:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$11979_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"value":null,"visibility":"internal"}],"src":"21714:28:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12587,"nodeType":"FunctionDefinition","src":"21852:101:14","nodes":[],"documentation":{"id":12580,"nodeType":"StructuredDocumentation","src":"21749:98:14","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","overrides":null,"parameters":{"id":12583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12582,"mutability":"mutable","name":"artifactPath","nodeType":"VariableDeclaration","overrides":null,"scope":12587,"src":"21869:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12581,"name":"string","nodeType":"ElementaryTypeName","src":"21869:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"21868:30:14"},"returnParameters":{"id":12586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12585,"mutability":"mutable","name":"creationBytecode","nodeType":"VariableDeclaration","overrides":null,"scope":12587,"src":"21922:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12584,"name":"bytes","nodeType":"ElementaryTypeName","src":"21922:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"21921:31:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12595,"nodeType":"FunctionDefinition","src":"22062:108:14","nodes":[],"documentation":{"id":12588,"nodeType":"StructuredDocumentation","src":"21959:98:14","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","overrides":null,"parameters":{"id":12591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12590,"mutability":"mutable","name":"artifactPath","nodeType":"VariableDeclaration","overrides":null,"scope":12595,"src":"22087:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12589,"name":"string","nodeType":"ElementaryTypeName","src":"22087:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"22086:30:14"},"returnParameters":{"id":12594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12593,"mutability":"mutable","name":"runtimeBytecode","nodeType":"VariableDeclaration","overrides":null,"scope":12595,"src":"22140:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12592,"name":"bytes","nodeType":"ElementaryTypeName","src":"22140:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"22139:30:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12603,"nodeType":"FunctionDefinition","src":"22276:68:14","nodes":[],"documentation":{"id":12596,"nodeType":"StructuredDocumentation","src":"22176:95:14","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","overrides":null,"parameters":{"id":12599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12598,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12603,"src":"22291:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12597,"name":"string","nodeType":"ElementaryTypeName","src":"22291:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"22290:22:14"},"returnParameters":{"id":12602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12601,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":12603,"src":"22331:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12600,"name":"bool","nodeType":"ElementaryTypeName","src":"22331:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"22330:13:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12611,"nodeType":"FunctionDefinition","src":"22453:69:14","nodes":[],"documentation":{"id":12604,"nodeType":"StructuredDocumentation","src":"22350:98:14","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","overrides":null,"parameters":{"id":12607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12606,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12611,"src":"22469:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12605,"name":"string","nodeType":"ElementaryTypeName","src":"22469:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"22468:22:14"},"returnParameters":{"id":12610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12609,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":12611,"src":"22509:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12608,"name":"bool","nodeType":"ElementaryTypeName","src":"22509:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"22508:13:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12617,"nodeType":"FunctionDefinition","src":"22578:66:14","nodes":[],"documentation":{"id":12612,"nodeType":"StructuredDocumentation","src":"22528:45:14","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","overrides":null,"parameters":{"id":12613,"nodeType":"ParameterList","parameters":[],"src":"22598:2:14"},"returnParameters":{"id":12616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12615,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12617,"src":"22624:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12614,"name":"string","nodeType":"ElementaryTypeName","src":"22624:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"22623:20:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12626,"nodeType":"FunctionDefinition","src":"22892:89:14","nodes":[],"documentation":{"id":12618,"nodeType":"StructuredDocumentation","src":"22650:237:14","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","overrides":null,"parameters":{"id":12621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12620,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12626,"src":"22909:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12619,"name":"string","nodeType":"ElementaryTypeName","src":"22909:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"22908:22:14"},"returnParameters":{"id":12625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12624,"mutability":"mutable","name":"entries","nodeType":"VariableDeclaration","overrides":null,"scope":12626,"src":"22954:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11964_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"contractScope":null,"id":12622,"name":"DirEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":11964,"src":"22954:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$11964_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12623,"length":null,"nodeType":"ArrayTypeName","src":"22954:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11964_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"value":null,"visibility":"internal"}],"src":"22953:27:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12637,"nodeType":"FunctionDefinition","src":"23018:106:14","nodes":[],"documentation":{"id":12627,"nodeType":"StructuredDocumentation","src":"22987:26:14","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","overrides":null,"parameters":{"id":12632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12629,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12637,"src":"23035:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12628,"name":"string","nodeType":"ElementaryTypeName","src":"23035:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12631,"mutability":"mutable","name":"maxDepth","nodeType":"VariableDeclaration","overrides":null,"scope":12637,"src":"23057:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12630,"name":"uint64","nodeType":"ElementaryTypeName","src":"23057:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"23034:39:14"},"returnParameters":{"id":12636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12635,"mutability":"mutable","name":"entries","nodeType":"VariableDeclaration","overrides":null,"scope":12637,"src":"23097:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11964_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"contractScope":null,"id":12633,"name":"DirEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":11964,"src":"23097:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$11964_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12634,"length":null,"nodeType":"ArrayTypeName","src":"23097:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11964_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"value":null,"visibility":"internal"}],"src":"23096:27:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12650,"nodeType":"FunctionDefinition","src":"23161:148:14","nodes":[],"documentation":{"id":12638,"nodeType":"StructuredDocumentation","src":"23130:26:14","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","overrides":null,"parameters":{"id":12645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12640,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12650,"src":"23178:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12639,"name":"string","nodeType":"ElementaryTypeName","src":"23178:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12642,"mutability":"mutable","name":"maxDepth","nodeType":"VariableDeclaration","overrides":null,"scope":12650,"src":"23200:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12641,"name":"uint64","nodeType":"ElementaryTypeName","src":"23200:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":12644,"mutability":"mutable","name":"followLinks","nodeType":"VariableDeclaration","overrides":null,"scope":12650,"src":"23217:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12643,"name":"bool","nodeType":"ElementaryTypeName","src":"23217:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"23177:57:14"},"returnParameters":{"id":12649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12648,"mutability":"mutable","name":"entries","nodeType":"VariableDeclaration","overrides":null,"scope":12650,"src":"23282:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11964_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"contractScope":null,"id":12646,"name":"DirEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":11964,"src":"23282:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$11964_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12647,"length":null,"nodeType":"ArrayTypeName","src":"23282:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11964_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"value":null,"visibility":"internal"}],"src":"23281:27:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12658,"nodeType":"FunctionDefinition","src":"23407:83:14","nodes":[],"documentation":{"id":12651,"nodeType":"StructuredDocumentation","src":"23315:87:14","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","overrides":null,"parameters":{"id":12654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12653,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12658,"src":"23425:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12652,"name":"string","nodeType":"ElementaryTypeName","src":"23425:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"23424:22:14"},"returnParameters":{"id":12657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12656,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":12658,"src":"23470:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12655,"name":"string","nodeType":"ElementaryTypeName","src":"23470:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"23469:20:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12666,"nodeType":"FunctionDefinition","src":"23588:88:14","nodes":[],"documentation":{"id":12659,"nodeType":"StructuredDocumentation","src":"23496:87:14","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","overrides":null,"parameters":{"id":12662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12661,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12666,"src":"23612:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12660,"name":"string","nodeType":"ElementaryTypeName","src":"23612:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"23611:22:14"},"returnParameters":{"id":12665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12664,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":12666,"src":"23657:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12663,"name":"bytes","nodeType":"ElementaryTypeName","src":"23657:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"23656:19:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12674,"nodeType":"FunctionDefinition","src":"23725:83:14","nodes":[],"documentation":{"id":12667,"nodeType":"StructuredDocumentation","src":"23682:38:14","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","overrides":null,"parameters":{"id":12670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12669,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12674,"src":"23743:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12668,"name":"string","nodeType":"ElementaryTypeName","src":"23743:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"23742:22:14"},"returnParameters":{"id":12673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12672,"mutability":"mutable","name":"line","nodeType":"VariableDeclaration","overrides":null,"scope":12674,"src":"23788:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12671,"name":"string","nodeType":"ElementaryTypeName","src":"23788:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"23787:20:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12682,"nodeType":"FunctionDefinition","src":"24067:93:14","nodes":[],"documentation":{"id":12675,"nodeType":"StructuredDocumentation","src":"23814:248:14","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","overrides":null,"parameters":{"id":12678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12677,"mutability":"mutable","name":"linkPath","nodeType":"VariableDeclaration","overrides":null,"scope":12682,"src":"24085:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12676,"name":"string","nodeType":"ElementaryTypeName","src":"24085:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"24084:26:14"},"returnParameters":{"id":12681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12680,"mutability":"mutable","name":"targetPath","nodeType":"VariableDeclaration","overrides":null,"scope":12682,"src":"24134:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12679,"name":"string","nodeType":"ElementaryTypeName","src":"24134:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"24133:26:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12690,"nodeType":"FunctionDefinition","src":"24550:66:14","nodes":[],"documentation":{"id":12683,"nodeType":"StructuredDocumentation","src":"24166:379:14","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","overrides":null,"parameters":{"id":12688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12685,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12690,"src":"24569:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12684,"name":"string","nodeType":"ElementaryTypeName","src":"24569:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12687,"mutability":"mutable","name":"recursive","nodeType":"VariableDeclaration","overrides":null,"scope":12690,"src":"24591:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12686,"name":"bool","nodeType":"ElementaryTypeName","src":"24591:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"24568:38:14"},"returnParameters":{"id":12689,"nodeType":"ParameterList","parameters":[],"src":"24615:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12696,"nodeType":"FunctionDefinition","src":"24949:51:14","nodes":[],"documentation":{"id":12691,"nodeType":"StructuredDocumentation","src":"24622:322:14","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","overrides":null,"parameters":{"id":12694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12693,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12696,"src":"24969:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12692,"name":"string","nodeType":"ElementaryTypeName","src":"24969:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"24968:22:14"},"returnParameters":{"id":12695,"nodeType":"ParameterList","parameters":[],"src":"24999:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12705,"nodeType":"FunctionDefinition","src":"25107:91:14","nodes":[],"documentation":{"id":12697,"nodeType":"StructuredDocumentation","src":"25006:96:14","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","overrides":null,"parameters":{"id":12701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12700,"mutability":"mutable","name":"commandInput","nodeType":"VariableDeclaration","overrides":null,"scope":12705,"src":"25123:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12698,"name":"string","nodeType":"ElementaryTypeName","src":"25123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12699,"length":null,"nodeType":"ArrayTypeName","src":"25123:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"25122:32:14"},"returnParameters":{"id":12704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12703,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":12705,"src":"25173:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$11995_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"contractScope":null,"id":12702,"name":"FfiResult","nodeType":"UserDefinedTypeName","referencedDeclaration":11995,"src":"25173:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$11995_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"value":null,"visibility":"internal"}],"src":"25172:25:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12711,"nodeType":"FunctionDefinition","src":"25263:60:14","nodes":[],"documentation":{"id":12706,"nodeType":"StructuredDocumentation","src":"25204:54:14","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","overrides":null,"parameters":{"id":12707,"nodeType":"ParameterList","parameters":[],"src":"25280:2:14"},"returnParameters":{"id":12710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12709,"mutability":"mutable","name":"milliseconds","nodeType":"VariableDeclaration","overrides":null,"scope":12711,"src":"25301:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12708,"name":"uint256","nodeType":"ElementaryTypeName","src":"25301:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25300:22:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12719,"nodeType":"FunctionDefinition","src":"25492:72:14","nodes":[],"documentation":{"id":12712,"nodeType":"StructuredDocumentation","src":"25329:158:14","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","overrides":null,"parameters":{"id":12717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12714,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12719,"src":"25511:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12713,"name":"string","nodeType":"ElementaryTypeName","src":"25511:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12716,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":12719,"src":"25533:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12715,"name":"string","nodeType":"ElementaryTypeName","src":"25533:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"25510:44:14"},"returnParameters":{"id":12718,"nodeType":"ParameterList","parameters":[],"src":"25563:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12727,"nodeType":"FunctionDefinition","src":"25742:77:14","nodes":[],"documentation":{"id":12720,"nodeType":"StructuredDocumentation","src":"25570:167:14","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","overrides":null,"parameters":{"id":12725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12722,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12727,"src":"25767:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12721,"name":"string","nodeType":"ElementaryTypeName","src":"25767:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12724,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":12727,"src":"25789:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12723,"name":"bytes","nodeType":"ElementaryTypeName","src":"25789:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"25766:43:14"},"returnParameters":{"id":12726,"nodeType":"ParameterList","parameters":[],"src":"25818:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12735,"nodeType":"FunctionDefinition","src":"25940:72:14","nodes":[],"documentation":{"id":12728,"nodeType":"StructuredDocumentation","src":"25825:110:14","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","overrides":null,"parameters":{"id":12733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12730,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":12735,"src":"25959:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12729,"name":"string","nodeType":"ElementaryTypeName","src":"25959:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12732,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":12735,"src":"25981:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12731,"name":"string","nodeType":"ElementaryTypeName","src":"25981:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"25958:44:14"},"returnParameters":{"id":12734,"nodeType":"ParameterList","parameters":[],"src":"26011:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12745,"nodeType":"FunctionDefinition","src":"26205:91:14","nodes":[],"documentation":{"id":12736,"nodeType":"StructuredDocumentation","src":"26049:151:14","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","overrides":null,"parameters":{"id":12741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12738,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12745,"src":"26224:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12737,"name":"string","nodeType":"ElementaryTypeName","src":"26224:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12740,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12745,"src":"26246:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12739,"name":"string","nodeType":"ElementaryTypeName","src":"26246:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"26223:43:14"},"returnParameters":{"id":12744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12743,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12745,"src":"26290:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12742,"name":"bool","nodeType":"ElementaryTypeName","src":"26290:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"26289:6:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12755,"nodeType":"FunctionDefinition","src":"26351:95:14","nodes":[],"documentation":{"id":12746,"nodeType":"StructuredDocumentation","src":"26302:44:14","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","overrides":null,"parameters":{"id":12751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12748,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12755,"src":"26374:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12747,"name":"string","nodeType":"ElementaryTypeName","src":"26374:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12750,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12755,"src":"26396:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12749,"name":"string","nodeType":"ElementaryTypeName","src":"26396:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"26373:43:14"},"returnParameters":{"id":12754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12753,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12755,"src":"26440:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12752,"name":"bool","nodeType":"ElementaryTypeName","src":"26440:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"26439:6:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12765,"nodeType":"FunctionDefinition","src":"26527:101:14","nodes":[],"documentation":{"id":12756,"nodeType":"StructuredDocumentation","src":"26452:70:14","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","overrides":null,"parameters":{"id":12761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12758,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12765,"src":"26553:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12757,"name":"string","nodeType":"ElementaryTypeName","src":"26553:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12760,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12765,"src":"26575:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12759,"name":"string","nodeType":"ElementaryTypeName","src":"26575:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"26552:43:14"},"returnParameters":{"id":12764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12763,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12765,"src":"26619:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12762,"name":"address","nodeType":"ElementaryTypeName","src":"26619:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"26618:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12776,"nodeType":"FunctionDefinition","src":"26711:139:14","nodes":[],"documentation":{"id":12766,"nodeType":"StructuredDocumentation","src":"26634:72:14","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","overrides":null,"parameters":{"id":12771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12768,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12776,"src":"26742:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12767,"name":"string","nodeType":"ElementaryTypeName","src":"26742:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12770,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12776,"src":"26764:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12769,"name":"string","nodeType":"ElementaryTypeName","src":"26764:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"26741:43:14"},"returnParameters":{"id":12775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12774,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12776,"src":"26832:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12772,"name":"address","nodeType":"ElementaryTypeName","src":"26832:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12773,"length":null,"nodeType":"ArrayTypeName","src":"26832:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"26831:18:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12786,"nodeType":"FunctionDefinition","src":"26928:95:14","nodes":[],"documentation":{"id":12777,"nodeType":"StructuredDocumentation","src":"26856:67:14","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","overrides":null,"parameters":{"id":12782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12779,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12786,"src":"26951:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12778,"name":"string","nodeType":"ElementaryTypeName","src":"26951:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12781,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12786,"src":"26973:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12780,"name":"string","nodeType":"ElementaryTypeName","src":"26973:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"26950:43:14"},"returnParameters":{"id":12785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12784,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12786,"src":"27017:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12783,"name":"bool","nodeType":"ElementaryTypeName","src":"27017:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"27016:6:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12797,"nodeType":"FunctionDefinition","src":"27103:109:14","nodes":[],"documentation":{"id":12787,"nodeType":"StructuredDocumentation","src":"27029:69:14","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","overrides":null,"parameters":{"id":12792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12789,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12797,"src":"27131:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12788,"name":"string","nodeType":"ElementaryTypeName","src":"27131:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12791,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12797,"src":"27153:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12790,"name":"string","nodeType":"ElementaryTypeName","src":"27153:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"27130:43:14"},"returnParameters":{"id":12796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12795,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12797,"src":"27197:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12793,"name":"bool","nodeType":"ElementaryTypeName","src":"27197:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12794,"length":null,"nodeType":"ArrayTypeName","src":"27197:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"}],"src":"27196:15:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12807,"nodeType":"FunctionDefinition","src":"27291:104:14","nodes":[],"documentation":{"id":12798,"nodeType":"StructuredDocumentation","src":"27218:68:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","overrides":null,"parameters":{"id":12803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12800,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12807,"src":"27315:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12799,"name":"string","nodeType":"ElementaryTypeName","src":"27315:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12802,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12807,"src":"27337:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12801,"name":"string","nodeType":"ElementaryTypeName","src":"27337:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"27314:43:14"},"returnParameters":{"id":12806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12805,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12807,"src":"27381:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12804,"name":"bytes","nodeType":"ElementaryTypeName","src":"27381:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"27380:14:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12817,"nodeType":"FunctionDefinition","src":"27476:101:14","nodes":[],"documentation":{"id":12808,"nodeType":"StructuredDocumentation","src":"27401:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","overrides":null,"parameters":{"id":12813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12810,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12817,"src":"27502:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12809,"name":"string","nodeType":"ElementaryTypeName","src":"27502:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12812,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12817,"src":"27524:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12811,"name":"string","nodeType":"ElementaryTypeName","src":"27524:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"27501:43:14"},"returnParameters":{"id":12816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12815,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12817,"src":"27568:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27568:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"27567:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12828,"nodeType":"FunctionDefinition","src":"27660:139:14","nodes":[],"documentation":{"id":12818,"nodeType":"StructuredDocumentation","src":"27583:72:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","overrides":null,"parameters":{"id":12823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12820,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12828,"src":"27691:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12819,"name":"string","nodeType":"ElementaryTypeName","src":"27691:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12822,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12828,"src":"27713:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12821,"name":"string","nodeType":"ElementaryTypeName","src":"27713:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"27690:43:14"},"returnParameters":{"id":12827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12826,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12828,"src":"27781:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27781:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12825,"length":null,"nodeType":"ArrayTypeName","src":"27781:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"27780:18:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12839,"nodeType":"FunctionDefinition","src":"27880:111:14","nodes":[],"documentation":{"id":12829,"nodeType":"StructuredDocumentation","src":"27805:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","overrides":null,"parameters":{"id":12834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12831,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12839,"src":"27909:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12830,"name":"string","nodeType":"ElementaryTypeName","src":"27909:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12833,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12839,"src":"27931:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12832,"name":"string","nodeType":"ElementaryTypeName","src":"27931:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"27908:43:14"},"returnParameters":{"id":12838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12837,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12839,"src":"27975:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12835,"name":"bytes","nodeType":"ElementaryTypeName","src":"27975:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12836,"length":null,"nodeType":"ArrayTypeName","src":"27975:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"}],"src":"27974:16:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12849,"nodeType":"FunctionDefinition","src":"28071:96:14","nodes":[],"documentation":{"id":12840,"nodeType":"StructuredDocumentation","src":"27997:69:14","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","overrides":null,"parameters":{"id":12845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12842,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12849,"src":"28093:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12841,"name":"string","nodeType":"ElementaryTypeName","src":"28093:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12844,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12849,"src":"28115:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12843,"name":"string","nodeType":"ElementaryTypeName","src":"28115:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"28092:43:14"},"returnParameters":{"id":12848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12847,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12849,"src":"28159:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12846,"name":"int256","nodeType":"ElementaryTypeName","src":"28159:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"28158:8:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12860,"nodeType":"FunctionDefinition","src":"28249:110:14","nodes":[],"documentation":{"id":12850,"nodeType":"StructuredDocumentation","src":"28173:71:14","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","overrides":null,"parameters":{"id":12855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12852,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12860,"src":"28276:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12851,"name":"string","nodeType":"ElementaryTypeName","src":"28276:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12854,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12860,"src":"28298:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12853,"name":"string","nodeType":"ElementaryTypeName","src":"28298:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"28275:43:14"},"returnParameters":{"id":12859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12858,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12860,"src":"28342:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12856,"name":"int256","nodeType":"ElementaryTypeName","src":"28342:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12857,"length":null,"nodeType":"ArrayTypeName","src":"28342:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"}],"src":"28341:17:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12871,"nodeType":"FunctionDefinition","src":"28424:111:14","nodes":[],"documentation":{"id":12861,"nodeType":"StructuredDocumentation","src":"28365:54:14","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","overrides":null,"parameters":{"id":12866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12863,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12871,"src":"28447:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12862,"name":"string","nodeType":"ElementaryTypeName","src":"28447:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12865,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12871,"src":"28469:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12864,"name":"string","nodeType":"ElementaryTypeName","src":"28469:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"28446:43:14"},"returnParameters":{"id":12870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12869,"mutability":"mutable","name":"keys","nodeType":"VariableDeclaration","overrides":null,"scope":12871,"src":"28513:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12867,"name":"string","nodeType":"ElementaryTypeName","src":"28513:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12868,"length":null,"nodeType":"ArrayTypeName","src":"28513:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"28512:22:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12881,"nodeType":"FunctionDefinition","src":"28615:106:14","nodes":[],"documentation":{"id":12872,"nodeType":"StructuredDocumentation","src":"28541:69:14","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","overrides":null,"parameters":{"id":12877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12874,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12881,"src":"28640:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12873,"name":"string","nodeType":"ElementaryTypeName","src":"28640:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12876,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12881,"src":"28662:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12875,"name":"string","nodeType":"ElementaryTypeName","src":"28662:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"28639:43:14"},"returnParameters":{"id":12880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12879,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12881,"src":"28706:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12878,"name":"string","nodeType":"ElementaryTypeName","src":"28706:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"28705:15:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12892,"nodeType":"FunctionDefinition","src":"28803:113:14","nodes":[],"documentation":{"id":12882,"nodeType":"StructuredDocumentation","src":"28727:71:14","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","overrides":null,"parameters":{"id":12887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12884,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12892,"src":"28833:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12883,"name":"string","nodeType":"ElementaryTypeName","src":"28833:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12886,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12892,"src":"28855:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12885,"name":"string","nodeType":"ElementaryTypeName","src":"28855:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"28832:43:14"},"returnParameters":{"id":12891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12890,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12892,"src":"28899:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12888,"name":"string","nodeType":"ElementaryTypeName","src":"28899:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12889,"length":null,"nodeType":"ArrayTypeName","src":"28899:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"28898:17:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12902,"nodeType":"FunctionDefinition","src":"28997:98:14","nodes":[],"documentation":{"id":12893,"nodeType":"StructuredDocumentation","src":"28922:70:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","overrides":null,"parameters":{"id":12898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12895,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12902,"src":"29020:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12894,"name":"string","nodeType":"ElementaryTypeName","src":"29020:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12897,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12902,"src":"29042:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12896,"name":"string","nodeType":"ElementaryTypeName","src":"29042:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"29019:43:14"},"returnParameters":{"id":12901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12900,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12902,"src":"29086:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12899,"name":"uint256","nodeType":"ElementaryTypeName","src":"29086:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"29085:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12913,"nodeType":"FunctionDefinition","src":"29178:112:14","nodes":[],"documentation":{"id":12903,"nodeType":"StructuredDocumentation","src":"29101:72:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","overrides":null,"parameters":{"id":12908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12905,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12913,"src":"29206:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12904,"name":"string","nodeType":"ElementaryTypeName","src":"29206:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12907,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12913,"src":"29228:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12906,"name":"string","nodeType":"ElementaryTypeName","src":"29228:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"29205:43:14"},"returnParameters":{"id":12912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12911,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12913,"src":"29272:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12909,"name":"uint256","nodeType":"ElementaryTypeName","src":"29272:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12910,"length":null,"nodeType":"ArrayTypeName","src":"29272:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"29271:18:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12921,"nodeType":"FunctionDefinition","src":"29331:93:14","nodes":[],"documentation":{"id":12914,"nodeType":"StructuredDocumentation","src":"29296:30:14","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","overrides":null,"parameters":{"id":12917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12916,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12921,"src":"29350:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12915,"name":"string","nodeType":"ElementaryTypeName","src":"29350:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"29349:22:14"},"returnParameters":{"id":12920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12919,"mutability":"mutable","name":"abiEncodedData","nodeType":"VariableDeclaration","overrides":null,"scope":12921,"src":"29395:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12918,"name":"bytes","nodeType":"ElementaryTypeName","src":"29395:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"29394:29:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12931,"nodeType":"FunctionDefinition","src":"29474:114:14","nodes":[],"documentation":{"id":12922,"nodeType":"StructuredDocumentation","src":"29430:39:14","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","overrides":null,"parameters":{"id":12927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12924,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12931,"src":"29493:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12923,"name":"string","nodeType":"ElementaryTypeName","src":"29493:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12926,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":12931,"src":"29515:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12925,"name":"string","nodeType":"ElementaryTypeName","src":"29515:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"29492:43:14"},"returnParameters":{"id":12930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12929,"mutability":"mutable","name":"abiEncodedData","nodeType":"VariableDeclaration","overrides":null,"scope":12931,"src":"29559:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12928,"name":"bytes","nodeType":"ElementaryTypeName","src":"29559:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"29558:29:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12943,"nodeType":"FunctionDefinition","src":"29623:148:14","nodes":[],"documentation":{"id":12932,"nodeType":"StructuredDocumentation","src":"29594:24:14","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","overrides":null,"parameters":{"id":12939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12934,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":12943,"src":"29649:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12933,"name":"string","nodeType":"ElementaryTypeName","src":"29649:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12936,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":12943,"src":"29676:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12935,"name":"string","nodeType":"ElementaryTypeName","src":"29676:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12938,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12943,"src":"29702:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12937,"name":"address","nodeType":"ElementaryTypeName","src":"29702:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"29648:68:14"},"returnParameters":{"id":12942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12941,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12943,"src":"29751:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12940,"name":"string","nodeType":"ElementaryTypeName","src":"29751:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"29750:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12956,"nodeType":"FunctionDefinition","src":"29806:160:14","nodes":[],"documentation":{"id":12944,"nodeType":"StructuredDocumentation","src":"29777:24:14","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","overrides":null,"parameters":{"id":12952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12946,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":12956,"src":"29832:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12945,"name":"string","nodeType":"ElementaryTypeName","src":"29832:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12948,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":12956,"src":"29859:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12947,"name":"string","nodeType":"ElementaryTypeName","src":"29859:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12951,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","overrides":null,"scope":12956,"src":"29885:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12949,"name":"address","nodeType":"ElementaryTypeName","src":"29885:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12950,"length":null,"nodeType":"ArrayTypeName","src":"29885:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"29831:80:14"},"returnParameters":{"id":12955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12954,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12956,"src":"29946:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12953,"name":"string","nodeType":"ElementaryTypeName","src":"29946:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"29945:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12968,"nodeType":"FunctionDefinition","src":"30001:142:14","nodes":[],"documentation":{"id":12957,"nodeType":"StructuredDocumentation","src":"29972:24:14","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","overrides":null,"parameters":{"id":12964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12959,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":12968,"src":"30024:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12958,"name":"string","nodeType":"ElementaryTypeName","src":"30024:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12961,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":12968,"src":"30051:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12960,"name":"string","nodeType":"ElementaryTypeName","src":"30051:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12963,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12968,"src":"30077:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12962,"name":"bool","nodeType":"ElementaryTypeName","src":"30077:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"30023:65:14"},"returnParameters":{"id":12967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12966,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12968,"src":"30123:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12965,"name":"string","nodeType":"ElementaryTypeName","src":"30123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"30122:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12981,"nodeType":"FunctionDefinition","src":"30178:154:14","nodes":[],"documentation":{"id":12969,"nodeType":"StructuredDocumentation","src":"30149:24:14","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","overrides":null,"parameters":{"id":12977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12971,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":12981,"src":"30201:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12970,"name":"string","nodeType":"ElementaryTypeName","src":"30201:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12973,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":12981,"src":"30228:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12972,"name":"string","nodeType":"ElementaryTypeName","src":"30228:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12976,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","overrides":null,"scope":12981,"src":"30254:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12974,"name":"bool","nodeType":"ElementaryTypeName","src":"30254:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12975,"length":null,"nodeType":"ArrayTypeName","src":"30254:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"}],"src":"30200:77:14"},"returnParameters":{"id":12980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12979,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12981,"src":"30312:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12978,"name":"string","nodeType":"ElementaryTypeName","src":"30312:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"30311:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12993,"nodeType":"FunctionDefinition","src":"30367:148:14","nodes":[],"documentation":{"id":12982,"nodeType":"StructuredDocumentation","src":"30338:24:14","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","overrides":null,"parameters":{"id":12989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12984,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":12993,"src":"30393:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12983,"name":"string","nodeType":"ElementaryTypeName","src":"30393:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12986,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":12993,"src":"30420:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12985,"name":"string","nodeType":"ElementaryTypeName","src":"30420:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12988,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":12993,"src":"30446:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30446:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"30392:68:14"},"returnParameters":{"id":12992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12991,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":12993,"src":"30495:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12990,"name":"string","nodeType":"ElementaryTypeName","src":"30495:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"30494:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13006,"nodeType":"FunctionDefinition","src":"30550:160:14","nodes":[],"documentation":{"id":12994,"nodeType":"StructuredDocumentation","src":"30521:24:14","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","overrides":null,"parameters":{"id":13002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12996,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13006,"src":"30576:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12995,"name":"string","nodeType":"ElementaryTypeName","src":"30576:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":12998,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13006,"src":"30603:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12997,"name":"string","nodeType":"ElementaryTypeName","src":"30603:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13001,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","overrides":null,"scope":13006,"src":"30629:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30629:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13000,"length":null,"nodeType":"ArrayTypeName","src":"30629:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"30575:80:14"},"returnParameters":{"id":13005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13004,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13006,"src":"30690:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13003,"name":"string","nodeType":"ElementaryTypeName","src":"30690:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"30689:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13018,"nodeType":"FunctionDefinition","src":"30745:153:14","nodes":[],"documentation":{"id":13007,"nodeType":"StructuredDocumentation","src":"30716:24:14","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","overrides":null,"parameters":{"id":13014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13009,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13018,"src":"30769:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13008,"name":"string","nodeType":"ElementaryTypeName","src":"30769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13011,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13018,"src":"30796:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13010,"name":"string","nodeType":"ElementaryTypeName","src":"30796:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13013,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13018,"src":"30822:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13012,"name":"bytes","nodeType":"ElementaryTypeName","src":"30822:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"30768:75:14"},"returnParameters":{"id":13017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13016,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13018,"src":"30878:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13015,"name":"string","nodeType":"ElementaryTypeName","src":"30878:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"30877:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13031,"nodeType":"FunctionDefinition","src":"30933:156:14","nodes":[],"documentation":{"id":13019,"nodeType":"StructuredDocumentation","src":"30904:24:14","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","overrides":null,"parameters":{"id":13027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13021,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13031,"src":"30957:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13020,"name":"string","nodeType":"ElementaryTypeName","src":"30957:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13023,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13031,"src":"30984:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13022,"name":"string","nodeType":"ElementaryTypeName","src":"30984:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13026,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","overrides":null,"scope":13031,"src":"31010:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13024,"name":"bytes","nodeType":"ElementaryTypeName","src":"31010:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13025,"length":null,"nodeType":"ArrayTypeName","src":"31010:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"}],"src":"30956:78:14"},"returnParameters":{"id":13030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13029,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13031,"src":"31069:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13028,"name":"string","nodeType":"ElementaryTypeName","src":"31069:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"31068:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13043,"nodeType":"FunctionDefinition","src":"31124:143:14","nodes":[],"documentation":{"id":13032,"nodeType":"StructuredDocumentation","src":"31095:24:14","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","overrides":null,"parameters":{"id":13039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13034,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13043,"src":"31146:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13033,"name":"string","nodeType":"ElementaryTypeName","src":"31146:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13036,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13043,"src":"31173:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13035,"name":"string","nodeType":"ElementaryTypeName","src":"31173:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13038,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13043,"src":"31199:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13037,"name":"int256","nodeType":"ElementaryTypeName","src":"31199:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"31145:67:14"},"returnParameters":{"id":13042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13041,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13043,"src":"31247:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13040,"name":"string","nodeType":"ElementaryTypeName","src":"31247:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"31246:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13056,"nodeType":"FunctionDefinition","src":"31302:155:14","nodes":[],"documentation":{"id":13044,"nodeType":"StructuredDocumentation","src":"31273:24:14","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","overrides":null,"parameters":{"id":13052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13046,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13056,"src":"31324:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13045,"name":"string","nodeType":"ElementaryTypeName","src":"31324:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13048,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13056,"src":"31351:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13047,"name":"string","nodeType":"ElementaryTypeName","src":"31351:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13051,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","overrides":null,"scope":13056,"src":"31377:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13049,"name":"int256","nodeType":"ElementaryTypeName","src":"31377:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13050,"length":null,"nodeType":"ArrayTypeName","src":"31377:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"}],"src":"31323:79:14"},"returnParameters":{"id":13055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13054,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13056,"src":"31437:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13053,"name":"string","nodeType":"ElementaryTypeName","src":"31437:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"31436:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13066,"nodeType":"FunctionDefinition","src":"31654:111:14","nodes":[],"documentation":{"id":13057,"nodeType":"StructuredDocumentation","src":"31463:186:14","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","overrides":null,"parameters":{"id":13062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13059,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13066,"src":"31677:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13058,"name":"string","nodeType":"ElementaryTypeName","src":"31677:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13061,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13066,"src":"31704:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13060,"name":"string","nodeType":"ElementaryTypeName","src":"31704:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"31676:50:14"},"returnParameters":{"id":13065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13064,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13066,"src":"31745:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13063,"name":"string","nodeType":"ElementaryTypeName","src":"31745:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"31744:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13078,"nodeType":"FunctionDefinition","src":"31800:155:14","nodes":[],"documentation":{"id":13067,"nodeType":"StructuredDocumentation","src":"31771:24:14","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","overrides":null,"parameters":{"id":13074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13069,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13078,"src":"31825:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13068,"name":"string","nodeType":"ElementaryTypeName","src":"31825:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13071,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13078,"src":"31852:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13070,"name":"string","nodeType":"ElementaryTypeName","src":"31852:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13073,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13078,"src":"31878:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13072,"name":"string","nodeType":"ElementaryTypeName","src":"31878:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"31824:76:14"},"returnParameters":{"id":13077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13076,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13078,"src":"31935:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13075,"name":"string","nodeType":"ElementaryTypeName","src":"31935:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"31934:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13091,"nodeType":"FunctionDefinition","src":"31990:158:14","nodes":[],"documentation":{"id":13079,"nodeType":"StructuredDocumentation","src":"31961:24:14","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","overrides":null,"parameters":{"id":13087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13081,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13091,"src":"32015:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13080,"name":"string","nodeType":"ElementaryTypeName","src":"32015:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13083,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13091,"src":"32042:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13082,"name":"string","nodeType":"ElementaryTypeName","src":"32042:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13086,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","overrides":null,"scope":13091,"src":"32068:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13084,"name":"string","nodeType":"ElementaryTypeName","src":"32068:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13085,"length":null,"nodeType":"ArrayTypeName","src":"32068:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"32014:79:14"},"returnParameters":{"id":13090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13089,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13091,"src":"32128:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13088,"name":"string","nodeType":"ElementaryTypeName","src":"32128:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"32127:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13103,"nodeType":"FunctionDefinition","src":"32183:145:14","nodes":[],"documentation":{"id":13092,"nodeType":"StructuredDocumentation","src":"32154:24:14","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","overrides":null,"parameters":{"id":13099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13094,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13103,"src":"32206:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13093,"name":"string","nodeType":"ElementaryTypeName","src":"32206:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13096,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13103,"src":"32233:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13095,"name":"string","nodeType":"ElementaryTypeName","src":"32233:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13098,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13103,"src":"32259:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13097,"name":"uint256","nodeType":"ElementaryTypeName","src":"32259:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"32205:68:14"},"returnParameters":{"id":13102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13101,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13103,"src":"32308:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13100,"name":"string","nodeType":"ElementaryTypeName","src":"32308:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"32307:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13116,"nodeType":"FunctionDefinition","src":"32363:157:14","nodes":[],"documentation":{"id":13104,"nodeType":"StructuredDocumentation","src":"32334:24:14","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","overrides":null,"parameters":{"id":13112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13106,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","overrides":null,"scope":13116,"src":"32386:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13105,"name":"string","nodeType":"ElementaryTypeName","src":"32386:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13108,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13116,"src":"32413:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13107,"name":"string","nodeType":"ElementaryTypeName","src":"32413:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13111,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","overrides":null,"scope":13116,"src":"32439:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13109,"name":"uint256","nodeType":"ElementaryTypeName","src":"32439:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13110,"length":null,"nodeType":"ArrayTypeName","src":"32439:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"32385:80:14"},"returnParameters":{"id":13115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13114,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13116,"src":"32500:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13113,"name":"string","nodeType":"ElementaryTypeName","src":"32500:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"32499:20:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13124,"nodeType":"FunctionDefinition","src":"32620:72:14","nodes":[],"documentation":{"id":13117,"nodeType":"StructuredDocumentation","src":"32526:89:14","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","overrides":null,"parameters":{"id":13122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13119,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13124,"src":"32639:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13118,"name":"string","nodeType":"ElementaryTypeName","src":"32639:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13121,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":13124,"src":"32661:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13120,"name":"string","nodeType":"ElementaryTypeName","src":"32661:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"32638:44:14"},"returnParameters":{"id":13123,"nodeType":"ParameterList","parameters":[],"src":"32691:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13134,"nodeType":"FunctionDefinition","src":"32918:98:14","nodes":[],"documentation":{"id":13125,"nodeType":"StructuredDocumentation","src":"32698:215:14","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","overrides":null,"parameters":{"id":13132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13127,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":13134,"src":"32937:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13126,"name":"string","nodeType":"ElementaryTypeName","src":"32937:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13129,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":13134,"src":"32959:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13128,"name":"string","nodeType":"ElementaryTypeName","src":"32959:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13131,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":13134,"src":"32981:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13130,"name":"string","nodeType":"ElementaryTypeName","src":"32981:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"32936:70:14"},"returnParameters":{"id":13133,"nodeType":"ParameterList","parameters":[],"src":"33015:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13138,"nodeType":"FunctionDefinition","src":"33230:30:14","nodes":[],"documentation":{"id":13135,"nodeType":"StructuredDocumentation","src":"33058:167:14","text":"Using the address that calls the test contract, has the next call (at this call depth only)\n create a transaction that can later be signed and sent onchain."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","overrides":null,"parameters":{"id":13136,"nodeType":"ParameterList","parameters":[],"src":"33248:2:14"},"returnParameters":{"id":13137,"nodeType":"ParameterList","parameters":[],"src":"33259:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13144,"nodeType":"FunctionDefinition","src":"33430:44:14","nodes":[],"documentation":{"id":13139,"nodeType":"StructuredDocumentation","src":"33266:159:14","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","overrides":null,"parameters":{"id":13142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13141,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","overrides":null,"scope":13144,"src":"33449:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13140,"name":"address","nodeType":"ElementaryTypeName","src":"33449:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"33448:16:14"},"returnParameters":{"id":13143,"nodeType":"ParameterList","parameters":[],"src":"33473:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13150,"nodeType":"FunctionDefinition","src":"33648:48:14","nodes":[],"documentation":{"id":13145,"nodeType":"StructuredDocumentation","src":"33480:163:14","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","overrides":null,"parameters":{"id":13148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13147,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":13150,"src":"33667:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13146,"name":"uint256","nodeType":"ElementaryTypeName","src":"33667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"33666:20:14"},"returnParameters":{"id":13149,"nodeType":"ParameterList","parameters":[],"src":"33695:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13154,"nodeType":"FunctionDefinition","src":"33880:35:14","nodes":[],"documentation":{"id":13151,"nodeType":"StructuredDocumentation","src":"33702:173:14","text":"Using the address that calls the test contract, has all subsequent calls\n (at this call depth only) create transactions that can later be signed and sent onchain."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","overrides":null,"parameters":{"id":13152,"nodeType":"ParameterList","parameters":[],"src":"33903:2:14"},"returnParameters":{"id":13153,"nodeType":"ParameterList","parameters":[],"src":"33914:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13160,"nodeType":"FunctionDefinition","src":"34077:49:14","nodes":[],"documentation":{"id":13155,"nodeType":"StructuredDocumentation","src":"33921:151:14","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","overrides":null,"parameters":{"id":13158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13157,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","overrides":null,"scope":13160,"src":"34101:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13156,"name":"address","nodeType":"ElementaryTypeName","src":"34101:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"34100:16:14"},"returnParameters":{"id":13159,"nodeType":"ParameterList","parameters":[],"src":"34125:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13166,"nodeType":"FunctionDefinition","src":"34292:53:14","nodes":[],"documentation":{"id":13161,"nodeType":"StructuredDocumentation","src":"34132:155:14","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","overrides":null,"parameters":{"id":13164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13163,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":13166,"src":"34316:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13162,"name":"uint256","nodeType":"ElementaryTypeName","src":"34316:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"34315:20:14"},"returnParameters":{"id":13165,"nodeType":"ParameterList","parameters":[],"src":"34344:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13170,"nodeType":"FunctionDefinition","src":"34398:34:14","nodes":[],"documentation":{"id":13167,"nodeType":"StructuredDocumentation","src":"34351:42:14","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","overrides":null,"parameters":{"id":13168,"nodeType":"ParameterList","parameters":[],"src":"34420:2:14"},"returnParameters":{"id":13169,"nodeType":"ParameterList","parameters":[],"src":"34431:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13178,"nodeType":"FunctionDefinition","src":"34524:100:14","nodes":[],"documentation":{"id":13171,"nodeType":"StructuredDocumentation","src":"34471:48:14","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","overrides":null,"parameters":{"id":13174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13173,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13178,"src":"34546:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13172,"name":"string","nodeType":"ElementaryTypeName","src":"34546:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"34545:34:14"},"returnParameters":{"id":13177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13176,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13178,"src":"34603:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13175,"name":"address","nodeType":"ElementaryTypeName","src":"34603:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"34602:21:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13186,"nodeType":"FunctionDefinition","src":"34679:94:14","nodes":[],"documentation":{"id":13179,"nodeType":"StructuredDocumentation","src":"34630:44:14","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","overrides":null,"parameters":{"id":13182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13181,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13186,"src":"34698:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13180,"name":"string","nodeType":"ElementaryTypeName","src":"34698:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"34697:34:14"},"returnParameters":{"id":13185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13184,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13186,"src":"34755:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13183,"name":"bool","nodeType":"ElementaryTypeName","src":"34755:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"34754:18:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13194,"nodeType":"FunctionDefinition","src":"34827:103:14","nodes":[],"documentation":{"id":13187,"nodeType":"StructuredDocumentation","src":"34779:43:14","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","overrides":null,"parameters":{"id":13190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13189,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13194,"src":"34847:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13188,"name":"string","nodeType":"ElementaryTypeName","src":"34847:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"34846:34:14"},"returnParameters":{"id":13193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13192,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13194,"src":"34904:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13191,"name":"bytes","nodeType":"ElementaryTypeName","src":"34904:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"34903:26:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13202,"nodeType":"FunctionDefinition","src":"34988:100:14","nodes":[],"documentation":{"id":13195,"nodeType":"StructuredDocumentation","src":"34936:47:14","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","overrides":null,"parameters":{"id":13198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13197,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13202,"src":"35010:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13196,"name":"string","nodeType":"ElementaryTypeName","src":"35010:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"35009:34:14"},"returnParameters":{"id":13201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13200,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13202,"src":"35067:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35067:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"35066:21:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13210,"nodeType":"FunctionDefinition","src":"35145:95:14","nodes":[],"documentation":{"id":13203,"nodeType":"StructuredDocumentation","src":"35094:46:14","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","overrides":null,"parameters":{"id":13206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13205,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13210,"src":"35163:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13204,"name":"string","nodeType":"ElementaryTypeName","src":"35163:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"35162:34:14"},"returnParameters":{"id":13209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13208,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13210,"src":"35220:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13207,"name":"int256","nodeType":"ElementaryTypeName","src":"35220:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"35219:20:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13218,"nodeType":"FunctionDefinition","src":"35298:97:14","nodes":[],"documentation":{"id":13211,"nodeType":"StructuredDocumentation","src":"35246:47:14","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","overrides":null,"parameters":{"id":13214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13213,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13218,"src":"35317:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13212,"name":"string","nodeType":"ElementaryTypeName","src":"35317:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"35316:34:14"},"returnParameters":{"id":13217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13216,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13218,"src":"35374:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13215,"name":"uint256","nodeType":"ElementaryTypeName","src":"35374:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"35373:21:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13230,"nodeType":"FunctionDefinition","src":"35473:151:14","nodes":[],"documentation":{"id":13219,"nodeType":"StructuredDocumentation","src":"35401:67:14","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","overrides":null,"parameters":{"id":13226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13221,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":13230,"src":"35490:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13220,"name":"string","nodeType":"ElementaryTypeName","src":"35490:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13223,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":13230,"src":"35513:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13222,"name":"string","nodeType":"ElementaryTypeName","src":"35513:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13225,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":13230,"src":"35535:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13224,"name":"string","nodeType":"ElementaryTypeName","src":"35535:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"35489:65:14"},"returnParameters":{"id":13229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13228,"mutability":"mutable","name":"output","nodeType":"VariableDeclaration","overrides":null,"scope":13230,"src":"35602:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13227,"name":"string","nodeType":"ElementaryTypeName","src":"35602:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"35601:22:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13241,"nodeType":"FunctionDefinition","src":"35717:113:14","nodes":[],"documentation":{"id":13231,"nodeType":"StructuredDocumentation","src":"35630:82:14","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","overrides":null,"parameters":{"id":13236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13233,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":13241,"src":"35732:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13232,"name":"string","nodeType":"ElementaryTypeName","src":"35732:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13235,"mutability":"mutable","name":"delimiter","nodeType":"VariableDeclaration","overrides":null,"scope":13241,"src":"35755:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13234,"name":"string","nodeType":"ElementaryTypeName","src":"35755:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"35731:50:14"},"returnParameters":{"id":13240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13239,"mutability":"mutable","name":"outputs","nodeType":"VariableDeclaration","overrides":null,"scope":13241,"src":"35805:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13237,"name":"string","nodeType":"ElementaryTypeName","src":"35805:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13238,"length":null,"nodeType":"ArrayTypeName","src":"35805:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"35804:25:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13249,"nodeType":"FunctionDefinition","src":"35892:89:14","nodes":[],"documentation":{"id":13242,"nodeType":"StructuredDocumentation","src":"35836:51:14","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","overrides":null,"parameters":{"id":13245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13244,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":13249,"src":"35913:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13243,"name":"string","nodeType":"ElementaryTypeName","src":"35913:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"35912:23:14"},"returnParameters":{"id":13248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13247,"mutability":"mutable","name":"output","nodeType":"VariableDeclaration","overrides":null,"scope":13249,"src":"35959:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13246,"name":"string","nodeType":"ElementaryTypeName","src":"35959:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"35958:22:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13257,"nodeType":"FunctionDefinition","src":"36035:88:14","nodes":[],"documentation":{"id":13250,"nodeType":"StructuredDocumentation","src":"35987:43:14","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","overrides":null,"parameters":{"id":13253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13252,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13257,"src":"36053:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13251,"name":"address","nodeType":"ElementaryTypeName","src":"36053:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"36052:15:14"},"returnParameters":{"id":13256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13255,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13257,"src":"36091:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13254,"name":"string","nodeType":"ElementaryTypeName","src":"36091:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"36090:32:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13265,"nodeType":"FunctionDefinition","src":"36177:95:14","nodes":[],"documentation":{"id":13258,"nodeType":"StructuredDocumentation","src":"36129:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","overrides":null,"parameters":{"id":13261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13260,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13265,"src":"36195:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13259,"name":"bytes","nodeType":"ElementaryTypeName","src":"36195:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"36194:22:14"},"returnParameters":{"id":13264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13263,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13265,"src":"36240:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13262,"name":"string","nodeType":"ElementaryTypeName","src":"36240:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"36239:32:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13273,"nodeType":"FunctionDefinition","src":"36326:88:14","nodes":[],"documentation":{"id":13266,"nodeType":"StructuredDocumentation","src":"36278:43:14","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","overrides":null,"parameters":{"id":13269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13268,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13273,"src":"36344:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36344:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"36343:15:14"},"returnParameters":{"id":13272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13271,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13273,"src":"36382:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13270,"name":"string","nodeType":"ElementaryTypeName","src":"36382:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"36381:32:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13281,"nodeType":"FunctionDefinition","src":"36468:85:14","nodes":[],"documentation":{"id":13274,"nodeType":"StructuredDocumentation","src":"36420:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","overrides":null,"parameters":{"id":13277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13276,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13281,"src":"36486:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13275,"name":"bool","nodeType":"ElementaryTypeName","src":"36486:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"36485:12:14"},"returnParameters":{"id":13280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13279,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13281,"src":"36521:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13278,"name":"string","nodeType":"ElementaryTypeName","src":"36521:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"36520:32:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13289,"nodeType":"FunctionDefinition","src":"36607:88:14","nodes":[],"documentation":{"id":13282,"nodeType":"StructuredDocumentation","src":"36559:43:14","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","overrides":null,"parameters":{"id":13285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13284,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13289,"src":"36625:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13283,"name":"uint256","nodeType":"ElementaryTypeName","src":"36625:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"36624:15:14"},"returnParameters":{"id":13288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13287,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13289,"src":"36663:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13286,"name":"string","nodeType":"ElementaryTypeName","src":"36663:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"36662:32:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13297,"nodeType":"FunctionDefinition","src":"36749:87:14","nodes":[],"documentation":{"id":13290,"nodeType":"StructuredDocumentation","src":"36701:43:14","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","overrides":null,"parameters":{"id":13293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13292,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":13297,"src":"36767:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13291,"name":"int256","nodeType":"ElementaryTypeName","src":"36767:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"36766:14:14"},"returnParameters":{"id":13296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13295,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","overrides":null,"scope":13297,"src":"36804:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13294,"name":"string","nodeType":"ElementaryTypeName","src":"36804:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"36803:32:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13305,"nodeType":"FunctionDefinition","src":"36898:89:14","nodes":[],"documentation":{"id":13298,"nodeType":"StructuredDocumentation","src":"36842:51:14","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","overrides":null,"parameters":{"id":13301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13300,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":13305,"src":"36919:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13299,"name":"string","nodeType":"ElementaryTypeName","src":"36919:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"36918:23:14"},"returnParameters":{"id":13304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13303,"mutability":"mutable","name":"output","nodeType":"VariableDeclaration","overrides":null,"scope":13305,"src":"36965:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13302,"name":"string","nodeType":"ElementaryTypeName","src":"36965:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"36964:22:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13313,"nodeType":"FunctionDefinition","src":"37070:82:14","nodes":[],"documentation":{"id":13306,"nodeType":"StructuredDocumentation","src":"36993:72:14","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","overrides":null,"parameters":{"id":13309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13308,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":13313,"src":"37084:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13307,"name":"string","nodeType":"ElementaryTypeName","src":"37084:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"37083:23:14"},"returnParameters":{"id":13312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13311,"mutability":"mutable","name":"output","nodeType":"VariableDeclaration","overrides":null,"scope":13313,"src":"37130:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13310,"name":"string","nodeType":"ElementaryTypeName","src":"37130:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"37129:22:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13325,"nodeType":"FunctionDefinition","src":"37347:113:14","nodes":[],"documentation":{"id":13314,"nodeType":"StructuredDocumentation","src":"37192:150:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","overrides":null,"parameters":{"id":13323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13316,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13325,"src":"37381:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13315,"name":"uint256","nodeType":"ElementaryTypeName","src":"37381:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13318,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13325,"src":"37395:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13317,"name":"uint256","nodeType":"ElementaryTypeName","src":"37395:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13320,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13325,"src":"37410:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13319,"name":"uint256","nodeType":"ElementaryTypeName","src":"37410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13322,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13325,"src":"37428:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13321,"name":"uint256","nodeType":"ElementaryTypeName","src":"37428:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"37380:65:14"},"returnParameters":{"id":13324,"nodeType":"ParameterList","parameters":[],"src":"37459:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13339,"nodeType":"FunctionDefinition","src":"37675:182:14","nodes":[],"documentation":{"id":13326,"nodeType":"StructuredDocumentation","src":"37466:204:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","overrides":null,"parameters":{"id":13337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13328,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13339,"src":"37718:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13327,"name":"uint256","nodeType":"ElementaryTypeName","src":"37718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13330,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13339,"src":"37740:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13329,"name":"uint256","nodeType":"ElementaryTypeName","src":"37740:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13332,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13339,"src":"37763:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13331,"name":"uint256","nodeType":"ElementaryTypeName","src":"37763:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13334,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13339,"src":"37789:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13333,"name":"uint256","nodeType":"ElementaryTypeName","src":"37789:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13336,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13339,"src":"37815:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13335,"name":"string","nodeType":"ElementaryTypeName","src":"37815:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"37708:134:14"},"returnParameters":{"id":13338,"nodeType":"ParameterList","parameters":[],"src":"37856:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13351,"nodeType":"FunctionDefinition","src":"38017:111:14","nodes":[],"documentation":{"id":13340,"nodeType":"StructuredDocumentation","src":"37863:149:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","overrides":null,"parameters":{"id":13349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13342,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13351,"src":"38051:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13341,"name":"int256","nodeType":"ElementaryTypeName","src":"38051:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13344,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13351,"src":"38064:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13343,"name":"int256","nodeType":"ElementaryTypeName","src":"38064:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13346,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13351,"src":"38078:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13345,"name":"uint256","nodeType":"ElementaryTypeName","src":"38078:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13348,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13351,"src":"38096:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13347,"name":"uint256","nodeType":"ElementaryTypeName","src":"38096:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"38050:63:14"},"returnParameters":{"id":13350,"nodeType":"ParameterList","parameters":[],"src":"38127:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13365,"nodeType":"FunctionDefinition","src":"38342:180:14","nodes":[],"documentation":{"id":13352,"nodeType":"StructuredDocumentation","src":"38134:203:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","overrides":null,"parameters":{"id":13363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13354,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13365,"src":"38385:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13353,"name":"int256","nodeType":"ElementaryTypeName","src":"38385:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13356,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13365,"src":"38406:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13355,"name":"int256","nodeType":"ElementaryTypeName","src":"38406:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13358,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13365,"src":"38428:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13357,"name":"uint256","nodeType":"ElementaryTypeName","src":"38428:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13360,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13365,"src":"38454:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13359,"name":"uint256","nodeType":"ElementaryTypeName","src":"38454:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13362,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13365,"src":"38480:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13361,"name":"string","nodeType":"ElementaryTypeName","src":"38480:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"38375:132:14"},"returnParameters":{"id":13364,"nodeType":"ParameterList","parameters":[],"src":"38521:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13375,"nodeType":"FunctionDefinition","src":"38626:88:14","nodes":[],"documentation":{"id":13366,"nodeType":"StructuredDocumentation","src":"38528:93:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","overrides":null,"parameters":{"id":13373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13368,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13375,"src":"38653:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13367,"name":"uint256","nodeType":"ElementaryTypeName","src":"38653:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13370,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13375,"src":"38667:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13369,"name":"uint256","nodeType":"ElementaryTypeName","src":"38667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13372,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13375,"src":"38682:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13371,"name":"uint256","nodeType":"ElementaryTypeName","src":"38682:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"38652:47:14"},"returnParameters":{"id":13374,"nodeType":"ParameterList","parameters":[],"src":"38713:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13387,"nodeType":"FunctionDefinition","src":"38880:111:14","nodes":[],"documentation":{"id":13376,"nodeType":"StructuredDocumentation","src":"38720:155:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","overrides":null,"parameters":{"id":13385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13378,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13387,"src":"38907:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13377,"name":"uint256","nodeType":"ElementaryTypeName","src":"38907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13380,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13387,"src":"38921:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13379,"name":"uint256","nodeType":"ElementaryTypeName","src":"38921:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13382,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13387,"src":"38936:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13381,"name":"uint256","nodeType":"ElementaryTypeName","src":"38936:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13384,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13387,"src":"38954:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13383,"name":"string","nodeType":"ElementaryTypeName","src":"38954:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"38906:70:14"},"returnParameters":{"id":13386,"nodeType":"ParameterList","parameters":[],"src":"38990:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13397,"nodeType":"FunctionDefinition","src":"39094:86:14","nodes":[],"documentation":{"id":13388,"nodeType":"StructuredDocumentation","src":"38997:92:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","overrides":null,"parameters":{"id":13395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13390,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13397,"src":"39121:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13389,"name":"int256","nodeType":"ElementaryTypeName","src":"39121:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13392,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13397,"src":"39134:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13391,"name":"int256","nodeType":"ElementaryTypeName","src":"39134:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13394,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13397,"src":"39148:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13393,"name":"uint256","nodeType":"ElementaryTypeName","src":"39148:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"39120:45:14"},"returnParameters":{"id":13396,"nodeType":"ParameterList","parameters":[],"src":"39179:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13409,"nodeType":"FunctionDefinition","src":"39345:109:14","nodes":[],"documentation":{"id":13398,"nodeType":"StructuredDocumentation","src":"39186:154:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","overrides":null,"parameters":{"id":13407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13400,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13409,"src":"39372:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13399,"name":"int256","nodeType":"ElementaryTypeName","src":"39372:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13402,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13409,"src":"39385:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13401,"name":"int256","nodeType":"ElementaryTypeName","src":"39385:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13404,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13409,"src":"39399:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13403,"name":"uint256","nodeType":"ElementaryTypeName","src":"39399:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13406,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13409,"src":"39417:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13405,"name":"string","nodeType":"ElementaryTypeName","src":"39417:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"39371:68:14"},"returnParameters":{"id":13408,"nodeType":"ParameterList","parameters":[],"src":"39453:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13421,"nodeType":"FunctionDefinition","src":"39725:136:14","nodes":[],"documentation":{"id":13410,"nodeType":"StructuredDocumentation","src":"39460:260:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","overrides":null,"parameters":{"id":13419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13412,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13421,"src":"39759:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13411,"name":"uint256","nodeType":"ElementaryTypeName","src":"39759:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13414,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13421,"src":"39773:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13413,"name":"uint256","nodeType":"ElementaryTypeName","src":"39773:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13416,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13421,"src":"39788:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13415,"name":"uint256","nodeType":"ElementaryTypeName","src":"39788:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13418,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13421,"src":"39813:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13417,"name":"uint256","nodeType":"ElementaryTypeName","src":"39813:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"39758:72:14"},"returnParameters":{"id":13420,"nodeType":"ParameterList","parameters":[],"src":"39860:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13435,"nodeType":"FunctionDefinition","src":"40186:189:14","nodes":[],"documentation":{"id":13422,"nodeType":"StructuredDocumentation","src":"39867:314:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","overrides":null,"parameters":{"id":13433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13424,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13435,"src":"40229:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13423,"name":"uint256","nodeType":"ElementaryTypeName","src":"40229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13426,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13435,"src":"40251:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13425,"name":"uint256","nodeType":"ElementaryTypeName","src":"40251:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13428,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13435,"src":"40274:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13427,"name":"uint256","nodeType":"ElementaryTypeName","src":"40274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13430,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13435,"src":"40307:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13429,"name":"uint256","nodeType":"ElementaryTypeName","src":"40307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13432,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13435,"src":"40333:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13431,"name":"string","nodeType":"ElementaryTypeName","src":"40333:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"40219:141:14"},"returnParameters":{"id":13434,"nodeType":"ParameterList","parameters":[],"src":"40374:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13447,"nodeType":"FunctionDefinition","src":"40645:134:14","nodes":[],"documentation":{"id":13436,"nodeType":"StructuredDocumentation","src":"40381:259:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","overrides":null,"parameters":{"id":13445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13438,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13447,"src":"40679:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13437,"name":"int256","nodeType":"ElementaryTypeName","src":"40679:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13440,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13447,"src":"40692:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13439,"name":"int256","nodeType":"ElementaryTypeName","src":"40692:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13442,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13447,"src":"40706:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13441,"name":"uint256","nodeType":"ElementaryTypeName","src":"40706:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13444,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13447,"src":"40731:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13443,"name":"uint256","nodeType":"ElementaryTypeName","src":"40731:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"40678:70:14"},"returnParameters":{"id":13446,"nodeType":"ParameterList","parameters":[],"src":"40778:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13461,"nodeType":"FunctionDefinition","src":"41103:187:14","nodes":[],"documentation":{"id":13448,"nodeType":"StructuredDocumentation","src":"40785:313:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","overrides":null,"parameters":{"id":13459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13450,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13461,"src":"41146:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13449,"name":"int256","nodeType":"ElementaryTypeName","src":"41146:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13452,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13461,"src":"41167:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13451,"name":"int256","nodeType":"ElementaryTypeName","src":"41167:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13454,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13461,"src":"41189:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13453,"name":"uint256","nodeType":"ElementaryTypeName","src":"41189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13456,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13461,"src":"41222:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13455,"name":"uint256","nodeType":"ElementaryTypeName","src":"41222:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13458,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13461,"src":"41248:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13457,"name":"string","nodeType":"ElementaryTypeName","src":"41248:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"41136:139:14"},"returnParameters":{"id":13460,"nodeType":"ParameterList","parameters":[],"src":"41289:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13471,"nodeType":"FunctionDefinition","src":"41504:95:14","nodes":[],"documentation":{"id":13462,"nodeType":"StructuredDocumentation","src":"41296:203:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","overrides":null,"parameters":{"id":13469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13464,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13471,"src":"41531:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13463,"name":"uint256","nodeType":"ElementaryTypeName","src":"41531:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13466,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13471,"src":"41545:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13465,"name":"uint256","nodeType":"ElementaryTypeName","src":"41545:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13468,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13471,"src":"41560:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13467,"name":"uint256","nodeType":"ElementaryTypeName","src":"41560:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"41530:54:14"},"returnParameters":{"id":13470,"nodeType":"ParameterList","parameters":[],"src":"41598:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13483,"nodeType":"FunctionDefinition","src":"41875:134:14","nodes":[],"documentation":{"id":13472,"nodeType":"StructuredDocumentation","src":"41605:265:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","overrides":null,"parameters":{"id":13481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13474,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13483,"src":"41902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13473,"name":"uint256","nodeType":"ElementaryTypeName","src":"41902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13476,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13483,"src":"41916:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13475,"name":"uint256","nodeType":"ElementaryTypeName","src":"41916:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13478,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13483,"src":"41931:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13477,"name":"uint256","nodeType":"ElementaryTypeName","src":"41931:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13480,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13483,"src":"41956:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13479,"name":"string","nodeType":"ElementaryTypeName","src":"41956:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"41901:77:14"},"returnParameters":{"id":13482,"nodeType":"ParameterList","parameters":[],"src":"42008:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13493,"nodeType":"FunctionDefinition","src":"42222:93:14","nodes":[],"documentation":{"id":13484,"nodeType":"StructuredDocumentation","src":"42015:202:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","overrides":null,"parameters":{"id":13491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13486,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13493,"src":"42249:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13485,"name":"int256","nodeType":"ElementaryTypeName","src":"42249:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13488,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13493,"src":"42262:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13487,"name":"int256","nodeType":"ElementaryTypeName","src":"42262:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13490,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13493,"src":"42276:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13489,"name":"uint256","nodeType":"ElementaryTypeName","src":"42276:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"42248:52:14"},"returnParameters":{"id":13492,"nodeType":"ParameterList","parameters":[],"src":"42314:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13505,"nodeType":"FunctionDefinition","src":"42590:132:14","nodes":[],"documentation":{"id":13494,"nodeType":"StructuredDocumentation","src":"42321:264:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","overrides":null,"parameters":{"id":13503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13496,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13505,"src":"42617:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13495,"name":"int256","nodeType":"ElementaryTypeName","src":"42617:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13498,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13505,"src":"42630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13497,"name":"int256","nodeType":"ElementaryTypeName","src":"42630:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13500,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","overrides":null,"scope":13505,"src":"42644:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13499,"name":"uint256","nodeType":"ElementaryTypeName","src":"42644:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13502,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13505,"src":"42669:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13501,"name":"string","nodeType":"ElementaryTypeName","src":"42669:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"42616:75:14"},"returnParameters":{"id":13504,"nodeType":"ParameterList","parameters":[],"src":"42721:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13515,"nodeType":"FunctionDefinition","src":"42831:86:14","nodes":[],"documentation":{"id":13506,"nodeType":"StructuredDocumentation","src":"42728:98:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","overrides":null,"parameters":{"id":13513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13508,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13515,"src":"42856:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13507,"name":"uint256","nodeType":"ElementaryTypeName","src":"42856:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13510,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13515,"src":"42870:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13509,"name":"uint256","nodeType":"ElementaryTypeName","src":"42870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13512,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13515,"src":"42885:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13511,"name":"uint256","nodeType":"ElementaryTypeName","src":"42885:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"42855:47:14"},"returnParameters":{"id":13514,"nodeType":"ParameterList","parameters":[],"src":"42916:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13527,"nodeType":"FunctionDefinition","src":"43088:109:14","nodes":[],"documentation":{"id":13516,"nodeType":"StructuredDocumentation","src":"42923:160:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","overrides":null,"parameters":{"id":13525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13518,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13527,"src":"43113:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13517,"name":"uint256","nodeType":"ElementaryTypeName","src":"43113:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13520,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13527,"src":"43127:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13519,"name":"uint256","nodeType":"ElementaryTypeName","src":"43127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13522,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13527,"src":"43142:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13521,"name":"uint256","nodeType":"ElementaryTypeName","src":"43142:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13524,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13527,"src":"43160:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13523,"name":"string","nodeType":"ElementaryTypeName","src":"43160:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"43112:70:14"},"returnParameters":{"id":13526,"nodeType":"ParameterList","parameters":[],"src":"43196:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13537,"nodeType":"FunctionDefinition","src":"43305:84:14","nodes":[],"documentation":{"id":13528,"nodeType":"StructuredDocumentation","src":"43203:97:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","overrides":null,"parameters":{"id":13535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13530,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13537,"src":"43330:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13529,"name":"int256","nodeType":"ElementaryTypeName","src":"43330:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13532,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13537,"src":"43343:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13531,"name":"int256","nodeType":"ElementaryTypeName","src":"43343:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13534,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13537,"src":"43357:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13533,"name":"uint256","nodeType":"ElementaryTypeName","src":"43357:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"43329:45:14"},"returnParameters":{"id":13536,"nodeType":"ParameterList","parameters":[],"src":"43388:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13549,"nodeType":"FunctionDefinition","src":"43559:107:14","nodes":[],"documentation":{"id":13538,"nodeType":"StructuredDocumentation","src":"43395:159:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","overrides":null,"parameters":{"id":13547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13540,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13549,"src":"43584:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13539,"name":"int256","nodeType":"ElementaryTypeName","src":"43584:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13542,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13549,"src":"43597:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13541,"name":"int256","nodeType":"ElementaryTypeName","src":"43597:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13544,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13549,"src":"43611:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13543,"name":"uint256","nodeType":"ElementaryTypeName","src":"43611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13546,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13549,"src":"43629:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13545,"name":"string","nodeType":"ElementaryTypeName","src":"43629:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"43583:68:14"},"returnParameters":{"id":13548,"nodeType":"ParameterList","parameters":[],"src":"43665:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13557,"nodeType":"FunctionDefinition","src":"43722:55:14","nodes":[],"documentation":{"id":13550,"nodeType":"StructuredDocumentation","src":"43672:45:14","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13552,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13557,"src":"43740:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13551,"name":"bool","nodeType":"ElementaryTypeName","src":"43740:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":13554,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13557,"src":"43751:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13553,"name":"bool","nodeType":"ElementaryTypeName","src":"43751:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"43739:23:14"},"returnParameters":{"id":13556,"nodeType":"ParameterList","parameters":[],"src":"43776:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13567,"nodeType":"FunctionDefinition","src":"43890:78:14","nodes":[],"documentation":{"id":13558,"nodeType":"StructuredDocumentation","src":"43783:102:14","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13560,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13567,"src":"43908:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13559,"name":"bool","nodeType":"ElementaryTypeName","src":"43908:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":13562,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13567,"src":"43919:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13561,"name":"bool","nodeType":"ElementaryTypeName","src":"43919:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":13564,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13567,"src":"43931:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13563,"name":"string","nodeType":"ElementaryTypeName","src":"43931:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"43907:46:14"},"returnParameters":{"id":13566,"nodeType":"ParameterList","parameters":[],"src":"43967:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13575,"nodeType":"FunctionDefinition","src":"44026:77:14","nodes":[],"documentation":{"id":13568,"nodeType":"StructuredDocumentation","src":"43974:47:14","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13570,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13575,"src":"44044:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13569,"name":"string","nodeType":"ElementaryTypeName","src":"44044:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13572,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13575,"src":"44066:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13571,"name":"string","nodeType":"ElementaryTypeName","src":"44066:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"44043:45:14"},"returnParameters":{"id":13574,"nodeType":"ParameterList","parameters":[],"src":"44102:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13585,"nodeType":"FunctionDefinition","src":"44218:100:14","nodes":[],"documentation":{"id":13576,"nodeType":"StructuredDocumentation","src":"44109:104:14","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13578,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13585,"src":"44236:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13577,"name":"string","nodeType":"ElementaryTypeName","src":"44236:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13580,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13585,"src":"44258:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13579,"name":"string","nodeType":"ElementaryTypeName","src":"44258:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":13582,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13585,"src":"44281:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13581,"name":"string","nodeType":"ElementaryTypeName","src":"44281:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"44235:68:14"},"returnParameters":{"id":13584,"nodeType":"ParameterList","parameters":[],"src":"44317:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13593,"nodeType":"FunctionDefinition","src":"44375:75:14","nodes":[],"documentation":{"id":13586,"nodeType":"StructuredDocumentation","src":"44324:46:14","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13588,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13593,"src":"44393:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13587,"name":"bytes","nodeType":"ElementaryTypeName","src":"44393:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":13590,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13593,"src":"44414:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13589,"name":"bytes","nodeType":"ElementaryTypeName","src":"44414:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"44392:43:14"},"returnParameters":{"id":13592,"nodeType":"ParameterList","parameters":[],"src":"44449:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13603,"nodeType":"FunctionDefinition","src":"44564:98:14","nodes":[],"documentation":{"id":13594,"nodeType":"StructuredDocumentation","src":"44456:103:14","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13596,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13603,"src":"44582:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13595,"name":"bytes","nodeType":"ElementaryTypeName","src":"44582:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":13598,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13603,"src":"44603:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13597,"name":"bytes","nodeType":"ElementaryTypeName","src":"44603:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":13600,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13603,"src":"44625:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13599,"name":"string","nodeType":"ElementaryTypeName","src":"44625:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"44581:66:14"},"returnParameters":{"id":13602,"nodeType":"ParameterList","parameters":[],"src":"44661:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13613,"nodeType":"FunctionDefinition","src":"44728:77:14","nodes":[],"documentation":{"id":13604,"nodeType":"StructuredDocumentation","src":"44668:55:14","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13607,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13613,"src":"44746:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13605,"name":"bool","nodeType":"ElementaryTypeName","src":"44746:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13606,"length":null,"nodeType":"ArrayTypeName","src":"44746:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13610,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13613,"src":"44768:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13608,"name":"bool","nodeType":"ElementaryTypeName","src":"44768:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13609,"length":null,"nodeType":"ArrayTypeName","src":"44768:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"}],"src":"44745:45:14"},"returnParameters":{"id":13612,"nodeType":"ParameterList","parameters":[],"src":"44804:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13625,"nodeType":"FunctionDefinition","src":"44928:100:14","nodes":[],"documentation":{"id":13614,"nodeType":"StructuredDocumentation","src":"44811:112:14","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13617,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13625,"src":"44946:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13615,"name":"bool","nodeType":"ElementaryTypeName","src":"44946:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13616,"length":null,"nodeType":"ArrayTypeName","src":"44946:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13620,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13625,"src":"44968:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13618,"name":"bool","nodeType":"ElementaryTypeName","src":"44968:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13619,"length":null,"nodeType":"ArrayTypeName","src":"44968:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13622,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13625,"src":"44991:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13621,"name":"string","nodeType":"ElementaryTypeName","src":"44991:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"44945:68:14"},"returnParameters":{"id":13624,"nodeType":"ParameterList","parameters":[],"src":"45027:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13635,"nodeType":"FunctionDefinition","src":"45096:83:14","nodes":[],"documentation":{"id":13626,"nodeType":"StructuredDocumentation","src":"45034:57:14","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13629,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13635,"src":"45114:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13627,"name":"uint256","nodeType":"ElementaryTypeName","src":"45114:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13628,"length":null,"nodeType":"ArrayTypeName","src":"45114:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13632,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13635,"src":"45139:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13630,"name":"uint256","nodeType":"ElementaryTypeName","src":"45139:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13631,"length":null,"nodeType":"ArrayTypeName","src":"45139:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"45113:51:14"},"returnParameters":{"id":13634,"nodeType":"ParameterList","parameters":[],"src":"45178:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13647,"nodeType":"FunctionDefinition","src":"45305:106:14","nodes":[],"documentation":{"id":13636,"nodeType":"StructuredDocumentation","src":"45185:115:14","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13639,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13647,"src":"45323:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13637,"name":"uint256","nodeType":"ElementaryTypeName","src":"45323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13638,"length":null,"nodeType":"ArrayTypeName","src":"45323:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13642,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13647,"src":"45348:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13640,"name":"uint256","nodeType":"ElementaryTypeName","src":"45348:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13641,"length":null,"nodeType":"ArrayTypeName","src":"45348:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13644,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13647,"src":"45374:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13643,"name":"string","nodeType":"ElementaryTypeName","src":"45374:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"45322:74:14"},"returnParameters":{"id":13646,"nodeType":"ParameterList","parameters":[],"src":"45410:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13657,"nodeType":"FunctionDefinition","src":"45479:81:14","nodes":[],"documentation":{"id":13648,"nodeType":"StructuredDocumentation","src":"45417:57:14","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13651,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13657,"src":"45497:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13649,"name":"int256","nodeType":"ElementaryTypeName","src":"45497:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13650,"length":null,"nodeType":"ArrayTypeName","src":"45497:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13654,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13657,"src":"45521:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13652,"name":"int256","nodeType":"ElementaryTypeName","src":"45521:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13653,"length":null,"nodeType":"ArrayTypeName","src":"45521:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"}],"src":"45496:49:14"},"returnParameters":{"id":13656,"nodeType":"ParameterList","parameters":[],"src":"45559:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13669,"nodeType":"FunctionDefinition","src":"45685:104:14","nodes":[],"documentation":{"id":13658,"nodeType":"StructuredDocumentation","src":"45566:114:14","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13661,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13669,"src":"45703:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13659,"name":"int256","nodeType":"ElementaryTypeName","src":"45703:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13660,"length":null,"nodeType":"ArrayTypeName","src":"45703:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13664,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13669,"src":"45727:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13662,"name":"int256","nodeType":"ElementaryTypeName","src":"45727:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13663,"length":null,"nodeType":"ArrayTypeName","src":"45727:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13666,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13669,"src":"45752:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13665,"name":"string","nodeType":"ElementaryTypeName","src":"45752:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"45702:72:14"},"returnParameters":{"id":13668,"nodeType":"ParameterList","parameters":[],"src":"45788:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13677,"nodeType":"FunctionDefinition","src":"45848:61:14","nodes":[],"documentation":{"id":13670,"nodeType":"StructuredDocumentation","src":"45795:48:14","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13672,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13677,"src":"45866:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13671,"name":"uint256","nodeType":"ElementaryTypeName","src":"45866:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13674,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13677,"src":"45880:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13673,"name":"uint256","nodeType":"ElementaryTypeName","src":"45880:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"45865:29:14"},"returnParameters":{"id":13676,"nodeType":"ParameterList","parameters":[],"src":"45908:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13687,"nodeType":"FunctionDefinition","src":"45978:83:14","nodes":[],"documentation":{"id":13678,"nodeType":"StructuredDocumentation","src":"45915:58:14","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13681,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13687,"src":"45996:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13679,"name":"address","nodeType":"ElementaryTypeName","src":"45996:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13680,"length":null,"nodeType":"ArrayTypeName","src":"45996:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13684,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13687,"src":"46021:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13682,"name":"address","nodeType":"ElementaryTypeName","src":"46021:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13683,"length":null,"nodeType":"ArrayTypeName","src":"46021:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"45995:51:14"},"returnParameters":{"id":13686,"nodeType":"ParameterList","parameters":[],"src":"46060:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13699,"nodeType":"FunctionDefinition","src":"46187:106:14","nodes":[],"documentation":{"id":13688,"nodeType":"StructuredDocumentation","src":"46067:115:14","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13691,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13699,"src":"46205:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13689,"name":"address","nodeType":"ElementaryTypeName","src":"46205:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13690,"length":null,"nodeType":"ArrayTypeName","src":"46205:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13694,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13699,"src":"46230:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13692,"name":"address","nodeType":"ElementaryTypeName","src":"46230:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13693,"length":null,"nodeType":"ArrayTypeName","src":"46230:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13696,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13699,"src":"46256:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13695,"name":"string","nodeType":"ElementaryTypeName","src":"46256:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"46204:74:14"},"returnParameters":{"id":13698,"nodeType":"ParameterList","parameters":[],"src":"46292:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13709,"nodeType":"FunctionDefinition","src":"46362:83:14","nodes":[],"documentation":{"id":13700,"nodeType":"StructuredDocumentation","src":"46299:58:14","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13703,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13709,"src":"46380:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46380:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13702,"length":null,"nodeType":"ArrayTypeName","src":"46380:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13706,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13709,"src":"46405:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46405:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13705,"length":null,"nodeType":"ArrayTypeName","src":"46405:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"46379:51:14"},"returnParameters":{"id":13708,"nodeType":"ParameterList","parameters":[],"src":"46444:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13721,"nodeType":"FunctionDefinition","src":"46571:106:14","nodes":[],"documentation":{"id":13710,"nodeType":"StructuredDocumentation","src":"46451:115:14","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13713,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13721,"src":"46589:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46589:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13712,"length":null,"nodeType":"ArrayTypeName","src":"46589:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13716,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13721,"src":"46614:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46614:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13715,"length":null,"nodeType":"ArrayTypeName","src":"46614:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13718,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13721,"src":"46640:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13717,"name":"string","nodeType":"ElementaryTypeName","src":"46640:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"46588:74:14"},"returnParameters":{"id":13720,"nodeType":"ParameterList","parameters":[],"src":"46676:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13731,"nodeType":"FunctionDefinition","src":"46745:81:14","nodes":[],"documentation":{"id":13722,"nodeType":"StructuredDocumentation","src":"46683:57:14","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13725,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13731,"src":"46763:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13723,"name":"string","nodeType":"ElementaryTypeName","src":"46763:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13724,"length":null,"nodeType":"ArrayTypeName","src":"46763:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13728,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13731,"src":"46787:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13726,"name":"string","nodeType":"ElementaryTypeName","src":"46787:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13727,"length":null,"nodeType":"ArrayTypeName","src":"46787:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"46762:49:14"},"returnParameters":{"id":13730,"nodeType":"ParameterList","parameters":[],"src":"46825:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13743,"nodeType":"FunctionDefinition","src":"46951:104:14","nodes":[],"documentation":{"id":13732,"nodeType":"StructuredDocumentation","src":"46832:114:14","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13735,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13743,"src":"46969:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13733,"name":"string","nodeType":"ElementaryTypeName","src":"46969:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13734,"length":null,"nodeType":"ArrayTypeName","src":"46969:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13738,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13743,"src":"46993:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13736,"name":"string","nodeType":"ElementaryTypeName","src":"46993:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13737,"length":null,"nodeType":"ArrayTypeName","src":"46993:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13740,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13743,"src":"47018:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13739,"name":"string","nodeType":"ElementaryTypeName","src":"47018:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"46968:72:14"},"returnParameters":{"id":13742,"nodeType":"ParameterList","parameters":[],"src":"47054:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13753,"nodeType":"FunctionDefinition","src":"47122:79:14","nodes":[],"documentation":{"id":13744,"nodeType":"StructuredDocumentation","src":"47061:56:14","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13747,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13753,"src":"47140:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13745,"name":"bytes","nodeType":"ElementaryTypeName","src":"47140:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13746,"length":null,"nodeType":"ArrayTypeName","src":"47140:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13750,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13753,"src":"47163:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13748,"name":"bytes","nodeType":"ElementaryTypeName","src":"47163:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13749,"length":null,"nodeType":"ArrayTypeName","src":"47163:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"}],"src":"47139:47:14"},"returnParameters":{"id":13752,"nodeType":"ParameterList","parameters":[],"src":"47200:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13765,"nodeType":"FunctionDefinition","src":"47325:102:14","nodes":[],"documentation":{"id":13754,"nodeType":"StructuredDocumentation","src":"47207:113:14","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13757,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13765,"src":"47343:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13755,"name":"bytes","nodeType":"ElementaryTypeName","src":"47343:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13756,"length":null,"nodeType":"ArrayTypeName","src":"47343:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13760,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13765,"src":"47366:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13758,"name":"bytes","nodeType":"ElementaryTypeName","src":"47366:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13759,"length":null,"nodeType":"ArrayTypeName","src":"47366:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":13762,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13765,"src":"47390:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13761,"name":"string","nodeType":"ElementaryTypeName","src":"47390:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"47342:70:14"},"returnParameters":{"id":13764,"nodeType":"ParameterList","parameters":[],"src":"47426:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13775,"nodeType":"FunctionDefinition","src":"47543:84:14","nodes":[],"documentation":{"id":13766,"nodeType":"StructuredDocumentation","src":"47433:105:14","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13768,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13775,"src":"47561:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13767,"name":"uint256","nodeType":"ElementaryTypeName","src":"47561:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13770,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13775,"src":"47575:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13769,"name":"uint256","nodeType":"ElementaryTypeName","src":"47575:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13772,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13775,"src":"47590:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13771,"name":"string","nodeType":"ElementaryTypeName","src":"47590:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"47560:52:14"},"returnParameters":{"id":13774,"nodeType":"ParameterList","parameters":[],"src":"47626:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13783,"nodeType":"FunctionDefinition","src":"47685:59:14","nodes":[],"documentation":{"id":13776,"nodeType":"StructuredDocumentation","src":"47633:47:14","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13778,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13783,"src":"47703:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13777,"name":"int256","nodeType":"ElementaryTypeName","src":"47703:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13780,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13783,"src":"47716:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13779,"name":"int256","nodeType":"ElementaryTypeName","src":"47716:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"47702:27:14"},"returnParameters":{"id":13782,"nodeType":"ParameterList","parameters":[],"src":"47743:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13793,"nodeType":"FunctionDefinition","src":"47859:82:14","nodes":[],"documentation":{"id":13784,"nodeType":"StructuredDocumentation","src":"47750:104:14","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13786,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13793,"src":"47877:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13785,"name":"int256","nodeType":"ElementaryTypeName","src":"47877:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13788,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13793,"src":"47890:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13787,"name":"int256","nodeType":"ElementaryTypeName","src":"47890:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13790,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13793,"src":"47904:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13789,"name":"string","nodeType":"ElementaryTypeName","src":"47904:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"47876:50:14"},"returnParameters":{"id":13792,"nodeType":"ParameterList","parameters":[],"src":"47940:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13801,"nodeType":"FunctionDefinition","src":"48000:61:14","nodes":[],"documentation":{"id":13794,"nodeType":"StructuredDocumentation","src":"47947:48:14","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13796,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13801,"src":"48018:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13795,"name":"address","nodeType":"ElementaryTypeName","src":"48018:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":13798,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13801,"src":"48032:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13797,"name":"address","nodeType":"ElementaryTypeName","src":"48032:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"48017:29:14"},"returnParameters":{"id":13800,"nodeType":"ParameterList","parameters":[],"src":"48060:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13811,"nodeType":"FunctionDefinition","src":"48177:84:14","nodes":[],"documentation":{"id":13802,"nodeType":"StructuredDocumentation","src":"48067:105:14","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13804,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13811,"src":"48195:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13803,"name":"address","nodeType":"ElementaryTypeName","src":"48195:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":13806,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13811,"src":"48209:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13805,"name":"address","nodeType":"ElementaryTypeName","src":"48209:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":13808,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13811,"src":"48224:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13807,"name":"string","nodeType":"ElementaryTypeName","src":"48224:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"48194:52:14"},"returnParameters":{"id":13810,"nodeType":"ParameterList","parameters":[],"src":"48260:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13819,"nodeType":"FunctionDefinition","src":"48320:61:14","nodes":[],"documentation":{"id":13812,"nodeType":"StructuredDocumentation","src":"48267:48:14","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13814,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13819,"src":"48338:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48338:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":13816,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13819,"src":"48352:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48352:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"48337:29:14"},"returnParameters":{"id":13818,"nodeType":"ParameterList","parameters":[],"src":"48380:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13829,"nodeType":"FunctionDefinition","src":"48497:84:14","nodes":[],"documentation":{"id":13820,"nodeType":"StructuredDocumentation","src":"48387:105:14","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","overrides":null,"parameters":{"id":13827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13822,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13829,"src":"48515:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48515:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":13824,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13829,"src":"48529:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48529:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":13826,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13829,"src":"48544:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13825,"name":"string","nodeType":"ElementaryTypeName","src":"48544:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"48514:52:14"},"returnParameters":{"id":13828,"nodeType":"ParameterList","parameters":[],"src":"48580:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13835,"nodeType":"FunctionDefinition","src":"48638:51:14","nodes":[],"documentation":{"id":13830,"nodeType":"StructuredDocumentation","src":"48587:46:14","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","overrides":null,"parameters":{"id":13833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13832,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","overrides":null,"scope":13835,"src":"48659:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13831,"name":"bool","nodeType":"ElementaryTypeName","src":"48659:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"48658:16:14"},"returnParameters":{"id":13834,"nodeType":"ParameterList","parameters":[],"src":"48688:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13843,"nodeType":"FunctionDefinition","src":"48803:74:14","nodes":[],"documentation":{"id":13836,"nodeType":"StructuredDocumentation","src":"48695:103:14","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","overrides":null,"parameters":{"id":13841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13838,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","overrides":null,"scope":13843,"src":"48824:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13837,"name":"bool","nodeType":"ElementaryTypeName","src":"48824:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":13840,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13843,"src":"48840:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13839,"name":"string","nodeType":"ElementaryTypeName","src":"48840:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"48823:39:14"},"returnParameters":{"id":13842,"nodeType":"ParameterList","parameters":[],"src":"48876:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13853,"nodeType":"FunctionDefinition","src":"49038:86:14","nodes":[],"documentation":{"id":13844,"nodeType":"StructuredDocumentation","src":"48883:150:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","overrides":null,"parameters":{"id":13851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13846,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13853,"src":"49063:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13845,"name":"uint256","nodeType":"ElementaryTypeName","src":"49063:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13848,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13853,"src":"49077:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13847,"name":"uint256","nodeType":"ElementaryTypeName","src":"49077:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13850,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13853,"src":"49092:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13849,"name":"uint256","nodeType":"ElementaryTypeName","src":"49092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"49062:47:14"},"returnParameters":{"id":13852,"nodeType":"ParameterList","parameters":[],"src":"49123:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13865,"nodeType":"FunctionDefinition","src":"49339:109:14","nodes":[],"documentation":{"id":13854,"nodeType":"StructuredDocumentation","src":"49130:204:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","overrides":null,"parameters":{"id":13863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13856,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13865,"src":"49364:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13855,"name":"uint256","nodeType":"ElementaryTypeName","src":"49364:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13858,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13865,"src":"49378:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13857,"name":"uint256","nodeType":"ElementaryTypeName","src":"49378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13860,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13865,"src":"49393:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13859,"name":"uint256","nodeType":"ElementaryTypeName","src":"49393:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13862,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13865,"src":"49411:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13861,"name":"string","nodeType":"ElementaryTypeName","src":"49411:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"49363:70:14"},"returnParameters":{"id":13864,"nodeType":"ParameterList","parameters":[],"src":"49447:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13875,"nodeType":"FunctionDefinition","src":"49608:84:14","nodes":[],"documentation":{"id":13866,"nodeType":"StructuredDocumentation","src":"49454:149:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","overrides":null,"parameters":{"id":13873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13868,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13875,"src":"49633:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13867,"name":"int256","nodeType":"ElementaryTypeName","src":"49633:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13870,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13875,"src":"49646:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13869,"name":"int256","nodeType":"ElementaryTypeName","src":"49646:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13872,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13875,"src":"49660:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13871,"name":"uint256","nodeType":"ElementaryTypeName","src":"49660:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"49632:45:14"},"returnParameters":{"id":13874,"nodeType":"ParameterList","parameters":[],"src":"49691:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13887,"nodeType":"FunctionDefinition","src":"49906:107:14","nodes":[],"documentation":{"id":13876,"nodeType":"StructuredDocumentation","src":"49698:203:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","overrides":null,"parameters":{"id":13885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13878,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13887,"src":"49931:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13877,"name":"int256","nodeType":"ElementaryTypeName","src":"49931:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13880,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13887,"src":"49944:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13879,"name":"int256","nodeType":"ElementaryTypeName","src":"49944:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13882,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13887,"src":"49958:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13881,"name":"uint256","nodeType":"ElementaryTypeName","src":"49958:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13884,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13887,"src":"49976:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13883,"name":"string","nodeType":"ElementaryTypeName","src":"49976:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"49930:68:14"},"returnParameters":{"id":13886,"nodeType":"ParameterList","parameters":[],"src":"50012:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13895,"nodeType":"FunctionDefinition","src":"50117:61:14","nodes":[],"documentation":{"id":13888,"nodeType":"StructuredDocumentation","src":"50019:93:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","overrides":null,"parameters":{"id":13893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13890,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13895,"src":"50135:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13889,"name":"uint256","nodeType":"ElementaryTypeName","src":"50135:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13892,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13895,"src":"50149:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13891,"name":"uint256","nodeType":"ElementaryTypeName","src":"50149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"50134:29:14"},"returnParameters":{"id":13894,"nodeType":"ParameterList","parameters":[],"src":"50177:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13905,"nodeType":"FunctionDefinition","src":"50344:84:14","nodes":[],"documentation":{"id":13896,"nodeType":"StructuredDocumentation","src":"50184:155:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","overrides":null,"parameters":{"id":13903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13898,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13905,"src":"50362:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13897,"name":"uint256","nodeType":"ElementaryTypeName","src":"50362:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13900,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13905,"src":"50376:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13899,"name":"uint256","nodeType":"ElementaryTypeName","src":"50376:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13902,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13905,"src":"50391:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13901,"name":"string","nodeType":"ElementaryTypeName","src":"50391:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"50361:52:14"},"returnParameters":{"id":13904,"nodeType":"ParameterList","parameters":[],"src":"50427:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13913,"nodeType":"FunctionDefinition","src":"50531:59:14","nodes":[],"documentation":{"id":13906,"nodeType":"StructuredDocumentation","src":"50434:92:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","overrides":null,"parameters":{"id":13911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13908,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13913,"src":"50549:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13907,"name":"int256","nodeType":"ElementaryTypeName","src":"50549:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13910,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13913,"src":"50562:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13909,"name":"int256","nodeType":"ElementaryTypeName","src":"50562:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"50548:27:14"},"returnParameters":{"id":13912,"nodeType":"ParameterList","parameters":[],"src":"50589:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13923,"nodeType":"FunctionDefinition","src":"50755:82:14","nodes":[],"documentation":{"id":13914,"nodeType":"StructuredDocumentation","src":"50596:154:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","overrides":null,"parameters":{"id":13921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13916,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13923,"src":"50773:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13915,"name":"int256","nodeType":"ElementaryTypeName","src":"50773:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13918,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13923,"src":"50786:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13917,"name":"int256","nodeType":"ElementaryTypeName","src":"50786:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13920,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13923,"src":"50800:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13919,"name":"string","nodeType":"ElementaryTypeName","src":"50800:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"50772:50:14"},"returnParameters":{"id":13922,"nodeType":"ParameterList","parameters":[],"src":"50836:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13933,"nodeType":"FunctionDefinition","src":"50986:86:14","nodes":[],"documentation":{"id":13924,"nodeType":"StructuredDocumentation","src":"50843:138:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","overrides":null,"parameters":{"id":13931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13926,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13933,"src":"51011:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13925,"name":"uint256","nodeType":"ElementaryTypeName","src":"51011:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13928,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13933,"src":"51025:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13927,"name":"uint256","nodeType":"ElementaryTypeName","src":"51025:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13930,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13933,"src":"51040:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13929,"name":"uint256","nodeType":"ElementaryTypeName","src":"51040:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"51010:47:14"},"returnParameters":{"id":13932,"nodeType":"ParameterList","parameters":[],"src":"51071:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13945,"nodeType":"FunctionDefinition","src":"51275:109:14","nodes":[],"documentation":{"id":13934,"nodeType":"StructuredDocumentation","src":"51078:192:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","overrides":null,"parameters":{"id":13943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13936,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13945,"src":"51300:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13935,"name":"uint256","nodeType":"ElementaryTypeName","src":"51300:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13938,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13945,"src":"51314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13937,"name":"uint256","nodeType":"ElementaryTypeName","src":"51314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13940,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13945,"src":"51329:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13939,"name":"uint256","nodeType":"ElementaryTypeName","src":"51329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13942,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13945,"src":"51347:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13941,"name":"string","nodeType":"ElementaryTypeName","src":"51347:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"51299:70:14"},"returnParameters":{"id":13944,"nodeType":"ParameterList","parameters":[],"src":"51383:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13955,"nodeType":"FunctionDefinition","src":"51532:84:14","nodes":[],"documentation":{"id":13946,"nodeType":"StructuredDocumentation","src":"51390:137:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","overrides":null,"parameters":{"id":13953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13948,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13955,"src":"51557:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13947,"name":"int256","nodeType":"ElementaryTypeName","src":"51557:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13950,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13955,"src":"51570:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13949,"name":"int256","nodeType":"ElementaryTypeName","src":"51570:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13952,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13955,"src":"51584:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13951,"name":"uint256","nodeType":"ElementaryTypeName","src":"51584:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"51556:45:14"},"returnParameters":{"id":13954,"nodeType":"ParameterList","parameters":[],"src":"51615:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13967,"nodeType":"FunctionDefinition","src":"51818:107:14","nodes":[],"documentation":{"id":13956,"nodeType":"StructuredDocumentation","src":"51622:191:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","overrides":null,"parameters":{"id":13965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13958,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13967,"src":"51843:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13957,"name":"int256","nodeType":"ElementaryTypeName","src":"51843:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13960,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13967,"src":"51856:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13959,"name":"int256","nodeType":"ElementaryTypeName","src":"51856:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13962,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":13967,"src":"51870:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13961,"name":"uint256","nodeType":"ElementaryTypeName","src":"51870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13964,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13967,"src":"51888:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13963,"name":"string","nodeType":"ElementaryTypeName","src":"51888:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"51842:68:14"},"returnParameters":{"id":13966,"nodeType":"ParameterList","parameters":[],"src":"51924:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13975,"nodeType":"FunctionDefinition","src":"52017:61:14","nodes":[],"documentation":{"id":13968,"nodeType":"StructuredDocumentation","src":"51931:81:14","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","overrides":null,"parameters":{"id":13973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13970,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13975,"src":"52035:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13969,"name":"uint256","nodeType":"ElementaryTypeName","src":"52035:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13972,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13975,"src":"52049:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13971,"name":"uint256","nodeType":"ElementaryTypeName","src":"52049:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"52034:29:14"},"returnParameters":{"id":13974,"nodeType":"ParameterList","parameters":[],"src":"52077:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13985,"nodeType":"FunctionDefinition","src":"52232:84:14","nodes":[],"documentation":{"id":13976,"nodeType":"StructuredDocumentation","src":"52084:143:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","overrides":null,"parameters":{"id":13983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13978,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13985,"src":"52250:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13977,"name":"uint256","nodeType":"ElementaryTypeName","src":"52250:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13980,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13985,"src":"52264:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13979,"name":"uint256","nodeType":"ElementaryTypeName","src":"52264:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13982,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":13985,"src":"52279:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13981,"name":"string","nodeType":"ElementaryTypeName","src":"52279:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"52249:52:14"},"returnParameters":{"id":13984,"nodeType":"ParameterList","parameters":[],"src":"52315:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13993,"nodeType":"FunctionDefinition","src":"52407:59:14","nodes":[],"documentation":{"id":13986,"nodeType":"StructuredDocumentation","src":"52322:80:14","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","overrides":null,"parameters":{"id":13991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13988,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":13993,"src":"52425:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13987,"name":"int256","nodeType":"ElementaryTypeName","src":"52425:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13990,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":13993,"src":"52438:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13989,"name":"int256","nodeType":"ElementaryTypeName","src":"52438:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"52424:27:14"},"returnParameters":{"id":13992,"nodeType":"ParameterList","parameters":[],"src":"52465:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14003,"nodeType":"FunctionDefinition","src":"52619:82:14","nodes":[],"documentation":{"id":13994,"nodeType":"StructuredDocumentation","src":"52472:142:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","overrides":null,"parameters":{"id":14001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13996,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14003,"src":"52637:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13995,"name":"int256","nodeType":"ElementaryTypeName","src":"52637:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13998,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14003,"src":"52650:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13997,"name":"int256","nodeType":"ElementaryTypeName","src":"52650:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14000,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14003,"src":"52664:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13999,"name":"string","nodeType":"ElementaryTypeName","src":"52664:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"52636:50:14"},"returnParameters":{"id":14002,"nodeType":"ParameterList","parameters":[],"src":"52700:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14013,"nodeType":"FunctionDefinition","src":"52859:86:14","nodes":[],"documentation":{"id":14004,"nodeType":"StructuredDocumentation","src":"52707:147:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","overrides":null,"parameters":{"id":14011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14006,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14013,"src":"52884:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14005,"name":"uint256","nodeType":"ElementaryTypeName","src":"52884:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14008,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14013,"src":"52898:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14007,"name":"uint256","nodeType":"ElementaryTypeName","src":"52898:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14010,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14013,"src":"52913:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14009,"name":"uint256","nodeType":"ElementaryTypeName","src":"52913:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"52883:47:14"},"returnParameters":{"id":14012,"nodeType":"ParameterList","parameters":[],"src":"52944:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14025,"nodeType":"FunctionDefinition","src":"53157:109:14","nodes":[],"documentation":{"id":14014,"nodeType":"StructuredDocumentation","src":"52951:201:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","overrides":null,"parameters":{"id":14023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14016,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14025,"src":"53182:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14015,"name":"uint256","nodeType":"ElementaryTypeName","src":"53182:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14018,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14025,"src":"53196:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14017,"name":"uint256","nodeType":"ElementaryTypeName","src":"53196:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14020,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14025,"src":"53211:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14019,"name":"uint256","nodeType":"ElementaryTypeName","src":"53211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14022,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14025,"src":"53229:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14021,"name":"string","nodeType":"ElementaryTypeName","src":"53229:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"53181:70:14"},"returnParameters":{"id":14024,"nodeType":"ParameterList","parameters":[],"src":"53265:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14035,"nodeType":"FunctionDefinition","src":"53423:84:14","nodes":[],"documentation":{"id":14026,"nodeType":"StructuredDocumentation","src":"53272:146:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","overrides":null,"parameters":{"id":14033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14028,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14035,"src":"53448:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14027,"name":"int256","nodeType":"ElementaryTypeName","src":"53448:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14030,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14035,"src":"53461:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14029,"name":"int256","nodeType":"ElementaryTypeName","src":"53461:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14032,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14035,"src":"53475:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14031,"name":"uint256","nodeType":"ElementaryTypeName","src":"53475:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"53447:45:14"},"returnParameters":{"id":14034,"nodeType":"ParameterList","parameters":[],"src":"53506:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14047,"nodeType":"FunctionDefinition","src":"53718:107:14","nodes":[],"documentation":{"id":14036,"nodeType":"StructuredDocumentation","src":"53513:200:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","overrides":null,"parameters":{"id":14045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14038,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14047,"src":"53743:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14037,"name":"int256","nodeType":"ElementaryTypeName","src":"53743:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14040,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14047,"src":"53756:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14039,"name":"int256","nodeType":"ElementaryTypeName","src":"53756:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14042,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14047,"src":"53770:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14041,"name":"uint256","nodeType":"ElementaryTypeName","src":"53770:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14044,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14047,"src":"53788:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14043,"name":"string","nodeType":"ElementaryTypeName","src":"53788:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"53742:68:14"},"returnParameters":{"id":14046,"nodeType":"ParameterList","parameters":[],"src":"53824:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14055,"nodeType":"FunctionDefinition","src":"53926:61:14","nodes":[],"documentation":{"id":14048,"nodeType":"StructuredDocumentation","src":"53831:90:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","overrides":null,"parameters":{"id":14053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14050,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14055,"src":"53944:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14049,"name":"uint256","nodeType":"ElementaryTypeName","src":"53944:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14052,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14055,"src":"53958:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14051,"name":"uint256","nodeType":"ElementaryTypeName","src":"53958:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"53943:29:14"},"returnParameters":{"id":14054,"nodeType":"ParameterList","parameters":[],"src":"53986:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14065,"nodeType":"FunctionDefinition","src":"54150:84:14","nodes":[],"documentation":{"id":14056,"nodeType":"StructuredDocumentation","src":"53993:152:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","overrides":null,"parameters":{"id":14063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14058,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14065,"src":"54168:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14057,"name":"uint256","nodeType":"ElementaryTypeName","src":"54168:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14060,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14065,"src":"54182:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14059,"name":"uint256","nodeType":"ElementaryTypeName","src":"54182:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14062,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14065,"src":"54197:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14061,"name":"string","nodeType":"ElementaryTypeName","src":"54197:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"54167:52:14"},"returnParameters":{"id":14064,"nodeType":"ParameterList","parameters":[],"src":"54233:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14073,"nodeType":"FunctionDefinition","src":"54334:59:14","nodes":[],"documentation":{"id":14066,"nodeType":"StructuredDocumentation","src":"54240:89:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","overrides":null,"parameters":{"id":14071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14068,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14073,"src":"54352:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14067,"name":"int256","nodeType":"ElementaryTypeName","src":"54352:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14070,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14073,"src":"54365:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14069,"name":"int256","nodeType":"ElementaryTypeName","src":"54365:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"54351:27:14"},"returnParameters":{"id":14072,"nodeType":"ParameterList","parameters":[],"src":"54392:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14083,"nodeType":"FunctionDefinition","src":"54555:82:14","nodes":[],"documentation":{"id":14074,"nodeType":"StructuredDocumentation","src":"54399:151:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","overrides":null,"parameters":{"id":14081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14076,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14083,"src":"54573:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14075,"name":"int256","nodeType":"ElementaryTypeName","src":"54573:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14078,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14083,"src":"54586:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14077,"name":"int256","nodeType":"ElementaryTypeName","src":"54586:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14080,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14083,"src":"54600:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14079,"name":"string","nodeType":"ElementaryTypeName","src":"54600:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"54572:50:14"},"returnParameters":{"id":14082,"nodeType":"ParameterList","parameters":[],"src":"54636:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14093,"nodeType":"FunctionDefinition","src":"54783:86:14","nodes":[],"documentation":{"id":14084,"nodeType":"StructuredDocumentation","src":"54643:135:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","overrides":null,"parameters":{"id":14091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14086,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14093,"src":"54808:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14085,"name":"uint256","nodeType":"ElementaryTypeName","src":"54808:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14088,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14093,"src":"54822:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14087,"name":"uint256","nodeType":"ElementaryTypeName","src":"54822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14090,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14093,"src":"54837:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14089,"name":"uint256","nodeType":"ElementaryTypeName","src":"54837:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"54807:47:14"},"returnParameters":{"id":14092,"nodeType":"ParameterList","parameters":[],"src":"54868:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14105,"nodeType":"FunctionDefinition","src":"55069:109:14","nodes":[],"documentation":{"id":14094,"nodeType":"StructuredDocumentation","src":"54875:189:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","overrides":null,"parameters":{"id":14103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14096,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14105,"src":"55094:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14095,"name":"uint256","nodeType":"ElementaryTypeName","src":"55094:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14098,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14105,"src":"55108:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14097,"name":"uint256","nodeType":"ElementaryTypeName","src":"55108:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14100,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14105,"src":"55123:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14099,"name":"uint256","nodeType":"ElementaryTypeName","src":"55123:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14102,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14105,"src":"55141:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14101,"name":"string","nodeType":"ElementaryTypeName","src":"55141:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"55093:70:14"},"returnParameters":{"id":14104,"nodeType":"ParameterList","parameters":[],"src":"55177:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14115,"nodeType":"FunctionDefinition","src":"55323:84:14","nodes":[],"documentation":{"id":14106,"nodeType":"StructuredDocumentation","src":"55184:134:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","overrides":null,"parameters":{"id":14113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14108,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14115,"src":"55348:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14107,"name":"int256","nodeType":"ElementaryTypeName","src":"55348:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14110,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14115,"src":"55361:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14109,"name":"int256","nodeType":"ElementaryTypeName","src":"55361:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14112,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14115,"src":"55375:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14111,"name":"uint256","nodeType":"ElementaryTypeName","src":"55375:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"55347:45:14"},"returnParameters":{"id":14114,"nodeType":"ParameterList","parameters":[],"src":"55406:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14127,"nodeType":"FunctionDefinition","src":"55606:107:14","nodes":[],"documentation":{"id":14116,"nodeType":"StructuredDocumentation","src":"55413:188:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","overrides":null,"parameters":{"id":14125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14118,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14127,"src":"55631:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14117,"name":"int256","nodeType":"ElementaryTypeName","src":"55631:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14120,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14127,"src":"55644:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14119,"name":"int256","nodeType":"ElementaryTypeName","src":"55644:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14122,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14127,"src":"55658:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14121,"name":"uint256","nodeType":"ElementaryTypeName","src":"55658:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14124,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14127,"src":"55676:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14123,"name":"string","nodeType":"ElementaryTypeName","src":"55676:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"55630:68:14"},"returnParameters":{"id":14126,"nodeType":"ParameterList","parameters":[],"src":"55712:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14135,"nodeType":"FunctionDefinition","src":"55802:61:14","nodes":[],"documentation":{"id":14128,"nodeType":"StructuredDocumentation","src":"55719:78:14","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","overrides":null,"parameters":{"id":14133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14130,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14135,"src":"55820:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14129,"name":"uint256","nodeType":"ElementaryTypeName","src":"55820:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14132,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14135,"src":"55834:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14131,"name":"uint256","nodeType":"ElementaryTypeName","src":"55834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"55819:29:14"},"returnParameters":{"id":14134,"nodeType":"ParameterList","parameters":[],"src":"55862:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14145,"nodeType":"FunctionDefinition","src":"56014:84:14","nodes":[],"documentation":{"id":14136,"nodeType":"StructuredDocumentation","src":"55869:140:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","overrides":null,"parameters":{"id":14143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14138,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14145,"src":"56032:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14137,"name":"uint256","nodeType":"ElementaryTypeName","src":"56032:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14140,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14145,"src":"56046:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14139,"name":"uint256","nodeType":"ElementaryTypeName","src":"56046:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14142,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14145,"src":"56061:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14141,"name":"string","nodeType":"ElementaryTypeName","src":"56061:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"56031:52:14"},"returnParameters":{"id":14144,"nodeType":"ParameterList","parameters":[],"src":"56097:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14153,"nodeType":"FunctionDefinition","src":"56186:59:14","nodes":[],"documentation":{"id":14146,"nodeType":"StructuredDocumentation","src":"56104:77:14","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","overrides":null,"parameters":{"id":14151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14148,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14153,"src":"56204:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14147,"name":"int256","nodeType":"ElementaryTypeName","src":"56204:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14150,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14153,"src":"56217:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14149,"name":"int256","nodeType":"ElementaryTypeName","src":"56217:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"56203:27:14"},"returnParameters":{"id":14152,"nodeType":"ParameterList","parameters":[],"src":"56244:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14163,"nodeType":"FunctionDefinition","src":"56395:82:14","nodes":[],"documentation":{"id":14154,"nodeType":"StructuredDocumentation","src":"56251:139:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","overrides":null,"parameters":{"id":14161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14156,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14163,"src":"56413:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14155,"name":"int256","nodeType":"ElementaryTypeName","src":"56413:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14158,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14163,"src":"56426:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14157,"name":"int256","nodeType":"ElementaryTypeName","src":"56426:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14160,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14163,"src":"56440:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14159,"name":"string","nodeType":"ElementaryTypeName","src":"56440:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"56412:50:14"},"returnParameters":{"id":14162,"nodeType":"ParameterList","parameters":[],"src":"56476:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14173,"nodeType":"FunctionDefinition","src":"56590:89:14","nodes":[],"documentation":{"id":14164,"nodeType":"StructuredDocumentation","src":"56483:102:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","overrides":null,"parameters":{"id":14171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14166,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14173,"src":"56618:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14165,"name":"uint256","nodeType":"ElementaryTypeName","src":"56618:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14168,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14173,"src":"56632:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14167,"name":"uint256","nodeType":"ElementaryTypeName","src":"56632:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14170,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14173,"src":"56647:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14169,"name":"uint256","nodeType":"ElementaryTypeName","src":"56647:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"56617:47:14"},"returnParameters":{"id":14172,"nodeType":"ParameterList","parameters":[],"src":"56678:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14185,"nodeType":"FunctionDefinition","src":"56854:112:14","nodes":[],"documentation":{"id":14174,"nodeType":"StructuredDocumentation","src":"56685:164:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","overrides":null,"parameters":{"id":14183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14176,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14185,"src":"56882:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14175,"name":"uint256","nodeType":"ElementaryTypeName","src":"56882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14178,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14185,"src":"56896:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14177,"name":"uint256","nodeType":"ElementaryTypeName","src":"56896:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14180,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14185,"src":"56911:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14179,"name":"uint256","nodeType":"ElementaryTypeName","src":"56911:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14182,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14185,"src":"56929:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14181,"name":"string","nodeType":"ElementaryTypeName","src":"56929:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"56881:70:14"},"returnParameters":{"id":14184,"nodeType":"ParameterList","parameters":[],"src":"56965:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14195,"nodeType":"FunctionDefinition","src":"57078:87:14","nodes":[],"documentation":{"id":14186,"nodeType":"StructuredDocumentation","src":"56972:101:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","overrides":null,"parameters":{"id":14193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14188,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14195,"src":"57106:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14187,"name":"int256","nodeType":"ElementaryTypeName","src":"57106:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14190,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14195,"src":"57119:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14189,"name":"int256","nodeType":"ElementaryTypeName","src":"57119:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14192,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14195,"src":"57133:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14191,"name":"uint256","nodeType":"ElementaryTypeName","src":"57133:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"57105:45:14"},"returnParameters":{"id":14194,"nodeType":"ParameterList","parameters":[],"src":"57164:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14207,"nodeType":"FunctionDefinition","src":"57339:110:14","nodes":[],"documentation":{"id":14196,"nodeType":"StructuredDocumentation","src":"57171:163:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","overrides":null,"parameters":{"id":14205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14198,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14207,"src":"57367:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14197,"name":"int256","nodeType":"ElementaryTypeName","src":"57367:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14200,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14207,"src":"57380:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14199,"name":"int256","nodeType":"ElementaryTypeName","src":"57380:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14202,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","overrides":null,"scope":14207,"src":"57394:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14201,"name":"uint256","nodeType":"ElementaryTypeName","src":"57394:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14204,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14207,"src":"57412:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14203,"name":"string","nodeType":"ElementaryTypeName","src":"57412:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"57366:68:14"},"returnParameters":{"id":14206,"nodeType":"ParameterList","parameters":[],"src":"57448:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14215,"nodeType":"FunctionDefinition","src":"57509:58:14","nodes":[],"documentation":{"id":14208,"nodeType":"StructuredDocumentation","src":"57455:49:14","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14210,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14215,"src":"57530:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14209,"name":"bool","nodeType":"ElementaryTypeName","src":"57530:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":14212,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14215,"src":"57541:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14211,"name":"bool","nodeType":"ElementaryTypeName","src":"57541:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"57529:23:14"},"returnParameters":{"id":14214,"nodeType":"ParameterList","parameters":[],"src":"57566:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14225,"nodeType":"FunctionDefinition","src":"57684:81:14","nodes":[],"documentation":{"id":14216,"nodeType":"StructuredDocumentation","src":"57573:106:14","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14218,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14225,"src":"57705:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14217,"name":"bool","nodeType":"ElementaryTypeName","src":"57705:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":14220,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14225,"src":"57716:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14219,"name":"bool","nodeType":"ElementaryTypeName","src":"57716:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":14222,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14225,"src":"57728:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14221,"name":"string","nodeType":"ElementaryTypeName","src":"57728:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"57704:46:14"},"returnParameters":{"id":14224,"nodeType":"ParameterList","parameters":[],"src":"57764:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14233,"nodeType":"FunctionDefinition","src":"57827:80:14","nodes":[],"documentation":{"id":14226,"nodeType":"StructuredDocumentation","src":"57771:51:14","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14228,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14233,"src":"57848:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14227,"name":"string","nodeType":"ElementaryTypeName","src":"57848:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14230,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14233,"src":"57870:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14229,"name":"string","nodeType":"ElementaryTypeName","src":"57870:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"57847:45:14"},"returnParameters":{"id":14232,"nodeType":"ParameterList","parameters":[],"src":"57906:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14243,"nodeType":"FunctionDefinition","src":"58026:103:14","nodes":[],"documentation":{"id":14234,"nodeType":"StructuredDocumentation","src":"57913:108:14","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14236,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14243,"src":"58047:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14235,"name":"string","nodeType":"ElementaryTypeName","src":"58047:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14238,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14243,"src":"58069:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14237,"name":"string","nodeType":"ElementaryTypeName","src":"58069:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14240,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14243,"src":"58092:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14239,"name":"string","nodeType":"ElementaryTypeName","src":"58092:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"58046:68:14"},"returnParameters":{"id":14242,"nodeType":"ParameterList","parameters":[],"src":"58128:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14251,"nodeType":"FunctionDefinition","src":"58190:78:14","nodes":[],"documentation":{"id":14244,"nodeType":"StructuredDocumentation","src":"58135:50:14","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14246,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14251,"src":"58211:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14245,"name":"bytes","nodeType":"ElementaryTypeName","src":"58211:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":14248,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14251,"src":"58232:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14247,"name":"bytes","nodeType":"ElementaryTypeName","src":"58232:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"58210:43:14"},"returnParameters":{"id":14250,"nodeType":"ParameterList","parameters":[],"src":"58267:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14261,"nodeType":"FunctionDefinition","src":"58386:101:14","nodes":[],"documentation":{"id":14252,"nodeType":"StructuredDocumentation","src":"58274:107:14","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14254,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14261,"src":"58407:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14253,"name":"bytes","nodeType":"ElementaryTypeName","src":"58407:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":14256,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14261,"src":"58428:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14255,"name":"bytes","nodeType":"ElementaryTypeName","src":"58428:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":14258,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14261,"src":"58450:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14257,"name":"string","nodeType":"ElementaryTypeName","src":"58450:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"58406:66:14"},"returnParameters":{"id":14260,"nodeType":"ParameterList","parameters":[],"src":"58486:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14271,"nodeType":"FunctionDefinition","src":"58557:80:14","nodes":[],"documentation":{"id":14262,"nodeType":"StructuredDocumentation","src":"58493:59:14","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14265,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14271,"src":"58578:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14263,"name":"bool","nodeType":"ElementaryTypeName","src":"58578:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14264,"length":null,"nodeType":"ArrayTypeName","src":"58578:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14268,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14271,"src":"58600:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14266,"name":"bool","nodeType":"ElementaryTypeName","src":"58600:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14267,"length":null,"nodeType":"ArrayTypeName","src":"58600:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"}],"src":"58577:45:14"},"returnParameters":{"id":14270,"nodeType":"ParameterList","parameters":[],"src":"58636:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14283,"nodeType":"FunctionDefinition","src":"58764:103:14","nodes":[],"documentation":{"id":14272,"nodeType":"StructuredDocumentation","src":"58643:116:14","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14275,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14283,"src":"58785:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14273,"name":"bool","nodeType":"ElementaryTypeName","src":"58785:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14274,"length":null,"nodeType":"ArrayTypeName","src":"58785:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14278,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14283,"src":"58807:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14276,"name":"bool","nodeType":"ElementaryTypeName","src":"58807:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14277,"length":null,"nodeType":"ArrayTypeName","src":"58807:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14280,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14283,"src":"58830:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14279,"name":"string","nodeType":"ElementaryTypeName","src":"58830:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"58784:68:14"},"returnParameters":{"id":14282,"nodeType":"ParameterList","parameters":[],"src":"58866:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14293,"nodeType":"FunctionDefinition","src":"58940:86:14","nodes":[],"documentation":{"id":14284,"nodeType":"StructuredDocumentation","src":"58873:62:14","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14287,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14293,"src":"58961:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14285,"name":"uint256","nodeType":"ElementaryTypeName","src":"58961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14286,"length":null,"nodeType":"ArrayTypeName","src":"58961:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14290,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14293,"src":"58986:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14288,"name":"uint256","nodeType":"ElementaryTypeName","src":"58986:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14289,"length":null,"nodeType":"ArrayTypeName","src":"58986:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"58960:51:14"},"returnParameters":{"id":14292,"nodeType":"ParameterList","parameters":[],"src":"59025:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14305,"nodeType":"FunctionDefinition","src":"59156:109:14","nodes":[],"documentation":{"id":14294,"nodeType":"StructuredDocumentation","src":"59032:119:14","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14297,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14305,"src":"59177:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14295,"name":"uint256","nodeType":"ElementaryTypeName","src":"59177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14296,"length":null,"nodeType":"ArrayTypeName","src":"59177:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14300,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14305,"src":"59202:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14298,"name":"uint256","nodeType":"ElementaryTypeName","src":"59202:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14299,"length":null,"nodeType":"ArrayTypeName","src":"59202:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14302,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14305,"src":"59228:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14301,"name":"string","nodeType":"ElementaryTypeName","src":"59228:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"59176:74:14"},"returnParameters":{"id":14304,"nodeType":"ParameterList","parameters":[],"src":"59264:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14315,"nodeType":"FunctionDefinition","src":"59337:84:14","nodes":[],"documentation":{"id":14306,"nodeType":"StructuredDocumentation","src":"59271:61:14","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14309,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14315,"src":"59358:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14307,"name":"int256","nodeType":"ElementaryTypeName","src":"59358:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14308,"length":null,"nodeType":"ArrayTypeName","src":"59358:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14312,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14315,"src":"59382:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14310,"name":"int256","nodeType":"ElementaryTypeName","src":"59382:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14311,"length":null,"nodeType":"ArrayTypeName","src":"59382:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"}],"src":"59357:49:14"},"returnParameters":{"id":14314,"nodeType":"ParameterList","parameters":[],"src":"59420:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14327,"nodeType":"FunctionDefinition","src":"59550:107:14","nodes":[],"documentation":{"id":14316,"nodeType":"StructuredDocumentation","src":"59427:118:14","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14319,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14327,"src":"59571:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14317,"name":"int256","nodeType":"ElementaryTypeName","src":"59571:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14318,"length":null,"nodeType":"ArrayTypeName","src":"59571:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14322,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14327,"src":"59595:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14320,"name":"int256","nodeType":"ElementaryTypeName","src":"59595:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14321,"length":null,"nodeType":"ArrayTypeName","src":"59595:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14324,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14327,"src":"59620:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14323,"name":"string","nodeType":"ElementaryTypeName","src":"59620:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"59570:72:14"},"returnParameters":{"id":14326,"nodeType":"ParameterList","parameters":[],"src":"59656:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14335,"nodeType":"FunctionDefinition","src":"59720:64:14","nodes":[],"documentation":{"id":14328,"nodeType":"StructuredDocumentation","src":"59663:52:14","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14330,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14335,"src":"59741:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14329,"name":"uint256","nodeType":"ElementaryTypeName","src":"59741:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14332,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14335,"src":"59755:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14331,"name":"uint256","nodeType":"ElementaryTypeName","src":"59755:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"59740:29:14"},"returnParameters":{"id":14334,"nodeType":"ParameterList","parameters":[],"src":"59783:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14345,"nodeType":"FunctionDefinition","src":"59857:86:14","nodes":[],"documentation":{"id":14336,"nodeType":"StructuredDocumentation","src":"59790:62:14","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14339,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14345,"src":"59878:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14337,"name":"address","nodeType":"ElementaryTypeName","src":"59878:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14338,"length":null,"nodeType":"ArrayTypeName","src":"59878:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14342,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14345,"src":"59903:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14340,"name":"address","nodeType":"ElementaryTypeName","src":"59903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14341,"length":null,"nodeType":"ArrayTypeName","src":"59903:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"59877:51:14"},"returnParameters":{"id":14344,"nodeType":"ParameterList","parameters":[],"src":"59942:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14357,"nodeType":"FunctionDefinition","src":"60073:109:14","nodes":[],"documentation":{"id":14346,"nodeType":"StructuredDocumentation","src":"59949:119:14","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14349,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14357,"src":"60094:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14347,"name":"address","nodeType":"ElementaryTypeName","src":"60094:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14348,"length":null,"nodeType":"ArrayTypeName","src":"60094:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14352,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14357,"src":"60119:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14350,"name":"address","nodeType":"ElementaryTypeName","src":"60119:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14351,"length":null,"nodeType":"ArrayTypeName","src":"60119:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14354,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14357,"src":"60145:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14353,"name":"string","nodeType":"ElementaryTypeName","src":"60145:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"60093:74:14"},"returnParameters":{"id":14356,"nodeType":"ParameterList","parameters":[],"src":"60181:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14367,"nodeType":"FunctionDefinition","src":"60255:86:14","nodes":[],"documentation":{"id":14358,"nodeType":"StructuredDocumentation","src":"60188:62:14","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14361,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14367,"src":"60276:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60276:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14360,"length":null,"nodeType":"ArrayTypeName","src":"60276:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14364,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14367,"src":"60301:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60301:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14363,"length":null,"nodeType":"ArrayTypeName","src":"60301:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"60275:51:14"},"returnParameters":{"id":14366,"nodeType":"ParameterList","parameters":[],"src":"60340:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14379,"nodeType":"FunctionDefinition","src":"60471:109:14","nodes":[],"documentation":{"id":14368,"nodeType":"StructuredDocumentation","src":"60347:119:14","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14371,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14379,"src":"60492:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60492:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14370,"length":null,"nodeType":"ArrayTypeName","src":"60492:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14374,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14379,"src":"60517:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60517:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14373,"length":null,"nodeType":"ArrayTypeName","src":"60517:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14376,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14379,"src":"60543:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14375,"name":"string","nodeType":"ElementaryTypeName","src":"60543:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"60491:74:14"},"returnParameters":{"id":14378,"nodeType":"ParameterList","parameters":[],"src":"60579:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14389,"nodeType":"FunctionDefinition","src":"60652:84:14","nodes":[],"documentation":{"id":14380,"nodeType":"StructuredDocumentation","src":"60586:61:14","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14383,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14389,"src":"60673:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14381,"name":"string","nodeType":"ElementaryTypeName","src":"60673:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14382,"length":null,"nodeType":"ArrayTypeName","src":"60673:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14386,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14389,"src":"60697:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14384,"name":"string","nodeType":"ElementaryTypeName","src":"60697:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14385,"length":null,"nodeType":"ArrayTypeName","src":"60697:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"60672:49:14"},"returnParameters":{"id":14388,"nodeType":"ParameterList","parameters":[],"src":"60735:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14401,"nodeType":"FunctionDefinition","src":"60865:107:14","nodes":[],"documentation":{"id":14390,"nodeType":"StructuredDocumentation","src":"60742:118:14","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14393,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14401,"src":"60886:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14391,"name":"string","nodeType":"ElementaryTypeName","src":"60886:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14392,"length":null,"nodeType":"ArrayTypeName","src":"60886:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14396,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14401,"src":"60910:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14394,"name":"string","nodeType":"ElementaryTypeName","src":"60910:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14395,"length":null,"nodeType":"ArrayTypeName","src":"60910:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14398,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14401,"src":"60935:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14397,"name":"string","nodeType":"ElementaryTypeName","src":"60935:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"60885:72:14"},"returnParameters":{"id":14400,"nodeType":"ParameterList","parameters":[],"src":"60971:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14411,"nodeType":"FunctionDefinition","src":"61043:82:14","nodes":[],"documentation":{"id":14402,"nodeType":"StructuredDocumentation","src":"60978:60:14","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14405,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14411,"src":"61064:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14403,"name":"bytes","nodeType":"ElementaryTypeName","src":"61064:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14404,"length":null,"nodeType":"ArrayTypeName","src":"61064:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14408,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14411,"src":"61087:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14406,"name":"bytes","nodeType":"ElementaryTypeName","src":"61087:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14407,"length":null,"nodeType":"ArrayTypeName","src":"61087:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"}],"src":"61063:47:14"},"returnParameters":{"id":14410,"nodeType":"ParameterList","parameters":[],"src":"61124:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14423,"nodeType":"FunctionDefinition","src":"61253:105:14","nodes":[],"documentation":{"id":14412,"nodeType":"StructuredDocumentation","src":"61131:117:14","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14415,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14423,"src":"61274:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14413,"name":"bytes","nodeType":"ElementaryTypeName","src":"61274:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14414,"length":null,"nodeType":"ArrayTypeName","src":"61274:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14418,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14423,"src":"61297:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14416,"name":"bytes","nodeType":"ElementaryTypeName","src":"61297:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14417,"length":null,"nodeType":"ArrayTypeName","src":"61297:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14420,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14423,"src":"61321:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14419,"name":"string","nodeType":"ElementaryTypeName","src":"61321:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"61273:70:14"},"returnParameters":{"id":14422,"nodeType":"ParameterList","parameters":[],"src":"61357:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14433,"nodeType":"FunctionDefinition","src":"61478:87:14","nodes":[],"documentation":{"id":14424,"nodeType":"StructuredDocumentation","src":"61364:109:14","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14426,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14433,"src":"61499:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14425,"name":"uint256","nodeType":"ElementaryTypeName","src":"61499:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14428,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14433,"src":"61513:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14427,"name":"uint256","nodeType":"ElementaryTypeName","src":"61513:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14430,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14433,"src":"61528:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14429,"name":"string","nodeType":"ElementaryTypeName","src":"61528:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"61498:52:14"},"returnParameters":{"id":14432,"nodeType":"ParameterList","parameters":[],"src":"61564:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14441,"nodeType":"FunctionDefinition","src":"61627:62:14","nodes":[],"documentation":{"id":14434,"nodeType":"StructuredDocumentation","src":"61571:51:14","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14436,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14441,"src":"61648:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14435,"name":"int256","nodeType":"ElementaryTypeName","src":"61648:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14438,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14441,"src":"61661:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14437,"name":"int256","nodeType":"ElementaryTypeName","src":"61661:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"61647:27:14"},"returnParameters":{"id":14440,"nodeType":"ParameterList","parameters":[],"src":"61688:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14451,"nodeType":"FunctionDefinition","src":"61808:85:14","nodes":[],"documentation":{"id":14442,"nodeType":"StructuredDocumentation","src":"61695:108:14","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14444,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14451,"src":"61829:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14443,"name":"int256","nodeType":"ElementaryTypeName","src":"61829:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14446,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14451,"src":"61842:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14445,"name":"int256","nodeType":"ElementaryTypeName","src":"61842:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14448,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14451,"src":"61856:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14447,"name":"string","nodeType":"ElementaryTypeName","src":"61856:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"61828:50:14"},"returnParameters":{"id":14450,"nodeType":"ParameterList","parameters":[],"src":"61892:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14459,"nodeType":"FunctionDefinition","src":"61956:64:14","nodes":[],"documentation":{"id":14452,"nodeType":"StructuredDocumentation","src":"61899:52:14","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14454,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14459,"src":"61977:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14453,"name":"address","nodeType":"ElementaryTypeName","src":"61977:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":14456,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14459,"src":"61991:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14455,"name":"address","nodeType":"ElementaryTypeName","src":"61991:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"61976:29:14"},"returnParameters":{"id":14458,"nodeType":"ParameterList","parameters":[],"src":"62019:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14469,"nodeType":"FunctionDefinition","src":"62140:87:14","nodes":[],"documentation":{"id":14460,"nodeType":"StructuredDocumentation","src":"62026:109:14","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14462,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14469,"src":"62161:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14461,"name":"address","nodeType":"ElementaryTypeName","src":"62161:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":14464,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14469,"src":"62175:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14463,"name":"address","nodeType":"ElementaryTypeName","src":"62175:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":14466,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14469,"src":"62190:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14465,"name":"string","nodeType":"ElementaryTypeName","src":"62190:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"62160:52:14"},"returnParameters":{"id":14468,"nodeType":"ParameterList","parameters":[],"src":"62226:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14477,"nodeType":"FunctionDefinition","src":"62290:64:14","nodes":[],"documentation":{"id":14470,"nodeType":"StructuredDocumentation","src":"62233:52:14","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14472,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14477,"src":"62311:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62311:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14474,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14477,"src":"62325:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62325:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"62310:29:14"},"returnParameters":{"id":14476,"nodeType":"ParameterList","parameters":[],"src":"62353:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14487,"nodeType":"FunctionDefinition","src":"62474:87:14","nodes":[],"documentation":{"id":14478,"nodeType":"StructuredDocumentation","src":"62360:109:14","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","overrides":null,"parameters":{"id":14485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14480,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","overrides":null,"scope":14487,"src":"62495:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62495:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14482,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","overrides":null,"scope":14487,"src":"62509:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62509:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14484,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14487,"src":"62524:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14483,"name":"string","nodeType":"ElementaryTypeName","src":"62524:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"62494:52:14"},"returnParameters":{"id":14486,"nodeType":"ParameterList","parameters":[],"src":"62560:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14493,"nodeType":"FunctionDefinition","src":"62617:50:14","nodes":[],"documentation":{"id":14488,"nodeType":"StructuredDocumentation","src":"62567:45:14","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","overrides":null,"parameters":{"id":14491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14490,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","overrides":null,"scope":14493,"src":"62637:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14489,"name":"bool","nodeType":"ElementaryTypeName","src":"62637:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"62636:16:14"},"returnParameters":{"id":14492,"nodeType":"ParameterList","parameters":[],"src":"62666:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14501,"nodeType":"FunctionDefinition","src":"62780:73:14","nodes":[],"documentation":{"id":14494,"nodeType":"StructuredDocumentation","src":"62673:102:14","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","overrides":null,"parameters":{"id":14499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14496,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","overrides":null,"scope":14501,"src":"62800:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14495,"name":"bool","nodeType":"ElementaryTypeName","src":"62800:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":14498,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","overrides":null,"scope":14501,"src":"62816:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14497,"name":"string","nodeType":"ElementaryTypeName","src":"62816:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"62799:39:14"},"returnParameters":{"id":14500,"nodeType":"ParameterList","parameters":[],"src":"62852:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14507,"nodeType":"FunctionDefinition","src":"62948:46:14","nodes":[],"documentation":{"id":14502,"nodeType":"StructuredDocumentation","src":"62859:84:14","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","overrides":null,"parameters":{"id":14505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14504,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","overrides":null,"scope":14507,"src":"62964:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14503,"name":"bool","nodeType":"ElementaryTypeName","src":"62964:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"62963:16:14"},"returnParameters":{"id":14506,"nodeType":"ParameterList","parameters":[],"src":"62993:0:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14513,"nodeType":"FunctionDefinition","src":"63056:51:14","nodes":[],"documentation":{"id":14508,"nodeType":"StructuredDocumentation","src":"63000:51:14","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","overrides":null,"parameters":{"id":14511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14510,"mutability":"mutable","name":"char","nodeType":"VariableDeclaration","overrides":null,"scope":14513,"src":"63076:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14509,"name":"string","nodeType":"ElementaryTypeName","src":"63076:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"63075:22:14"},"returnParameters":{"id":14512,"nodeType":"ParameterList","parameters":[],"src":"63106:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14521,"nodeType":"FunctionDefinition","src":"63181:63:14","nodes":[],"documentation":{"id":14514,"nodeType":"StructuredDocumentation","src":"63113:63:14","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","overrides":null,"parameters":{"id":14519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14516,"mutability":"mutable","name":"char","nodeType":"VariableDeclaration","overrides":null,"scope":14521,"src":"63201:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14515,"name":"string","nodeType":"ElementaryTypeName","src":"63201:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14518,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":14521,"src":"63223:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14517,"name":"bool","nodeType":"ElementaryTypeName","src":"63223:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"63200:34:14"},"returnParameters":{"id":14520,"nodeType":"ParameterList","parameters":[],"src":"63243:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14529,"nodeType":"FunctionDefinition","src":"63299:85:14","nodes":[],"documentation":{"id":14522,"nodeType":"StructuredDocumentation","src":"63250:44:14","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","overrides":null,"parameters":{"id":14525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14524,"mutability":"mutable","name":"rpcAlias","nodeType":"VariableDeclaration","overrides":null,"scope":14529,"src":"63315:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14523,"name":"string","nodeType":"ElementaryTypeName","src":"63315:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"63314:26:14"},"returnParameters":{"id":14528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14527,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":14529,"src":"63364:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14526,"name":"string","nodeType":"ElementaryTypeName","src":"63364:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"63363:20:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14536,"nodeType":"FunctionDefinition","src":"63449:67:14","nodes":[],"documentation":{"id":14530,"nodeType":"StructuredDocumentation","src":"63390:54:14","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","overrides":null,"parameters":{"id":14531,"nodeType":"ParameterList","parameters":[],"src":"63471:2:14"},"returnParameters":{"id":14535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14534,"mutability":"mutable","name":"urls","nodeType":"VariableDeclaration","overrides":null,"scope":14536,"src":"63497:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$11933_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"contractScope":null,"id":14532,"name":"Rpc","nodeType":"UserDefinedTypeName","referencedDeclaration":11933,"src":"63497:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$11933_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":14533,"length":null,"nodeType":"ArrayTypeName","src":"63497:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$11933_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"value":null,"visibility":"internal"}],"src":"63496:19:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14545,"nodeType":"FunctionDefinition","src":"63587:67:14","nodes":[],"documentation":{"id":14537,"nodeType":"StructuredDocumentation","src":"63522:60:14","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","overrides":null,"parameters":{"id":14538,"nodeType":"ParameterList","parameters":[],"src":"63603:2:14"},"returnParameters":{"id":14544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14543,"mutability":"mutable","name":"urls","nodeType":"VariableDeclaration","overrides":null,"scope":14545,"src":"63629:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":14539,"name":"string","nodeType":"ElementaryTypeName","src":"63629:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14541,"length":{"argumentTypes":null,"hexValue":"32","id":14540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63636:1:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"63629:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":14542,"length":null,"nodeType":"ArrayTypeName","src":"63629:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"value":null,"visibility":"internal"}],"src":"63628:25:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14551,"nodeType":"FunctionDefinition","src":"63735:42:14","nodes":[],"documentation":{"id":14546,"nodeType":"StructuredDocumentation","src":"63660:70:14","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","overrides":null,"parameters":{"id":14549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14548,"mutability":"mutable","name":"duration","nodeType":"VariableDeclaration","overrides":null,"scope":14551,"src":"63750:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14547,"name":"uint256","nodeType":"ElementaryTypeName","src":"63750:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"63749:18:14"},"returnParameters":{"id":14550,"nodeType":"ParameterList","parameters":[],"src":"63776:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14561,"nodeType":"FunctionDefinition","src":"63862:95:14","nodes":[],"documentation":{"id":14552,"nodeType":"StructuredDocumentation","src":"63814:43:14","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","overrides":null,"parameters":{"id":14557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14554,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14561,"src":"63885:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14553,"name":"string","nodeType":"ElementaryTypeName","src":"63885:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14556,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14561,"src":"63907:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14555,"name":"string","nodeType":"ElementaryTypeName","src":"63907:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"63884:43:14"},"returnParameters":{"id":14560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14559,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14561,"src":"63951:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14558,"name":"bool","nodeType":"ElementaryTypeName","src":"63951:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"63950:6:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14571,"nodeType":"FunctionDefinition","src":"64038:101:14","nodes":[],"documentation":{"id":14562,"nodeType":"StructuredDocumentation","src":"63963:70:14","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","overrides":null,"parameters":{"id":14567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14564,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14571,"src":"64064:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14563,"name":"string","nodeType":"ElementaryTypeName","src":"64064:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14566,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14571,"src":"64086:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14565,"name":"string","nodeType":"ElementaryTypeName","src":"64086:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"64063:43:14"},"returnParameters":{"id":14570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14569,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14571,"src":"64130:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14568,"name":"address","nodeType":"ElementaryTypeName","src":"64130:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"64129:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14582,"nodeType":"FunctionDefinition","src":"64222:139:14","nodes":[],"documentation":{"id":14572,"nodeType":"StructuredDocumentation","src":"64145:72:14","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","overrides":null,"parameters":{"id":14577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14574,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14582,"src":"64253:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14573,"name":"string","nodeType":"ElementaryTypeName","src":"64253:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14576,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14582,"src":"64275:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14575,"name":"string","nodeType":"ElementaryTypeName","src":"64275:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"64252:43:14"},"returnParameters":{"id":14581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14580,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14582,"src":"64343:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14578,"name":"address","nodeType":"ElementaryTypeName","src":"64343:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14579,"length":null,"nodeType":"ArrayTypeName","src":"64343:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"64342:18:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14592,"nodeType":"FunctionDefinition","src":"64439:95:14","nodes":[],"documentation":{"id":14583,"nodeType":"StructuredDocumentation","src":"64367:67:14","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","overrides":null,"parameters":{"id":14588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14585,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14592,"src":"64462:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14584,"name":"string","nodeType":"ElementaryTypeName","src":"64462:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14587,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14592,"src":"64484:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14586,"name":"string","nodeType":"ElementaryTypeName","src":"64484:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"64461:43:14"},"returnParameters":{"id":14591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14590,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14592,"src":"64528:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14589,"name":"bool","nodeType":"ElementaryTypeName","src":"64528:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"64527:6:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14603,"nodeType":"FunctionDefinition","src":"64614:109:14","nodes":[],"documentation":{"id":14593,"nodeType":"StructuredDocumentation","src":"64540:69:14","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","overrides":null,"parameters":{"id":14598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14595,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14603,"src":"64642:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14594,"name":"string","nodeType":"ElementaryTypeName","src":"64642:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14597,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14603,"src":"64664:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14596,"name":"string","nodeType":"ElementaryTypeName","src":"64664:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"64641:43:14"},"returnParameters":{"id":14602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14601,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14603,"src":"64708:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14599,"name":"bool","nodeType":"ElementaryTypeName","src":"64708:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14600,"length":null,"nodeType":"ArrayTypeName","src":"64708:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"value":null,"visibility":"internal"}],"src":"64707:15:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14613,"nodeType":"FunctionDefinition","src":"64802:104:14","nodes":[],"documentation":{"id":14604,"nodeType":"StructuredDocumentation","src":"64729:68:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","overrides":null,"parameters":{"id":14609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14606,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14613,"src":"64826:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14605,"name":"string","nodeType":"ElementaryTypeName","src":"64826:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14608,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14613,"src":"64848:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14607,"name":"string","nodeType":"ElementaryTypeName","src":"64848:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"64825:43:14"},"returnParameters":{"id":14612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14611,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14613,"src":"64892:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14610,"name":"bytes","nodeType":"ElementaryTypeName","src":"64892:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"64891:14:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14623,"nodeType":"FunctionDefinition","src":"64987:101:14","nodes":[],"documentation":{"id":14614,"nodeType":"StructuredDocumentation","src":"64912:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","overrides":null,"parameters":{"id":14619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14616,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14623,"src":"65013:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14615,"name":"string","nodeType":"ElementaryTypeName","src":"65013:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14618,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14623,"src":"65035:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14617,"name":"string","nodeType":"ElementaryTypeName","src":"65035:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"65012:43:14"},"returnParameters":{"id":14622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14621,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14623,"src":"65079:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65079:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"65078:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14634,"nodeType":"FunctionDefinition","src":"65171:139:14","nodes":[],"documentation":{"id":14624,"nodeType":"StructuredDocumentation","src":"65094:72:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","overrides":null,"parameters":{"id":14629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14626,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14634,"src":"65202:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14625,"name":"string","nodeType":"ElementaryTypeName","src":"65202:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14628,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14634,"src":"65224:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14627,"name":"string","nodeType":"ElementaryTypeName","src":"65224:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"65201:43:14"},"returnParameters":{"id":14633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14632,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14634,"src":"65292:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65292:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14631,"length":null,"nodeType":"ArrayTypeName","src":"65292:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"65291:18:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14645,"nodeType":"FunctionDefinition","src":"65391:111:14","nodes":[],"documentation":{"id":14635,"nodeType":"StructuredDocumentation","src":"65316:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","overrides":null,"parameters":{"id":14640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14637,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14645,"src":"65420:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14636,"name":"string","nodeType":"ElementaryTypeName","src":"65420:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14639,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14645,"src":"65442:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14638,"name":"string","nodeType":"ElementaryTypeName","src":"65442:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"65419:43:14"},"returnParameters":{"id":14644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14643,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14645,"src":"65486:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14641,"name":"bytes","nodeType":"ElementaryTypeName","src":"65486:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14642,"length":null,"nodeType":"ArrayTypeName","src":"65486:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"value":null,"visibility":"internal"}],"src":"65485:16:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14655,"nodeType":"FunctionDefinition","src":"65582:96:14","nodes":[],"documentation":{"id":14646,"nodeType":"StructuredDocumentation","src":"65508:69:14","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","overrides":null,"parameters":{"id":14651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14648,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14655,"src":"65604:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14647,"name":"string","nodeType":"ElementaryTypeName","src":"65604:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14650,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14655,"src":"65626:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14649,"name":"string","nodeType":"ElementaryTypeName","src":"65626:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"65603:43:14"},"returnParameters":{"id":14654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14653,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14655,"src":"65670:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14652,"name":"int256","nodeType":"ElementaryTypeName","src":"65670:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":null,"visibility":"internal"}],"src":"65669:8:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14666,"nodeType":"FunctionDefinition","src":"65760:110:14","nodes":[],"documentation":{"id":14656,"nodeType":"StructuredDocumentation","src":"65684:71:14","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","overrides":null,"parameters":{"id":14661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14658,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14666,"src":"65787:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14657,"name":"string","nodeType":"ElementaryTypeName","src":"65787:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14660,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14666,"src":"65809:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14659,"name":"string","nodeType":"ElementaryTypeName","src":"65809:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"65786:43:14"},"returnParameters":{"id":14665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14664,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14666,"src":"65853:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14662,"name":"int256","nodeType":"ElementaryTypeName","src":"65853:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14663,"length":null,"nodeType":"ArrayTypeName","src":"65853:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"value":null,"visibility":"internal"}],"src":"65852:17:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14677,"nodeType":"FunctionDefinition","src":"65934:111:14","nodes":[],"documentation":{"id":14667,"nodeType":"StructuredDocumentation","src":"65876:53:14","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","overrides":null,"parameters":{"id":14672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14669,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14677,"src":"65957:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14668,"name":"string","nodeType":"ElementaryTypeName","src":"65957:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14671,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14677,"src":"65979:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14670,"name":"string","nodeType":"ElementaryTypeName","src":"65979:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"65956:43:14"},"returnParameters":{"id":14676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14675,"mutability":"mutable","name":"keys","nodeType":"VariableDeclaration","overrides":null,"scope":14677,"src":"66023:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14673,"name":"string","nodeType":"ElementaryTypeName","src":"66023:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14674,"length":null,"nodeType":"ArrayTypeName","src":"66023:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"66022:22:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14687,"nodeType":"FunctionDefinition","src":"66125:106:14","nodes":[],"documentation":{"id":14678,"nodeType":"StructuredDocumentation","src":"66051:69:14","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","overrides":null,"parameters":{"id":14683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14680,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14687,"src":"66150:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14679,"name":"string","nodeType":"ElementaryTypeName","src":"66150:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14682,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14687,"src":"66172:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14681,"name":"string","nodeType":"ElementaryTypeName","src":"66172:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"66149:43:14"},"returnParameters":{"id":14686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14685,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14687,"src":"66216:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14684,"name":"string","nodeType":"ElementaryTypeName","src":"66216:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"66215:15:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14698,"nodeType":"FunctionDefinition","src":"66313:113:14","nodes":[],"documentation":{"id":14688,"nodeType":"StructuredDocumentation","src":"66237:71:14","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","overrides":null,"parameters":{"id":14693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14690,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14698,"src":"66343:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14689,"name":"string","nodeType":"ElementaryTypeName","src":"66343:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14692,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14698,"src":"66365:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14691,"name":"string","nodeType":"ElementaryTypeName","src":"66365:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"66342:43:14"},"returnParameters":{"id":14697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14696,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14698,"src":"66409:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14694,"name":"string","nodeType":"ElementaryTypeName","src":"66409:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14695,"length":null,"nodeType":"ArrayTypeName","src":"66409:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":null,"visibility":"internal"}],"src":"66408:17:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14708,"nodeType":"FunctionDefinition","src":"66507:98:14","nodes":[],"documentation":{"id":14699,"nodeType":"StructuredDocumentation","src":"66432:70:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","overrides":null,"parameters":{"id":14704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14701,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14708,"src":"66530:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14700,"name":"string","nodeType":"ElementaryTypeName","src":"66530:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14703,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14708,"src":"66552:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14702,"name":"string","nodeType":"ElementaryTypeName","src":"66552:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"66529:43:14"},"returnParameters":{"id":14707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14706,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14708,"src":"66596:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14705,"name":"uint256","nodeType":"ElementaryTypeName","src":"66596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"66595:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14719,"nodeType":"FunctionDefinition","src":"66688:112:14","nodes":[],"documentation":{"id":14709,"nodeType":"StructuredDocumentation","src":"66611:72:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","overrides":null,"parameters":{"id":14714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14711,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14719,"src":"66716:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14710,"name":"string","nodeType":"ElementaryTypeName","src":"66716:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14713,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14719,"src":"66738:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14712,"name":"string","nodeType":"ElementaryTypeName","src":"66738:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"66715:43:14"},"returnParameters":{"id":14718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14717,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14719,"src":"66782:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14715,"name":"uint256","nodeType":"ElementaryTypeName","src":"66782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14716,"length":null,"nodeType":"ArrayTypeName","src":"66782:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"66781:18:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14727,"nodeType":"FunctionDefinition","src":"66840:93:14","nodes":[],"documentation":{"id":14720,"nodeType":"StructuredDocumentation","src":"66806:29:14","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","overrides":null,"parameters":{"id":14723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14722,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14727,"src":"66859:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14721,"name":"string","nodeType":"ElementaryTypeName","src":"66859:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"66858:22:14"},"returnParameters":{"id":14726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14725,"mutability":"mutable","name":"abiEncodedData","nodeType":"VariableDeclaration","overrides":null,"scope":14727,"src":"66904:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14724,"name":"bytes","nodeType":"ElementaryTypeName","src":"66904:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"66903:29:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14737,"nodeType":"FunctionDefinition","src":"66982:114:14","nodes":[],"documentation":{"id":14728,"nodeType":"StructuredDocumentation","src":"66939:38:14","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","overrides":null,"parameters":{"id":14733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14730,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","overrides":null,"scope":14737,"src":"67001:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14729,"name":"string","nodeType":"ElementaryTypeName","src":"67001:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14732,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":14737,"src":"67023:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14731,"name":"string","nodeType":"ElementaryTypeName","src":"67023:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"67000:43:14"},"returnParameters":{"id":14736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14735,"mutability":"mutable","name":"abiEncodedData","nodeType":"VariableDeclaration","overrides":null,"scope":14737,"src":"67067:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14734,"name":"bytes","nodeType":"ElementaryTypeName","src":"67067:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"67066:29:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14745,"nodeType":"FunctionDefinition","src":"67189:72:14","nodes":[],"documentation":{"id":14738,"nodeType":"StructuredDocumentation","src":"67102:82:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","overrides":null,"parameters":{"id":14743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14740,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":14745,"src":"67208:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14739,"name":"string","nodeType":"ElementaryTypeName","src":"67208:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14742,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":14745,"src":"67230:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14741,"name":"string","nodeType":"ElementaryTypeName","src":"67230:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"67207:44:14"},"returnParameters":{"id":14744,"nodeType":"ParameterList","parameters":[],"src":"67260:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14755,"nodeType":"FunctionDefinition","src":"67530:98:14","nodes":[],"documentation":{"id":14746,"nodeType":"StructuredDocumentation","src":"67267:258:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","overrides":null,"parameters":{"id":14753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14748,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","overrides":null,"scope":14755,"src":"67549:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14747,"name":"string","nodeType":"ElementaryTypeName","src":"67549:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14750,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":14755,"src":"67571:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14749,"name":"string","nodeType":"ElementaryTypeName","src":"67571:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14752,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","overrides":null,"scope":14755,"src":"67593:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14751,"name":"string","nodeType":"ElementaryTypeName","src":"67593:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"67548:70:14"},"returnParameters":{"id":14754,"nodeType":"ParameterList","parameters":[],"src":"67627:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14767,"nodeType":"FunctionDefinition","src":"67767:141:14","nodes":[],"documentation":{"id":14756,"nodeType":"StructuredDocumentation","src":"67670:92:14","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","overrides":null,"parameters":{"id":14763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14758,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","overrides":null,"scope":14767,"src":"67798:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67798:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14760,"mutability":"mutable","name":"initCodeHash","nodeType":"VariableDeclaration","overrides":null,"scope":14767,"src":"67812:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67812:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14762,"mutability":"mutable","name":"deployer","nodeType":"VariableDeclaration","overrides":null,"scope":14767,"src":"67834:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14761,"name":"address","nodeType":"ElementaryTypeName","src":"67834:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"67797:54:14"},"returnParameters":{"id":14766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14765,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14767,"src":"67899:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14764,"name":"address","nodeType":"ElementaryTypeName","src":"67899:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"67898:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14777,"nodeType":"FunctionDefinition","src":"68013:99:14","nodes":[],"documentation":{"id":14768,"nodeType":"StructuredDocumentation","src":"67914:94:14","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","overrides":null,"parameters":{"id":14773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14770,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","overrides":null,"scope":14777,"src":"68044:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68044:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14772,"mutability":"mutable","name":"initCodeHash","nodeType":"VariableDeclaration","overrides":null,"scope":14777,"src":"68058:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68058:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"68043:36:14"},"returnParameters":{"id":14776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14775,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14777,"src":"68103:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14774,"name":"address","nodeType":"ElementaryTypeName","src":"68103:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"68102:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14787,"nodeType":"FunctionDefinition","src":"68217:95:14","nodes":[],"documentation":{"id":14778,"nodeType":"StructuredDocumentation","src":"68118:94:14","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","overrides":null,"parameters":{"id":14783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14780,"mutability":"mutable","name":"deployer","nodeType":"VariableDeclaration","overrides":null,"scope":14787,"src":"68247:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14779,"name":"address","nodeType":"ElementaryTypeName","src":"68247:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":14782,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","overrides":null,"scope":14787,"src":"68265:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14781,"name":"uint256","nodeType":"ElementaryTypeName","src":"68265:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"68246:33:14"},"returnParameters":{"id":14786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14785,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14787,"src":"68303:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14784,"name":"address","nodeType":"ElementaryTypeName","src":"68303:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"68302:9:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14795,"nodeType":"FunctionDefinition","src":"68422:91:14","nodes":[],"documentation":{"id":14788,"nodeType":"StructuredDocumentation","src":"68318:99:14","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","overrides":null,"parameters":{"id":14791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14790,"mutability":"mutable","name":"walletLabel","nodeType":"VariableDeclaration","overrides":null,"scope":14795,"src":"68444:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14789,"name":"string","nodeType":"ElementaryTypeName","src":"68444:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"68443:29:14"},"returnParameters":{"id":14794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14793,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","overrides":null,"scope":14795,"src":"68491:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"contractScope":null,"id":14792,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":11988,"src":"68491:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_storage_ptr","typeString":"struct VmSafe.Wallet"}},"value":null,"visibility":"internal"}],"src":"68490:22:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14803,"nodeType":"FunctionDefinition","src":"68591:82:14","nodes":[],"documentation":{"id":14796,"nodeType":"StructuredDocumentation","src":"68519:67:14","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","overrides":null,"parameters":{"id":14799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14798,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":14803,"src":"68613:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14797,"name":"uint256","nodeType":"ElementaryTypeName","src":"68613:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"68612:20:14"},"returnParameters":{"id":14802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14801,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","overrides":null,"scope":14803,"src":"68651:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"contractScope":null,"id":14800,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":11988,"src":"68651:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_storage_ptr","typeString":"struct VmSafe.Wallet"}},"value":null,"visibility":"internal"}],"src":"68650:22:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14813,"nodeType":"FunctionDefinition","src":"68787:111:14","nodes":[],"documentation":{"id":14804,"nodeType":"StructuredDocumentation","src":"68679:103:14","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","overrides":null,"parameters":{"id":14809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14806,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":14813,"src":"68809:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14805,"name":"uint256","nodeType":"ElementaryTypeName","src":"68809:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":14808,"mutability":"mutable","name":"walletLabel","nodeType":"VariableDeclaration","overrides":null,"scope":14813,"src":"68829:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14807,"name":"string","nodeType":"ElementaryTypeName","src":"68829:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"68808:49:14"},"returnParameters":{"id":14812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14811,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","overrides":null,"scope":14813,"src":"68876:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"contractScope":null,"id":14810,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":11988,"src":"68876:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_storage_ptr","typeString":"struct VmSafe.Wallet"}},"value":null,"visibility":"internal"}],"src":"68875:22:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14823,"nodeType":"FunctionDefinition","src":"69046:102:14","nodes":[],"documentation":{"id":14814,"nodeType":"StructuredDocumentation","src":"68904:137:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","overrides":null,"parameters":{"id":14819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14816,"mutability":"mutable","name":"mnemonic","nodeType":"VariableDeclaration","overrides":null,"scope":14823,"src":"69065:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14815,"name":"string","nodeType":"ElementaryTypeName","src":"69065:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14818,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":14823,"src":"69091:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":14817,"name":"uint32","nodeType":"ElementaryTypeName","src":"69091:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"69064:40:14"},"returnParameters":{"id":14822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14821,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":14823,"src":"69128:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14820,"name":"uint256","nodeType":"ElementaryTypeName","src":"69128:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"69127:20:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14835,"nodeType":"FunctionDefinition","src":"69277:158:14","nodes":[],"documentation":{"id":14824,"nodeType":"StructuredDocumentation","src":"69154:118:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","overrides":null,"parameters":{"id":14831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14826,"mutability":"mutable","name":"mnemonic","nodeType":"VariableDeclaration","overrides":null,"scope":14835,"src":"69296:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14825,"name":"string","nodeType":"ElementaryTypeName","src":"69296:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14828,"mutability":"mutable","name":"derivationPath","nodeType":"VariableDeclaration","overrides":null,"scope":14835,"src":"69322:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14827,"name":"string","nodeType":"ElementaryTypeName","src":"69322:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14830,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":14835,"src":"69354:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":14829,"name":"uint32","nodeType":"ElementaryTypeName","src":"69354:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"69295:72:14"},"returnParameters":{"id":14834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14833,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":14835,"src":"69415:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14832,"name":"uint256","nodeType":"ElementaryTypeName","src":"69415:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"69414:20:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14847,"nodeType":"FunctionDefinition","src":"69609:152:14","nodes":[],"documentation":{"id":14836,"nodeType":"StructuredDocumentation","src":"69441:163:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","overrides":null,"parameters":{"id":14843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14838,"mutability":"mutable","name":"mnemonic","nodeType":"VariableDeclaration","overrides":null,"scope":14847,"src":"69628:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14837,"name":"string","nodeType":"ElementaryTypeName","src":"69628:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14840,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":14847,"src":"69654:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":14839,"name":"uint32","nodeType":"ElementaryTypeName","src":"69654:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14842,"mutability":"mutable","name":"language","nodeType":"VariableDeclaration","overrides":null,"scope":14847,"src":"69668:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14841,"name":"string","nodeType":"ElementaryTypeName","src":"69668:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"69627:66:14"},"returnParameters":{"id":14846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14845,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":14847,"src":"69741:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14844,"name":"uint256","nodeType":"ElementaryTypeName","src":"69741:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"69740:20:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14861,"nodeType":"FunctionDefinition","src":"69916:184:14","nodes":[],"documentation":{"id":14848,"nodeType":"StructuredDocumentation","src":"69767:144:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","overrides":null,"parameters":{"id":14857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14850,"mutability":"mutable","name":"mnemonic","nodeType":"VariableDeclaration","overrides":null,"scope":14861,"src":"69935:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14849,"name":"string","nodeType":"ElementaryTypeName","src":"69935:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14852,"mutability":"mutable","name":"derivationPath","nodeType":"VariableDeclaration","overrides":null,"scope":14861,"src":"69961:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14851,"name":"string","nodeType":"ElementaryTypeName","src":"69961:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14854,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":14861,"src":"69993:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":14853,"name":"uint32","nodeType":"ElementaryTypeName","src":"69993:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14856,"mutability":"mutable","name":"language","nodeType":"VariableDeclaration","overrides":null,"scope":14861,"src":"70007:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14855,"name":"string","nodeType":"ElementaryTypeName","src":"70007:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"69934:98:14"},"returnParameters":{"id":14860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14859,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":14861,"src":"70080:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14858,"name":"uint256","nodeType":"ElementaryTypeName","src":"70080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"70079:20:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14869,"nodeType":"FunctionDefinition","src":"70156:86:14","nodes":[],"documentation":{"id":14862,"nodeType":"StructuredDocumentation","src":"70106:45:14","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","overrides":null,"parameters":{"id":14865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14864,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":14869,"src":"70174:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14863,"name":"address","nodeType":"ElementaryTypeName","src":"70174:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"70173:17:14"},"returnParameters":{"id":14868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14867,"mutability":"mutable","name":"currentLabel","nodeType":"VariableDeclaration","overrides":null,"scope":14869,"src":"70214:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14866,"name":"string","nodeType":"ElementaryTypeName","src":"70214:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"70213:28:14"},"scope":14940,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14877,"nodeType":"FunctionDefinition","src":"70280:74:14","nodes":[],"documentation":{"id":14870,"nodeType":"StructuredDocumentation","src":"70248:27:14","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","overrides":null,"parameters":{"id":14873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14872,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","overrides":null,"scope":14877,"src":"70298:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"contractScope":null,"id":14871,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":11988,"src":"70298:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_storage_ptr","typeString":"struct VmSafe.Wallet"}},"value":null,"visibility":"internal"}],"src":"70297:24:14"},"returnParameters":{"id":14876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14875,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","overrides":null,"scope":14877,"src":"70340:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14874,"name":"uint64","nodeType":"ElementaryTypeName","src":"70340:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"70339:14:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14885,"nodeType":"FunctionDefinition","src":"70402:67:14","nodes":[],"documentation":{"id":14878,"nodeType":"StructuredDocumentation","src":"70360:37:14","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","overrides":null,"parameters":{"id":14883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14880,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":14885,"src":"70417:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14879,"name":"address","nodeType":"ElementaryTypeName","src":"70417:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":14882,"mutability":"mutable","name":"newLabel","nodeType":"VariableDeclaration","overrides":null,"scope":14885,"src":"70434:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14881,"name":"string","nodeType":"ElementaryTypeName","src":"70434:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"70416:43:14"},"returnParameters":{"id":14884,"nodeType":"ParameterList","parameters":[],"src":"70468:0:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14893,"nodeType":"FunctionDefinition","src":"70553:76:14","nodes":[],"documentation":{"id":14886,"nodeType":"StructuredDocumentation","src":"70475:73:14","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","overrides":null,"parameters":{"id":14889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14888,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","overrides":null,"scope":14893,"src":"70574:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14887,"name":"uint256","nodeType":"ElementaryTypeName","src":"70574:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"70573:20:14"},"returnParameters":{"id":14892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14891,"mutability":"mutable","name":"keyAddr","nodeType":"VariableDeclaration","overrides":null,"scope":14893,"src":"70612:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14890,"name":"address","nodeType":"ElementaryTypeName","src":"70612:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"70611:17:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14907,"nodeType":"FunctionDefinition","src":"70671:103:14","nodes":[],"documentation":{"id":14894,"nodeType":"StructuredDocumentation","src":"70635:31:14","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","overrides":null,"parameters":{"id":14899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14896,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","overrides":null,"scope":14907,"src":"70685:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"contractScope":null,"id":14895,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":11988,"src":"70685:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11988_storage_ptr","typeString":"struct VmSafe.Wallet"}},"value":null,"visibility":"internal"},{"constant":false,"id":14898,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","overrides":null,"scope":14907,"src":"70709:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70709:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"70684:40:14"},"returnParameters":{"id":14906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14901,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","overrides":null,"scope":14907,"src":"70743:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":14900,"name":"uint8","nodeType":"ElementaryTypeName","src":"70743:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":14903,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","overrides":null,"scope":14907,"src":"70752:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70752:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":14905,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","overrides":null,"scope":14907,"src":"70763:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70763:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"70742:31:14"},"scope":14940,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14915,"nodeType":"FunctionDefinition","src":"70835:80:14","nodes":[],"documentation":{"id":14908,"nodeType":"StructuredDocumentation","src":"70780:50:14","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","overrides":null,"parameters":{"id":14911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14910,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":14915,"src":"70856:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14909,"name":"bytes","nodeType":"ElementaryTypeName","src":"70856:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"70855:21:14"},"returnParameters":{"id":14914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14913,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14915,"src":"70900:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14912,"name":"string","nodeType":"ElementaryTypeName","src":"70900:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"70899:15:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14923,"nodeType":"FunctionDefinition","src":"70977:81:14","nodes":[],"documentation":{"id":14916,"nodeType":"StructuredDocumentation","src":"70921:51:14","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","overrides":null,"parameters":{"id":14919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14918,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":14923,"src":"70998:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14917,"name":"string","nodeType":"ElementaryTypeName","src":"70998:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"70997:22:14"},"returnParameters":{"id":14922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14921,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14923,"src":"71043:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14920,"name":"string","nodeType":"ElementaryTypeName","src":"71043:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"71042:15:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14931,"nodeType":"FunctionDefinition","src":"71116:77:14","nodes":[],"documentation":{"id":14924,"nodeType":"StructuredDocumentation","src":"71064:47:14","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","overrides":null,"parameters":{"id":14927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14926,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":14931,"src":"71134:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14925,"name":"bytes","nodeType":"ElementaryTypeName","src":"71134:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"71133:21:14"},"returnParameters":{"id":14930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14929,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14931,"src":"71178:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14928,"name":"string","nodeType":"ElementaryTypeName","src":"71178:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"71177:15:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14939,"nodeType":"FunctionDefinition","src":"71252:78:14","nodes":[],"documentation":{"id":14932,"nodeType":"StructuredDocumentation","src":"71199:48:14","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","overrides":null,"parameters":{"id":14935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14934,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":14939,"src":"71270:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14933,"name":"string","nodeType":"ElementaryTypeName","src":"71270:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"71269:22:14"},"returnParameters":{"id":14938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14937,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":14939,"src":"71315:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14936,"name":"string","nodeType":"ElementaryTypeName","src":"71315:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"71314:15:14"},"scope":14940,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":11902,"nodeType":"StructuredDocumentation","src":"184:225:14","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[14940],"name":"VmSafe","scope":15515},{"id":15514,"nodeType":"ContractDefinition","src":"71505:13590:14","nodes":[{"id":14949,"nodeType":"FunctionDefinition","src":"71665:61:14","nodes":[],"documentation":{"id":14944,"nodeType":"StructuredDocumentation","src":"71564:96:14","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","overrides":null,"parameters":{"id":14945,"nodeType":"ParameterList","parameters":[],"src":"71684:2:14"},"returnParameters":{"id":14948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14947,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":14949,"src":"71710:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14946,"name":"uint256","nodeType":"ElementaryTypeName","src":"71710:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"71709:16:14"},"scope":15514,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14955,"nodeType":"FunctionDefinition","src":"71810:51:14","nodes":[],"documentation":{"id":14950,"nodeType":"StructuredDocumentation","src":"71732:73:14","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","overrides":null,"parameters":{"id":14953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14952,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":14955,"src":"71835:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14951,"name":"address","nodeType":"ElementaryTypeName","src":"71835:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"71834:17:14"},"returnParameters":{"id":14954,"nodeType":"ParameterList","parameters":[],"src":"71860:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14961,"nodeType":"FunctionDefinition","src":"71897:46:14","nodes":[],"documentation":{"id":14956,"nodeType":"StructuredDocumentation","src":"71867:25:14","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","overrides":null,"parameters":{"id":14959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14958,"mutability":"mutable","name":"newChainId","nodeType":"VariableDeclaration","overrides":null,"scope":14961,"src":"71914:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14957,"name":"uint256","nodeType":"ElementaryTypeName","src":"71914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"71913:20:14"},"returnParameters":{"id":14960,"nodeType":"ParameterList","parameters":[],"src":"71942:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14965,"nodeType":"FunctionDefinition","src":"71982:37:14","nodes":[],"documentation":{"id":14962,"nodeType":"StructuredDocumentation","src":"71949:28:14","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","overrides":null,"parameters":{"id":14963,"nodeType":"ParameterList","parameters":[],"src":"72007:2:14"},"returnParameters":{"id":14964,"nodeType":"ParameterList","parameters":[],"src":"72018:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14971,"nodeType":"FunctionDefinition","src":"72056:48:14","nodes":[],"documentation":{"id":14966,"nodeType":"StructuredDocumentation","src":"72025:26:14","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","overrides":null,"parameters":{"id":14969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14968,"mutability":"mutable","name":"newCoinbase","nodeType":"VariableDeclaration","overrides":null,"scope":14971,"src":"72074:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14967,"name":"address","nodeType":"ElementaryTypeName","src":"72074:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"72073:21:14"},"returnParameters":{"id":14970,"nodeType":"ParameterList","parameters":[],"src":"72103:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14979,"nodeType":"FunctionDefinition","src":"72224:82:14","nodes":[],"documentation":{"id":14972,"nodeType":"StructuredDocumentation","src":"72110:109:14","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","overrides":null,"parameters":{"id":14975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14974,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","overrides":null,"scope":14979,"src":"72244:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14973,"name":"string","nodeType":"ElementaryTypeName","src":"72244:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"72243:28:14"},"returnParameters":{"id":14978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14977,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":14979,"src":"72290:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14976,"name":"uint256","nodeType":"ElementaryTypeName","src":"72290:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"72289:16:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14989,"nodeType":"FunctionDefinition","src":"72413:103:14","nodes":[],"documentation":{"id":14980,"nodeType":"StructuredDocumentation","src":"72312:96:14","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","overrides":null,"parameters":{"id":14985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14982,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","overrides":null,"scope":14989,"src":"72433:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14981,"name":"string","nodeType":"ElementaryTypeName","src":"72433:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14984,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","overrides":null,"scope":14989,"src":"72461:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14983,"name":"uint256","nodeType":"ElementaryTypeName","src":"72461:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"72432:49:14"},"returnParameters":{"id":14988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14987,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":14989,"src":"72500:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14986,"name":"uint256","nodeType":"ElementaryTypeName","src":"72500:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"72499:16:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14999,"nodeType":"FunctionDefinition","src":"72741:98:14","nodes":[],"documentation":{"id":14990,"nodeType":"StructuredDocumentation","src":"72522:214:14","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","overrides":null,"parameters":{"id":14995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14992,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","overrides":null,"scope":14999,"src":"72761:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14991,"name":"string","nodeType":"ElementaryTypeName","src":"72761:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":14994,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","overrides":null,"scope":14999,"src":"72789:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72789:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"72760:44:14"},"returnParameters":{"id":14998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14997,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":14999,"src":"72823:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14996,"name":"uint256","nodeType":"ElementaryTypeName","src":"72823:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"72822:16:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15007,"nodeType":"FunctionDefinition","src":"72974:88:14","nodes":[],"documentation":{"id":15000,"nodeType":"StructuredDocumentation","src":"72845:124:14","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","overrides":null,"parameters":{"id":15003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15002,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","overrides":null,"scope":15007,"src":"73000:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15001,"name":"string","nodeType":"ElementaryTypeName","src":"73000:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"72999:28:14"},"returnParameters":{"id":15006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15005,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":15007,"src":"73046:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15004,"name":"uint256","nodeType":"ElementaryTypeName","src":"73046:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"73045:16:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15017,"nodeType":"FunctionDefinition","src":"73186:109:14","nodes":[],"documentation":{"id":15008,"nodeType":"StructuredDocumentation","src":"73068:113:14","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","overrides":null,"parameters":{"id":15013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15010,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","overrides":null,"scope":15017,"src":"73212:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15009,"name":"string","nodeType":"ElementaryTypeName","src":"73212:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":15012,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","overrides":null,"scope":15017,"src":"73240:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15011,"name":"uint256","nodeType":"ElementaryTypeName","src":"73240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"73211:49:14"},"returnParameters":{"id":15016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15015,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":15017,"src":"73279:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15014,"name":"uint256","nodeType":"ElementaryTypeName","src":"73279:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"73278:16:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15027,"nodeType":"FunctionDefinition","src":"73531:104:14","nodes":[],"documentation":{"id":15018,"nodeType":"StructuredDocumentation","src":"73301:225:14","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","overrides":null,"parameters":{"id":15023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15020,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","overrides":null,"scope":15027,"src":"73557:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15019,"name":"string","nodeType":"ElementaryTypeName","src":"73557:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":15022,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","overrides":null,"scope":15027,"src":"73585:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73585:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"73556:44:14"},"returnParameters":{"id":15026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15025,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":15027,"src":"73619:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15024,"name":"uint256","nodeType":"ElementaryTypeName","src":"73619:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"73618:16:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15035,"nodeType":"FunctionDefinition","src":"73675:60:14","nodes":[],"documentation":{"id":15028,"nodeType":"StructuredDocumentation","src":"73641:29:14","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","overrides":null,"parameters":{"id":15033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15030,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":15035,"src":"73689:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15029,"name":"address","nodeType":"ElementaryTypeName","src":"73689:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15032,"mutability":"mutable","name":"newBalance","nodeType":"VariableDeclaration","overrides":null,"scope":15035,"src":"73706:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15031,"name":"uint256","nodeType":"ElementaryTypeName","src":"73706:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"73688:37:14"},"returnParameters":{"id":15034,"nodeType":"ParameterList","parameters":[],"src":"73734:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15043,"nodeType":"FunctionDefinition","src":"73973:76:14","nodes":[],"documentation":{"id":15036,"nodeType":"StructuredDocumentation","src":"73741:227:14","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","overrides":null,"parameters":{"id":15039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15038,"mutability":"mutable","name":"snapshotId","nodeType":"VariableDeclaration","overrides":null,"scope":15043,"src":"73997:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15037,"name":"uint256","nodeType":"ElementaryTypeName","src":"73997:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"73996:20:14"},"returnParameters":{"id":15042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15041,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":15043,"src":"74035:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15040,"name":"bool","nodeType":"ElementaryTypeName","src":"74035:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"74034:14:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15047,"nodeType":"FunctionDefinition","src":"74121:36:14","nodes":[],"documentation":{"id":15044,"nodeType":"StructuredDocumentation","src":"74055:61:14","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","overrides":null,"parameters":{"id":15045,"nodeType":"ParameterList","parameters":[],"src":"74145:2:14"},"returnParameters":{"id":15046,"nodeType":"ParameterList","parameters":[],"src":"74156:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15053,"nodeType":"FunctionDefinition","src":"74333:52:14","nodes":[],"documentation":{"id":15048,"nodeType":"StructuredDocumentation","src":"74163:165:14","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","overrides":null,"parameters":{"id":15051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15050,"mutability":"mutable","name":"newDifficulty","nodeType":"VariableDeclaration","overrides":null,"scope":15053,"src":"74353:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15049,"name":"uint256","nodeType":"ElementaryTypeName","src":"74353:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"74352:23:14"},"returnParameters":{"id":15052,"nodeType":"ParameterList","parameters":[],"src":"74384:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15059,"nodeType":"FunctionDefinition","src":"74444:61:14","nodes":[],"documentation":{"id":15054,"nodeType":"StructuredDocumentation","src":"74391:48:14","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","overrides":null,"parameters":{"id":15057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15056,"mutability":"mutable","name":"pathToStateJson","nodeType":"VariableDeclaration","overrides":null,"scope":15059,"src":"74463:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15055,"name":"string","nodeType":"ElementaryTypeName","src":"74463:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"74462:33:14"},"returnParameters":{"id":15058,"nodeType":"ParameterList","parameters":[],"src":"74504:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15067,"nodeType":"FunctionDefinition","src":"74542:74:14","nodes":[],"documentation":{"id":15060,"nodeType":"StructuredDocumentation","src":"74511:26:14","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","overrides":null,"parameters":{"id":15065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15062,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":15067,"src":"74556:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15061,"name":"address","nodeType":"ElementaryTypeName","src":"74556:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15064,"mutability":"mutable","name":"newRuntimeBytecode","nodeType":"VariableDeclaration","overrides":null,"scope":15067,"src":"74572:33:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15063,"name":"bytes","nodeType":"ElementaryTypeName","src":"74572:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"74555:51:14"},"returnParameters":{"id":15066,"nodeType":"ParameterList","parameters":[],"src":"74615:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15073,"nodeType":"FunctionDefinition","src":"74652:42:14","nodes":[],"documentation":{"id":15068,"nodeType":"StructuredDocumentation","src":"74622:25:14","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","overrides":null,"parameters":{"id":15071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15070,"mutability":"mutable","name":"newBasefee","nodeType":"VariableDeclaration","overrides":null,"scope":15073,"src":"74665:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15069,"name":"uint256","nodeType":"ElementaryTypeName","src":"74665:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"74664:20:14"},"returnParameters":{"id":15072,"nodeType":"ParameterList","parameters":[],"src":"74693:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15081,"nodeType":"FunctionDefinition","src":"74761:79:14","nodes":[],"documentation":{"id":15074,"nodeType":"StructuredDocumentation","src":"74700:56:14","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","overrides":null,"parameters":{"id":15077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15076,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":15081,"src":"74783:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15075,"name":"address","nodeType":"ElementaryTypeName","src":"74783:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"74782:17:14"},"returnParameters":{"id":15080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15079,"mutability":"mutable","name":"persistent","nodeType":"VariableDeclaration","overrides":null,"scope":15081,"src":"74823:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15078,"name":"bool","nodeType":"ElementaryTypeName","src":"74823:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"74822:17:14"},"scope":15514,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15087,"nodeType":"FunctionDefinition","src":"74921:63:14","nodes":[],"documentation":{"id":15082,"nodeType":"StructuredDocumentation","src":"74846:70:14","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","overrides":null,"parameters":{"id":15085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15084,"mutability":"mutable","name":"pathToAllocsJson","nodeType":"VariableDeclaration","overrides":null,"scope":15087,"src":"74941:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15083,"name":"string","nodeType":"ElementaryTypeName","src":"74941:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"74940:34:14"},"returnParameters":{"id":15086,"nodeType":"ParameterList","parameters":[],"src":"74983:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15093,"nodeType":"FunctionDefinition","src":"75187:50:14","nodes":[],"documentation":{"id":15088,"nodeType":"StructuredDocumentation","src":"74990:192:14","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","overrides":null,"parameters":{"id":15091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15090,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":15093,"src":"75211:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15089,"name":"address","nodeType":"ElementaryTypeName","src":"75211:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"75210:17:14"},"returnParameters":{"id":15092,"nodeType":"ParameterList","parameters":[],"src":"75236:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15101,"nodeType":"FunctionDefinition","src":"75282:69:14","nodes":[],"documentation":{"id":15094,"nodeType":"StructuredDocumentation","src":"75243:34:14","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","overrides":null,"parameters":{"id":15099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15096,"mutability":"mutable","name":"account0","nodeType":"VariableDeclaration","overrides":null,"scope":15101,"src":"75306:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15095,"name":"address","nodeType":"ElementaryTypeName","src":"75306:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15098,"mutability":"mutable","name":"account1","nodeType":"VariableDeclaration","overrides":null,"scope":15101,"src":"75324:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15097,"name":"address","nodeType":"ElementaryTypeName","src":"75324:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"75305:36:14"},"returnParameters":{"id":15100,"nodeType":"ParameterList","parameters":[],"src":"75350:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15111,"nodeType":"FunctionDefinition","src":"75396:87:14","nodes":[],"documentation":{"id":15102,"nodeType":"StructuredDocumentation","src":"75357:34:14","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","overrides":null,"parameters":{"id":15109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15104,"mutability":"mutable","name":"account0","nodeType":"VariableDeclaration","overrides":null,"scope":15111,"src":"75420:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15103,"name":"address","nodeType":"ElementaryTypeName","src":"75420:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15106,"mutability":"mutable","name":"account1","nodeType":"VariableDeclaration","overrides":null,"scope":15111,"src":"75438:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15105,"name":"address","nodeType":"ElementaryTypeName","src":"75438:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15108,"mutability":"mutable","name":"account2","nodeType":"VariableDeclaration","overrides":null,"scope":15111,"src":"75456:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15107,"name":"address","nodeType":"ElementaryTypeName","src":"75456:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"75419:54:14"},"returnParameters":{"id":15110,"nodeType":"ParameterList","parameters":[],"src":"75482:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15118,"nodeType":"FunctionDefinition","src":"75528:62:14","nodes":[],"documentation":{"id":15112,"nodeType":"StructuredDocumentation","src":"75489:34:14","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","overrides":null,"parameters":{"id":15116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15115,"mutability":"mutable","name":"accounts","nodeType":"VariableDeclaration","overrides":null,"scope":15118,"src":"75552:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15113,"name":"address","nodeType":"ElementaryTypeName","src":"75552:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15114,"length":null,"nodeType":"ArrayTypeName","src":"75552:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"75551:29:14"},"returnParameters":{"id":15117,"nodeType":"ParameterList","parameters":[],"src":"75589:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15128,"nodeType":"FunctionDefinition","src":"75661:97:14","nodes":[],"documentation":{"id":15119,"nodeType":"StructuredDocumentation","src":"75596:60:14","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","overrides":null,"parameters":{"id":15126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15121,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15128,"src":"75685:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15120,"name":"address","nodeType":"ElementaryTypeName","src":"75685:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15123,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15128,"src":"75701:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15122,"name":"bytes","nodeType":"ElementaryTypeName","src":"75701:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":15125,"mutability":"mutable","name":"revertData","nodeType":"VariableDeclaration","overrides":null,"scope":15128,"src":"75722:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15124,"name":"bytes","nodeType":"ElementaryTypeName","src":"75722:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"75684:64:14"},"returnParameters":{"id":15127,"nodeType":"ParameterList","parameters":[],"src":"75757:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15140,"nodeType":"FunctionDefinition","src":"75858:123:14","nodes":[],"documentation":{"id":15129,"nodeType":"StructuredDocumentation","src":"75764:89:14","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","overrides":null,"parameters":{"id":15138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15131,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15140,"src":"75882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15130,"name":"address","nodeType":"ElementaryTypeName","src":"75882:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15133,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","overrides":null,"scope":15140,"src":"75898:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15132,"name":"uint256","nodeType":"ElementaryTypeName","src":"75898:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15135,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15140,"src":"75916:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15134,"name":"bytes","nodeType":"ElementaryTypeName","src":"75916:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":15137,"mutability":"mutable","name":"revertData","nodeType":"VariableDeclaration","overrides":null,"scope":15140,"src":"75937:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15136,"name":"bytes","nodeType":"ElementaryTypeName","src":"75937:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"75881:82:14"},"returnParameters":{"id":15139,"nodeType":"ParameterList","parameters":[],"src":"75980:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15150,"nodeType":"FunctionDefinition","src":"76241:91:14","nodes":[],"documentation":{"id":15141,"nodeType":"StructuredDocumentation","src":"75987:249:14","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","overrides":null,"parameters":{"id":15148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15143,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15150,"src":"76259:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15142,"name":"address","nodeType":"ElementaryTypeName","src":"76259:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15145,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15150,"src":"76275:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15144,"name":"bytes","nodeType":"ElementaryTypeName","src":"76275:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":15147,"mutability":"mutable","name":"returnData","nodeType":"VariableDeclaration","overrides":null,"scope":15150,"src":"76296:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15146,"name":"bytes","nodeType":"ElementaryTypeName","src":"76296:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"76258:64:14"},"returnParameters":{"id":15149,"nodeType":"ParameterList","parameters":[],"src":"76331:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15162,"nodeType":"FunctionDefinition","src":"76507:109:14","nodes":[],"documentation":{"id":15151,"nodeType":"StructuredDocumentation","src":"76338:164:14","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","overrides":null,"parameters":{"id":15160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15153,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15162,"src":"76525:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15152,"name":"address","nodeType":"ElementaryTypeName","src":"76525:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15155,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","overrides":null,"scope":15162,"src":"76541:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15154,"name":"uint256","nodeType":"ElementaryTypeName","src":"76541:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15157,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15162,"src":"76559:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15156,"name":"bytes","nodeType":"ElementaryTypeName","src":"76559:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":15159,"mutability":"mutable","name":"returnData","nodeType":"VariableDeclaration","overrides":null,"scope":15162,"src":"76580:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15158,"name":"bytes","nodeType":"ElementaryTypeName","src":"76580:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"76524:82:14"},"returnParameters":{"id":15161,"nodeType":"ParameterList","parameters":[],"src":"76615:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15168,"nodeType":"FunctionDefinition","src":"76691:43:14","nodes":[],"documentation":{"id":15163,"nodeType":"StructuredDocumentation","src":"76622:64:14","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","overrides":null,"parameters":{"id":15166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15165,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","overrides":null,"scope":15168,"src":"76706:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15164,"name":"address","nodeType":"ElementaryTypeName","src":"76706:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"76705:19:14"},"returnParameters":{"id":15167,"nodeType":"ParameterList","parameters":[],"src":"76733:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15176,"nodeType":"FunctionDefinition","src":"76853:61:14","nodes":[],"documentation":{"id":15169,"nodeType":"StructuredDocumentation","src":"76740:108:14","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","overrides":null,"parameters":{"id":15174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15171,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","overrides":null,"scope":15176,"src":"76868:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15170,"name":"address","nodeType":"ElementaryTypeName","src":"76868:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15173,"mutability":"mutable","name":"txOrigin","nodeType":"VariableDeclaration","overrides":null,"scope":15176,"src":"76887:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15172,"name":"address","nodeType":"ElementaryTypeName","src":"76887:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"76867:37:14"},"returnParameters":{"id":15175,"nodeType":"ParameterList","parameters":[],"src":"76913:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15182,"nodeType":"FunctionDefinition","src":"77091:52:14","nodes":[],"documentation":{"id":15177,"nodeType":"StructuredDocumentation","src":"76920:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","overrides":null,"parameters":{"id":15180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15179,"mutability":"mutable","name":"newPrevrandao","nodeType":"VariableDeclaration","overrides":null,"scope":15182,"src":"77111:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77111:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"77110:23:14"},"returnParameters":{"id":15181,"nodeType":"ParameterList","parameters":[],"src":"77142:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15192,"nodeType":"FunctionDefinition","src":"77271:101:14","nodes":[],"documentation":{"id":15183,"nodeType":"StructuredDocumentation","src":"77149:117:14","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","overrides":null,"parameters":{"id":15184,"nodeType":"ParameterList","parameters":[],"src":"77291:2:14"},"returnParameters":{"id":15191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15186,"mutability":"mutable","name":"callerMode","nodeType":"VariableDeclaration","overrides":null,"scope":15192,"src":"77312:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$11908","typeString":"enum VmSafe.CallerMode"},"typeName":{"contractScope":null,"id":15185,"name":"CallerMode","nodeType":"UserDefinedTypeName","referencedDeclaration":11908,"src":"77312:10:14","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$11908","typeString":"enum VmSafe.CallerMode"}},"value":null,"visibility":"internal"},{"constant":false,"id":15188,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","overrides":null,"scope":15192,"src":"77335:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15187,"name":"address","nodeType":"ElementaryTypeName","src":"77335:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15190,"mutability":"mutable","name":"txOrigin","nodeType":"VariableDeclaration","overrides":null,"scope":15192,"src":"77354:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15189,"name":"address","nodeType":"ElementaryTypeName","src":"77354:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"77311:60:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15198,"nodeType":"FunctionDefinition","src":"77460:46:14","nodes":[],"documentation":{"id":15193,"nodeType":"StructuredDocumentation","src":"77378:77:14","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","overrides":null,"parameters":{"id":15196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15195,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":15198,"src":"77480:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15194,"name":"address","nodeType":"ElementaryTypeName","src":"77480:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"77479:17:14"},"returnParameters":{"id":15197,"nodeType":"ParameterList","parameters":[],"src":"77505:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15206,"nodeType":"FunctionDefinition","src":"77849:70:14","nodes":[],"documentation":{"id":15199,"nodeType":"StructuredDocumentation","src":"77512:332:14","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","overrides":null,"parameters":{"id":15202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15201,"mutability":"mutable","name":"snapshotId","nodeType":"VariableDeclaration","overrides":null,"scope":15206,"src":"77867:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15200,"name":"uint256","nodeType":"ElementaryTypeName","src":"77867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"77866:20:14"},"returnParameters":{"id":15205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15204,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":15206,"src":"77905:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15203,"name":"bool","nodeType":"ElementaryTypeName","src":"77905:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"77904:14:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15214,"nodeType":"FunctionDefinition","src":"78202:79:14","nodes":[],"documentation":{"id":15207,"nodeType":"StructuredDocumentation","src":"77925:272:14","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","overrides":null,"parameters":{"id":15210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15209,"mutability":"mutable","name":"snapshotId","nodeType":"VariableDeclaration","overrides":null,"scope":15214,"src":"78229:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15208,"name":"uint256","nodeType":"ElementaryTypeName","src":"78229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"78228:20:14"},"returnParameters":{"id":15213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15212,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":15214,"src":"78267:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15211,"name":"bool","nodeType":"ElementaryTypeName","src":"78267:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"78266:14:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15220,"nodeType":"FunctionDefinition","src":"78378:52:14","nodes":[],"documentation":{"id":15215,"nodeType":"StructuredDocumentation","src":"78287:86:14","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","overrides":null,"parameters":{"id":15218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15217,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":15220,"src":"78404:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15216,"name":"address","nodeType":"ElementaryTypeName","src":"78404:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"78403:17:14"},"returnParameters":{"id":15219,"nodeType":"ParameterList","parameters":[],"src":"78429:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15227,"nodeType":"FunctionDefinition","src":"78477:64:14","nodes":[],"documentation":{"id":15221,"nodeType":"StructuredDocumentation","src":"78436:36:14","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","overrides":null,"parameters":{"id":15225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15224,"mutability":"mutable","name":"accounts","nodeType":"VariableDeclaration","overrides":null,"scope":15227,"src":"78503:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15222,"name":"address","nodeType":"ElementaryTypeName","src":"78503:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15223,"length":null,"nodeType":"ArrayTypeName","src":"78503:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"78502:29:14"},"returnParameters":{"id":15226,"nodeType":"ParameterList","parameters":[],"src":"78540:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15233,"nodeType":"FunctionDefinition","src":"78576:42:14","nodes":[],"documentation":{"id":15228,"nodeType":"StructuredDocumentation","src":"78547:24:14","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","overrides":null,"parameters":{"id":15231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15230,"mutability":"mutable","name":"newHeight","nodeType":"VariableDeclaration","overrides":null,"scope":15233,"src":"78590:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15229,"name":"uint256","nodeType":"ElementaryTypeName","src":"78590:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"78589:19:14"},"returnParameters":{"id":15232,"nodeType":"ParameterList","parameters":[],"src":"78617:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15239,"nodeType":"FunctionDefinition","src":"78757:48:14","nodes":[],"documentation":{"id":15234,"nodeType":"StructuredDocumentation","src":"78624:128:14","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","overrides":null,"parameters":{"id":15237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15236,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","overrides":null,"scope":15239,"src":"78775:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15235,"name":"uint256","nodeType":"ElementaryTypeName","src":"78775:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"78774:21:14"},"returnParameters":{"id":15238,"nodeType":"ParameterList","parameters":[],"src":"78804:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15245,"nodeType":"FunctionDefinition","src":"79020:43:14","nodes":[],"documentation":{"id":15240,"nodeType":"StructuredDocumentation","src":"78811:204:14","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","overrides":null,"parameters":{"id":15243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15242,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","overrides":null,"scope":15245,"src":"79038:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79038:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"79037:16:14"},"returnParameters":{"id":15244,"nodeType":"ParameterList","parameters":[],"src":"79062:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15253,"nodeType":"FunctionDefinition","src":"79123:64:14","nodes":[],"documentation":{"id":15246,"nodeType":"StructuredDocumentation","src":"79069:49:14","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","overrides":null,"parameters":{"id":15251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15248,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":15253,"src":"79141:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15247,"name":"uint256","nodeType":"ElementaryTypeName","src":"79141:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15250,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","overrides":null,"scope":15253,"src":"79157:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15249,"name":"uint256","nodeType":"ElementaryTypeName","src":"79157:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"79140:37:14"},"returnParameters":{"id":15252,"nodeType":"ParameterList","parameters":[],"src":"79186:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15261,"nodeType":"FunctionDefinition","src":"79323:59:14","nodes":[],"documentation":{"id":15254,"nodeType":"StructuredDocumentation","src":"79193:125:14","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","overrides":null,"parameters":{"id":15259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15256,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":15261,"src":"79341:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15255,"name":"uint256","nodeType":"ElementaryTypeName","src":"79341:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15258,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","overrides":null,"scope":15261,"src":"79357:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79357:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"79340:32:14"},"returnParameters":{"id":15260,"nodeType":"ParameterList","parameters":[],"src":"79381:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15267,"nodeType":"FunctionDefinition","src":"79495:45:14","nodes":[],"documentation":{"id":15262,"nodeType":"StructuredDocumentation","src":"79388:102:14","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","overrides":null,"parameters":{"id":15265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15264,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":15267,"src":"79515:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15263,"name":"uint256","nodeType":"ElementaryTypeName","src":"79515:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"79514:16:14"},"returnParameters":{"id":15266,"nodeType":"ParameterList","parameters":[],"src":"79539:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15275,"nodeType":"FunctionDefinition","src":"79638:61:14","nodes":[],"documentation":{"id":15268,"nodeType":"StructuredDocumentation","src":"79546:87:14","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","overrides":null,"parameters":{"id":15273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15270,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":15275,"src":"79656:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15269,"name":"address","nodeType":"ElementaryTypeName","src":"79656:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15272,"mutability":"mutable","name":"newNonce","nodeType":"VariableDeclaration","overrides":null,"scope":15275,"src":"79673:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15271,"name":"uint64","nodeType":"ElementaryTypeName","src":"79673:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"79655:34:14"},"returnParameters":{"id":15274,"nodeType":"ParameterList","parameters":[],"src":"79698:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15283,"nodeType":"FunctionDefinition","src":"79765:67:14","nodes":[],"documentation":{"id":15276,"nodeType":"StructuredDocumentation","src":"79705:55:14","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","overrides":null,"parameters":{"id":15281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15278,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":15283,"src":"79789:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15277,"name":"address","nodeType":"ElementaryTypeName","src":"79789:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15280,"mutability":"mutable","name":"newNonce","nodeType":"VariableDeclaration","overrides":null,"scope":15283,"src":"79806:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15279,"name":"uint64","nodeType":"ElementaryTypeName","src":"79806:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"79788:34:14"},"returnParameters":{"id":15282,"nodeType":"ParameterList","parameters":[],"src":"79831:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15289,"nodeType":"FunctionDefinition","src":"79987:58:14","nodes":[],"documentation":{"id":15284,"nodeType":"StructuredDocumentation","src":"79838:144:14","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","overrides":null,"parameters":{"id":15285,"nodeType":"ParameterList","parameters":[],"src":"80004:2:14"},"returnParameters":{"id":15288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15287,"mutability":"mutable","name":"snapshotId","nodeType":"VariableDeclaration","overrides":null,"scope":15289,"src":"80025:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15286,"name":"uint256","nodeType":"ElementaryTypeName","src":"80025:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"80024:20:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15295,"nodeType":"FunctionDefinition","src":"80152:48:14","nodes":[],"documentation":{"id":15290,"nodeType":"StructuredDocumentation","src":"80051:96:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","overrides":null,"parameters":{"id":15293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15292,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","overrides":null,"scope":15295,"src":"80172:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15291,"name":"address","nodeType":"ElementaryTypeName","src":"80172:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"80171:19:14"},"returnParameters":{"id":15294,"nodeType":"ParameterList","parameters":[],"src":"80199:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15303,"nodeType":"FunctionDefinition","src":"80351:66:14","nodes":[],"documentation":{"id":15296,"nodeType":"StructuredDocumentation","src":"80206:140:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","overrides":null,"parameters":{"id":15301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15298,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","overrides":null,"scope":15303,"src":"80371:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15297,"name":"address","nodeType":"ElementaryTypeName","src":"80371:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15300,"mutability":"mutable","name":"txOrigin","nodeType":"VariableDeclaration","overrides":null,"scope":15303,"src":"80390:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15299,"name":"address","nodeType":"ElementaryTypeName","src":"80390:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"80370:37:14"},"returnParameters":{"id":15302,"nodeType":"ParameterList","parameters":[],"src":"80416:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15307,"nodeType":"FunctionDefinition","src":"80492:30:14","nodes":[],"documentation":{"id":15304,"nodeType":"StructuredDocumentation","src":"80423:64:14","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","overrides":null,"parameters":{"id":15305,"nodeType":"ParameterList","parameters":[],"src":"80510:2:14"},"returnParameters":{"id":15306,"nodeType":"ParameterList","parameters":[],"src":"80521:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15317,"nodeType":"FunctionDefinition","src":"80580:69:14","nodes":[],"documentation":{"id":15308,"nodeType":"StructuredDocumentation","src":"80528:47:14","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","overrides":null,"parameters":{"id":15315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15310,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":15317,"src":"80595:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15309,"name":"address","nodeType":"ElementaryTypeName","src":"80595:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15312,"mutability":"mutable","name":"slot","nodeType":"VariableDeclaration","overrides":null,"scope":15317,"src":"80611:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80611:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":15314,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":15317,"src":"80625:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80625:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"80594:45:14"},"returnParameters":{"id":15316,"nodeType":"ParameterList","parameters":[],"src":"80648:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15323,"nodeType":"FunctionDefinition","src":"80752:43:14","nodes":[],"documentation":{"id":15318,"nodeType":"StructuredDocumentation","src":"80655:92:14","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","overrides":null,"parameters":{"id":15321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15320,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","overrides":null,"scope":15323,"src":"80770:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80770:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"80769:16:14"},"returnParameters":{"id":15322,"nodeType":"ParameterList","parameters":[],"src":"80794:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15331,"nodeType":"FunctionDefinition","src":"80897:59:14","nodes":[],"documentation":{"id":15324,"nodeType":"StructuredDocumentation","src":"80801:91:14","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","overrides":null,"parameters":{"id":15329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15326,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","overrides":null,"scope":15331,"src":"80915:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15325,"name":"uint256","nodeType":"ElementaryTypeName","src":"80915:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15328,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","overrides":null,"scope":15331,"src":"80931:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80931:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"80914:32:14"},"returnParameters":{"id":15330,"nodeType":"ParameterList","parameters":[],"src":"80955:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15337,"nodeType":"FunctionDefinition","src":"80990:50:14","nodes":[],"documentation":{"id":15332,"nodeType":"StructuredDocumentation","src":"80962:23:14","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","overrides":null,"parameters":{"id":15335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15334,"mutability":"mutable","name":"newGasPrice","nodeType":"VariableDeclaration","overrides":null,"scope":15337,"src":"81010:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15333,"name":"uint256","nodeType":"ElementaryTypeName","src":"81010:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"81009:21:14"},"returnParameters":{"id":15336,"nodeType":"ParameterList","parameters":[],"src":"81039:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15343,"nodeType":"FunctionDefinition","src":"81078:45:14","nodes":[],"documentation":{"id":15338,"nodeType":"StructuredDocumentation","src":"81046:27:14","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","overrides":null,"parameters":{"id":15341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15340,"mutability":"mutable","name":"newTimestamp","nodeType":"VariableDeclaration","overrides":null,"scope":15343,"src":"81092:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15339,"name":"uint256","nodeType":"ElementaryTypeName","src":"81092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"81091:22:14"},"returnParameters":{"id":15342,"nodeType":"ParameterList","parameters":[],"src":"81122:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15355,"nodeType":"FunctionDefinition","src":"81275:105:14","nodes":[],"documentation":{"id":15344,"nodeType":"StructuredDocumentation","src":"81163:107:14","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","overrides":null,"parameters":{"id":15353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15346,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15355,"src":"81301:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15345,"name":"address","nodeType":"ElementaryTypeName","src":"81301:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15348,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","overrides":null,"scope":15355,"src":"81317:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15347,"name":"uint256","nodeType":"ElementaryTypeName","src":"81317:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15350,"mutability":"mutable","name":"minGas","nodeType":"VariableDeclaration","overrides":null,"scope":15355,"src":"81335:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15349,"name":"uint64","nodeType":"ElementaryTypeName","src":"81335:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":15352,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15355,"src":"81350:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15351,"name":"bytes","nodeType":"ElementaryTypeName","src":"81350:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"81300:70:14"},"returnParameters":{"id":15354,"nodeType":"ParameterList","parameters":[],"src":"81379:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15369,"nodeType":"FunctionDefinition","src":"81513:127:14","nodes":[],"documentation":{"id":15356,"nodeType":"StructuredDocumentation","src":"81386:122:14","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","overrides":null,"parameters":{"id":15367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15358,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15369,"src":"81539:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15357,"name":"address","nodeType":"ElementaryTypeName","src":"81539:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15360,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","overrides":null,"scope":15369,"src":"81555:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15359,"name":"uint256","nodeType":"ElementaryTypeName","src":"81555:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15362,"mutability":"mutable","name":"minGas","nodeType":"VariableDeclaration","overrides":null,"scope":15369,"src":"81573:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15361,"name":"uint64","nodeType":"ElementaryTypeName","src":"81573:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":15364,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15369,"src":"81588:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15363,"name":"bytes","nodeType":"ElementaryTypeName","src":"81588:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":15366,"mutability":"mutable","name":"count","nodeType":"VariableDeclaration","overrides":null,"scope":15369,"src":"81609:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15365,"name":"uint64","nodeType":"ElementaryTypeName","src":"81609:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"81538:84:14"},"returnParameters":{"id":15368,"nodeType":"ParameterList","parameters":[],"src":"81639:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15377,"nodeType":"FunctionDefinition","src":"81772:66:14","nodes":[],"documentation":{"id":15370,"nodeType":"StructuredDocumentation","src":"81646:121:14","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","overrides":null,"parameters":{"id":15375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15372,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15377,"src":"81792:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15371,"name":"address","nodeType":"ElementaryTypeName","src":"81792:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15374,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15377,"src":"81808:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15373,"name":"bytes","nodeType":"ElementaryTypeName","src":"81808:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"81791:37:14"},"returnParameters":{"id":15376,"nodeType":"ParameterList","parameters":[],"src":"81837:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15387,"nodeType":"FunctionDefinition","src":"81925:80:14","nodes":[],"documentation":{"id":15378,"nodeType":"StructuredDocumentation","src":"81844:76:14","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","overrides":null,"parameters":{"id":15385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15380,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15387,"src":"81945:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15379,"name":"address","nodeType":"ElementaryTypeName","src":"81945:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15382,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15387,"src":"81961:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15381,"name":"bytes","nodeType":"ElementaryTypeName","src":"81961:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":15384,"mutability":"mutable","name":"count","nodeType":"VariableDeclaration","overrides":null,"scope":15387,"src":"81982:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15383,"name":"uint64","nodeType":"ElementaryTypeName","src":"81982:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"81944:51:14"},"returnParameters":{"id":15386,"nodeType":"ParameterList","parameters":[],"src":"82004:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15397,"nodeType":"FunctionDefinition","src":"82093:84:14","nodes":[],"documentation":{"id":15388,"nodeType":"StructuredDocumentation","src":"82011:77:14","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","overrides":null,"parameters":{"id":15395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15390,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15397,"src":"82113:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15389,"name":"address","nodeType":"ElementaryTypeName","src":"82113:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15392,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","overrides":null,"scope":15397,"src":"82129:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15391,"name":"uint256","nodeType":"ElementaryTypeName","src":"82129:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15394,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15397,"src":"82147:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15393,"name":"bytes","nodeType":"ElementaryTypeName","src":"82147:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"82112:55:14"},"returnParameters":{"id":15396,"nodeType":"ParameterList","parameters":[],"src":"82176:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15409,"nodeType":"FunctionDefinition","src":"82280:98:14","nodes":[],"documentation":{"id":15398,"nodeType":"StructuredDocumentation","src":"82183:92:14","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","overrides":null,"parameters":{"id":15407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15400,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15409,"src":"82300:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15399,"name":"address","nodeType":"ElementaryTypeName","src":"82300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15402,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","overrides":null,"scope":15409,"src":"82316:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15401,"name":"uint256","nodeType":"ElementaryTypeName","src":"82316:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15404,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15409,"src":"82334:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15403,"name":"bytes","nodeType":"ElementaryTypeName","src":"82334:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":15406,"mutability":"mutable","name":"count","nodeType":"VariableDeclaration","overrides":null,"scope":15409,"src":"82355:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15405,"name":"uint64","nodeType":"ElementaryTypeName","src":"82355:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"82299:69:14"},"returnParameters":{"id":15408,"nodeType":"ParameterList","parameters":[],"src":"82377:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15421,"nodeType":"FunctionDefinition","src":"82471:96:14","nodes":[],"documentation":{"id":15410,"nodeType":"StructuredDocumentation","src":"82384:82:14","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","overrides":null,"parameters":{"id":15419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15412,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15421,"src":"82491:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15411,"name":"address","nodeType":"ElementaryTypeName","src":"82491:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15414,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","overrides":null,"scope":15421,"src":"82507:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15413,"name":"uint256","nodeType":"ElementaryTypeName","src":"82507:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15416,"mutability":"mutable","name":"gas","nodeType":"VariableDeclaration","overrides":null,"scope":15421,"src":"82525:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15415,"name":"uint64","nodeType":"ElementaryTypeName","src":"82525:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":15418,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15421,"src":"82537:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15417,"name":"bytes","nodeType":"ElementaryTypeName","src":"82537:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"82490:67:14"},"returnParameters":{"id":15420,"nodeType":"ParameterList","parameters":[],"src":"82566:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15435,"nodeType":"FunctionDefinition","src":"82676:110:14","nodes":[],"documentation":{"id":15422,"nodeType":"StructuredDocumentation","src":"82573:98:14","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","overrides":null,"parameters":{"id":15433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15424,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","overrides":null,"scope":15435,"src":"82696:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15423,"name":"address","nodeType":"ElementaryTypeName","src":"82696:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":15426,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","overrides":null,"scope":15435,"src":"82712:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15425,"name":"uint256","nodeType":"ElementaryTypeName","src":"82712:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15428,"mutability":"mutable","name":"gas","nodeType":"VariableDeclaration","overrides":null,"scope":15435,"src":"82730:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15427,"name":"uint64","nodeType":"ElementaryTypeName","src":"82730:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":15430,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":15435,"src":"82742:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15429,"name":"bytes","nodeType":"ElementaryTypeName","src":"82742:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":15432,"mutability":"mutable","name":"count","nodeType":"VariableDeclaration","overrides":null,"scope":15435,"src":"82763:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15431,"name":"uint64","nodeType":"ElementaryTypeName","src":"82763:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"82695:81:14"},"returnParameters":{"id":15434,"nodeType":"ParameterList","parameters":[],"src":"82785:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15447,"nodeType":"FunctionDefinition","src":"83125:99:14","nodes":[],"documentation":{"id":15436,"nodeType":"StructuredDocumentation","src":"82792:328:14","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","overrides":null,"parameters":{"id":15445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15438,"mutability":"mutable","name":"checkTopic1","nodeType":"VariableDeclaration","overrides":null,"scope":15447,"src":"83145:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15437,"name":"bool","nodeType":"ElementaryTypeName","src":"83145:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":15440,"mutability":"mutable","name":"checkTopic2","nodeType":"VariableDeclaration","overrides":null,"scope":15447,"src":"83163:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15439,"name":"bool","nodeType":"ElementaryTypeName","src":"83163:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":15442,"mutability":"mutable","name":"checkTopic3","nodeType":"VariableDeclaration","overrides":null,"scope":15447,"src":"83181:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15441,"name":"bool","nodeType":"ElementaryTypeName","src":"83181:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":15444,"mutability":"mutable","name":"checkData","nodeType":"VariableDeclaration","overrides":null,"scope":15447,"src":"83199:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15443,"name":"bool","nodeType":"ElementaryTypeName","src":"83199:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"83144:70:14"},"returnParameters":{"id":15446,"nodeType":"ParameterList","parameters":[],"src":"83223:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15461,"nodeType":"FunctionDefinition","src":"83327:124:14","nodes":[],"documentation":{"id":15448,"nodeType":"StructuredDocumentation","src":"83230:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","overrides":null,"parameters":{"id":15459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15450,"mutability":"mutable","name":"checkTopic1","nodeType":"VariableDeclaration","overrides":null,"scope":15461,"src":"83347:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15449,"name":"bool","nodeType":"ElementaryTypeName","src":"83347:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":15452,"mutability":"mutable","name":"checkTopic2","nodeType":"VariableDeclaration","overrides":null,"scope":15461,"src":"83365:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15451,"name":"bool","nodeType":"ElementaryTypeName","src":"83365:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":15454,"mutability":"mutable","name":"checkTopic3","nodeType":"VariableDeclaration","overrides":null,"scope":15461,"src":"83383:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15453,"name":"bool","nodeType":"ElementaryTypeName","src":"83383:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":15456,"mutability":"mutable","name":"checkData","nodeType":"VariableDeclaration","overrides":null,"scope":15461,"src":"83401:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15455,"name":"bool","nodeType":"ElementaryTypeName","src":"83401:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":15458,"mutability":"mutable","name":"emitter","nodeType":"VariableDeclaration","overrides":null,"scope":15461,"src":"83417:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15457,"name":"address","nodeType":"ElementaryTypeName","src":"83417:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"83346:87:14"},"returnParameters":{"id":15460,"nodeType":"ParameterList","parameters":[],"src":"83450:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15465,"nodeType":"FunctionDefinition","src":"83721:31:14","nodes":[],"documentation":{"id":15462,"nodeType":"StructuredDocumentation","src":"83457:259:14","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","overrides":null,"parameters":{"id":15463,"nodeType":"ParameterList","parameters":[],"src":"83740:2:14"},"returnParameters":{"id":15464,"nodeType":"ParameterList","parameters":[],"src":"83751:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15471,"nodeType":"FunctionDefinition","src":"83855:46:14","nodes":[],"documentation":{"id":15466,"nodeType":"StructuredDocumentation","src":"83758:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","overrides":null,"parameters":{"id":15469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15468,"mutability":"mutable","name":"emitter","nodeType":"VariableDeclaration","overrides":null,"scope":15471,"src":"83875:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15467,"name":"address","nodeType":"ElementaryTypeName","src":"83875:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"83874:17:14"},"returnParameters":{"id":15470,"nodeType":"ParameterList","parameters":[],"src":"83900:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15475,"nodeType":"FunctionDefinition","src":"83967:33:14","nodes":[],"documentation":{"id":15472,"nodeType":"StructuredDocumentation","src":"83907:55:14","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","overrides":null,"parameters":{"id":15473,"nodeType":"ParameterList","parameters":[],"src":"83988:2:14"},"returnParameters":{"id":15474,"nodeType":"ParameterList","parameters":[],"src":"83999:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15481,"nodeType":"FunctionDefinition","src":"84078:50:14","nodes":[],"documentation":{"id":15476,"nodeType":"StructuredDocumentation","src":"84006:67:14","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","overrides":null,"parameters":{"id":15479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15478,"mutability":"mutable","name":"revertData","nodeType":"VariableDeclaration","overrides":null,"scope":15481,"src":"84100:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":15477,"name":"bytes4","nodeType":"ElementaryTypeName","src":"84100:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"84099:19:14"},"returnParameters":{"id":15480,"nodeType":"ParameterList","parameters":[],"src":"84127:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15487,"nodeType":"FunctionDefinition","src":"84210:58:14","nodes":[],"documentation":{"id":15482,"nodeType":"StructuredDocumentation","src":"84134:71:14","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","overrides":null,"parameters":{"id":15485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15484,"mutability":"mutable","name":"revertData","nodeType":"VariableDeclaration","overrides":null,"scope":15487,"src":"84232:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15483,"name":"bytes","nodeType":"ElementaryTypeName","src":"84232:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"84231:27:14"},"returnParameters":{"id":15486,"nodeType":"ParameterList","parameters":[],"src":"84267:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15495,"nodeType":"FunctionDefinition","src":"84497:59:14","nodes":[],"documentation":{"id":15488,"nodeType":"StructuredDocumentation","src":"84274:218:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","overrides":null,"parameters":{"id":15493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15490,"mutability":"mutable","name":"min","nodeType":"VariableDeclaration","overrides":null,"scope":15495,"src":"84523:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15489,"name":"uint64","nodeType":"ElementaryTypeName","src":"84523:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":15492,"mutability":"mutable","name":"max","nodeType":"VariableDeclaration","overrides":null,"scope":15495,"src":"84535:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15491,"name":"uint64","nodeType":"ElementaryTypeName","src":"84535:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"84522:24:14"},"returnParameters":{"id":15494,"nodeType":"ParameterList","parameters":[],"src":"84555:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15503,"nodeType":"FunctionDefinition","src":"84798:63:14","nodes":[],"documentation":{"id":15496,"nodeType":"StructuredDocumentation","src":"84562:231:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","overrides":null,"parameters":{"id":15501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15498,"mutability":"mutable","name":"min","nodeType":"VariableDeclaration","overrides":null,"scope":15503,"src":"84828:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15497,"name":"uint64","nodeType":"ElementaryTypeName","src":"84828:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":15500,"mutability":"mutable","name":"max","nodeType":"VariableDeclaration","overrides":null,"scope":15503,"src":"84840:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15499,"name":"uint64","nodeType":"ElementaryTypeName","src":"84840:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"84827:24:14"},"returnParameters":{"id":15502,"nodeType":"ParameterList","parameters":[],"src":"84860:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15509,"nodeType":"FunctionDefinition","src":"84939:38:14","nodes":[],"documentation":{"id":15504,"nodeType":"StructuredDocumentation","src":"84867:67:14","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","overrides":null,"parameters":{"id":15507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15506,"mutability":"mutable","name":"skipTest","nodeType":"VariableDeclaration","overrides":null,"scope":15509,"src":"84953:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15505,"name":"bool","nodeType":"ElementaryTypeName","src":"84953:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"84952:15:14"},"returnParameters":{"id":15508,"nodeType":"ParameterList","parameters":[],"src":"84976:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15513,"nodeType":"FunctionDefinition","src":"85052:41:14","nodes":[],"documentation":{"id":15510,"nodeType":"StructuredDocumentation","src":"84983:64:14","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","overrides":null,"parameters":{"id":15511,"nodeType":"ParameterList","parameters":[],"src":"85081:2:14"},"returnParameters":{"id":15512,"nodeType":"ParameterList","parameters":[],"src":"85092:0:14"},"scope":15514,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":14942,"name":"VmSafe","nodeType":"UserDefinedTypeName","referencedDeclaration":14940,"src":"71521:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_VmSafe_$14940","typeString":"contract VmSafe"}},"id":14943,"nodeType":"InheritanceSpecifier","src":"71521:6:14"}],"contractDependencies":[14940],"contractKind":"interface","documentation":{"id":14941,"nodeType":"StructuredDocumentation","src":"71334:171:14","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15514,14940],"name":"Vm","scope":15515}],"license":"MIT OR Apache-2.0"},"id":14}