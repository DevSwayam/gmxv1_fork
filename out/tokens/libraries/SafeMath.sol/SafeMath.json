{"abi":[],"bytecode":{"object":"0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220403f500c58f205ace5d22db627daebaafdf970deec158ab29a10f268c3e71b2364736f6c634300060c0033","sourceMap":"622:4578:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220403f500c58f205ace5d22db627daebaafdf970deec158ab29a10f268c3e71b2364736f6c634300060c0033","sourceMap":"622:4578:71:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/tokens/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"script/tokens/libraries/SafeMath.sol\":{\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0da1c7fdf32ad0225980c821ec44eddb0a068dadbd60bb8e987dcff7cfc57fb\",\"dweb:/ipfs/QmYC9SQk4HQTi5MjRtGAFC1q4qrV44JaQk1XTtvqrciefR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"script/tokens/libraries/SafeMath.sol":"SafeMath"},"evmVersion":"istanbul","libraries":{}},"sources":{"script/tokens/libraries/SafeMath.sol":{"keccak256":"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763","urls":["bzz-raw://d0da1c7fdf32ad0225980c821ec44eddb0a068dadbd60bb8e987dcff7cfc57fb","dweb:/ipfs/QmYC9SQk4HQTi5MjRtGAFC1q4qrV44JaQk1XTtvqrciefR"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"script/tokens/libraries/SafeMath.sol","id":53734,"exportedSymbols":{"SafeMath":[53733]},"nodeType":"SourceUnit","src":"33:5168:71","nodes":[{"id":53539,"nodeType":"PragmaDirective","src":"33:23:71","nodes":[],"literals":["solidity","0.6",".12"]},{"id":53733,"nodeType":"ContractDefinition","src":"622:4578:71","nodes":[{"id":53566,"nodeType":"FunctionDefinition","src":"874:176:71","nodes":[],"body":{"id":53565,"nodeType":"Block","src":"941:109:71","nodes":[],"statements":[{"assignments":[53551],"declarations":[{"constant":false,"id":53551,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":53565,"src":"951:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53550,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":53555,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53543,"src":"963:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":53553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53545,"src":"967:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"963:5:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"951:17:71"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53557,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53551,"src":"986:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":53558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53543,"src":"991:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"986:6:71","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":53560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"994:29:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":53556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"978:7:71","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":53561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:46:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":53562,"nodeType":"ExpressionStatement","src":"978:46:71"},{"expression":{"argumentTypes":null,"id":53563,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53551,"src":"1042:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53549,"id":53564,"nodeType":"Return","src":"1035:8:71"}]},"documentation":{"id":53541,"nodeType":"StructuredDocumentation","src":"645:224:71","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"add","overrides":null,"parameters":{"id":53546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53543,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":53566,"src":"887:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53542,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53545,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":53566,"src":"898:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53544,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"886:22:71"},"returnParameters":{"id":53549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53548,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":53566,"src":"932:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53547,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"931:9:71"},"scope":53733,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53583,"nodeType":"FunctionDefinition","src":"1321:134:71","nodes":[],"body":{"id":53582,"nodeType":"Block","src":"1388:67:71","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":53577,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53569,"src":"1409:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":53578,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53571,"src":"1412:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":53579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1415:32:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":53576,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[53583,53611],"referencedDeclaration":53611,"src":"1405:3:71","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":53580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1405:43:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53575,"id":53581,"nodeType":"Return","src":"1398:50:71"}]},"documentation":{"id":53567,"nodeType":"StructuredDocumentation","src":"1056:260:71","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","overrides":null,"parameters":{"id":53572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53569,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":53583,"src":"1334:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53571,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":53583,"src":"1345:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1333:22:71"},"returnParameters":{"id":53575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53574,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":53583,"src":"1379:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1378:9:71"},"scope":53733,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53611,"nodeType":"FunctionDefinition","src":"1746:187:71","nodes":[],"body":{"id":53610,"nodeType":"Block","src":"1841:92:71","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53588,"src":"1859:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":53597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53586,"src":"1864:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:71","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":53599,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53590,"src":"1867:12:71","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":53595,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1851:7:71","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":53600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1851:29:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":53601,"nodeType":"ExpressionStatement","src":"1851:29:71"},{"assignments":[53603],"declarations":[{"constant":false,"id":53603,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":53610,"src":"1890:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53602,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":53607,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53586,"src":"1902:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":53605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53588,"src":"1906:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1902:5:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1890:17:71"},{"expression":{"argumentTypes":null,"id":53608,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53603,"src":"1925:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53594,"id":53609,"nodeType":"Return","src":"1918:8:71"}]},"documentation":{"id":53584,"nodeType":"StructuredDocumentation","src":"1461:280:71","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","overrides":null,"parameters":{"id":53591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53586,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":53611,"src":"1759:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53588,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":53611,"src":"1770:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53590,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":53611,"src":"1781:26:71","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":53589,"name":"string","nodeType":"ElementaryTypeName","src":"1781:6:71","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"1758:50:71"},"returnParameters":{"id":53594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53593,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":53611,"src":"1832:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1832:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1831:9:71"},"scope":53733,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53646,"nodeType":"FunctionDefinition","src":"2180:459:71","nodes":[],"body":{"id":53645,"nodeType":"Block","src":"2247:392:71","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53614,"src":"2479:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":53622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2484:1:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2479:6:71","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":53627,"nodeType":"IfStatement","src":"2475:45:71","trueBody":{"id":53626,"nodeType":"Block","src":"2487:33:71","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":53624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2508:1:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":53620,"id":53625,"nodeType":"Return","src":"2501:8:71"}]}},{"assignments":[53629],"declarations":[{"constant":false,"id":53629,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":53645,"src":"2530:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2530:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":53633,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53614,"src":"2542:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":53631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53616,"src":"2546:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2542:5:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2530:17:71"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53635,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53629,"src":"2565:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":53636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53614,"src":"2569:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:5:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":53638,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53616,"src":"2574:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:10:71","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":53640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2577:35:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":53634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2557:7:71","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":53641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2557:56:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":53642,"nodeType":"ExpressionStatement","src":"2557:56:71"},{"expression":{"argumentTypes":null,"id":53643,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53629,"src":"2631:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53620,"id":53644,"nodeType":"Return","src":"2624:8:71"}]},"documentation":{"id":53612,"nodeType":"StructuredDocumentation","src":"1939:236:71","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"mul","overrides":null,"parameters":{"id":53617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53614,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":53646,"src":"2193:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53613,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53616,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":53646,"src":"2204:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2192:22:71"},"returnParameters":{"id":53620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53619,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":53646,"src":"2238:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2238:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2237:9:71"},"scope":53733,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53663,"nodeType":"FunctionDefinition","src":"3101:130:71","nodes":[],"body":{"id":53662,"nodeType":"Block","src":"3168:63:71","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":53657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53649,"src":"3189:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":53658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53651,"src":"3192:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":53659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3195:28:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":53656,"name":"div","nodeType":"Identifier","overloadedDeclarations":[53663,53691],"referencedDeclaration":53691,"src":"3185:3:71","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":53660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3185:39:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53655,"id":53661,"nodeType":"Return","src":"3178:46:71"}]},"documentation":{"id":53647,"nodeType":"StructuredDocumentation","src":"2645:451:71","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","overrides":null,"parameters":{"id":53652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53649,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":53663,"src":"3114:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53648,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53651,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":53663,"src":"3125:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3113:22:71"},"returnParameters":{"id":53655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53654,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":53663,"src":"3159:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53653,"name":"uint256","nodeType":"ElementaryTypeName","src":"3159:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3158:9:71"},"scope":53733,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53691,"nodeType":"FunctionDefinition","src":"3713:272:71","nodes":[],"body":{"id":53690,"nodeType":"Block","src":"3808:177:71","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53668,"src":"3826:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":53677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3830:1:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3826:5:71","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":53679,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53670,"src":"3833:12:71","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":53675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3818:7:71","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":53680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3818:28:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":53681,"nodeType":"ExpressionStatement","src":"3818:28:71"},{"assignments":[53683],"declarations":[{"constant":false,"id":53683,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":53690,"src":"3856:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3856:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":53687,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53666,"src":"3868:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":53685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53668,"src":"3872:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3868:5:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3856:17:71"},{"expression":{"argumentTypes":null,"id":53688,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53683,"src":"3977:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53674,"id":53689,"nodeType":"Return","src":"3970:8:71"}]},"documentation":{"id":53664,"nodeType":"StructuredDocumentation","src":"3237:471:71","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","overrides":null,"parameters":{"id":53671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53666,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":53691,"src":"3726:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3726:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53668,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":53691,"src":"3737:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3737:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53670,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":53691,"src":"3748:26:71","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":53669,"name":"string","nodeType":"ElementaryTypeName","src":"3748:6:71","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"3725:50:71"},"returnParameters":{"id":53674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53673,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":53691,"src":"3799:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53672,"name":"uint256","nodeType":"ElementaryTypeName","src":"3799:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3798:9:71"},"scope":53733,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53708,"nodeType":"FunctionDefinition","src":"4436:128:71","nodes":[],"body":{"id":53707,"nodeType":"Block","src":"4503:61:71","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":53702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53694,"src":"4524:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":53703,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53696,"src":"4527:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":53704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4530:26:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":53701,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[53708,53732],"referencedDeclaration":53732,"src":"4520:3:71","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":53705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4520:37:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53700,"id":53706,"nodeType":"Return","src":"4513:44:71"}]},"documentation":{"id":53692,"nodeType":"StructuredDocumentation","src":"3991:440:71","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","overrides":null,"parameters":{"id":53697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53694,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":53708,"src":"4449:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53693,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53696,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":53708,"src":"4460:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53695,"name":"uint256","nodeType":"ElementaryTypeName","src":"4460:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4448:22:71"},"returnParameters":{"id":53700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53699,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":53708,"src":"4494:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53698,"name":"uint256","nodeType":"ElementaryTypeName","src":"4494:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4493:9:71"},"scope":53733,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53732,"nodeType":"FunctionDefinition","src":"5035:163:71","nodes":[],"body":{"id":53731,"nodeType":"Block","src":"5130:68:71","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53713,"src":"5148:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":53722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:71","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5148:6:71","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":53724,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53715,"src":"5156:12:71","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":53720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5140:7:71","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":53725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5140:29:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":53726,"nodeType":"ExpressionStatement","src":"5140:29:71"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":53727,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53711,"src":"5186:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":53728,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53713,"src":"5190:1:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5186:5:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":53719,"id":53730,"nodeType":"Return","src":"5179:12:71"}]},"documentation":{"id":53709,"nodeType":"StructuredDocumentation","src":"4570:460:71","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","overrides":null,"parameters":{"id":53716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53711,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":53732,"src":"5048:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53710,"name":"uint256","nodeType":"ElementaryTypeName","src":"5048:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53713,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":53732,"src":"5059:9:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53712,"name":"uint256","nodeType":"ElementaryTypeName","src":"5059:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":53715,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":53732,"src":"5070:26:71","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":53714,"name":"string","nodeType":"ElementaryTypeName","src":"5070:6:71","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"5047:50:71"},"returnParameters":{"id":53719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53718,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":53732,"src":"5121:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5121:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5120:9:71"},"scope":53733,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":53540,"nodeType":"StructuredDocumentation","src":"58:563:71","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"linearizedBaseContracts":[53733],"name":"SafeMath","scope":53734}],"license":"MIT"},"id":71}