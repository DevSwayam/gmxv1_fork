{"abi":[],"bytecode":{"object":"0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f47fd6cea8069fae7a52c69d44305075b184ec44e9e9a1cf35ba20dbc4e406a64736f6c634300060c0033","sourceMap":"622:4578:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f47fd6cea8069fae7a52c69d44305075b184ec44e9e9a1cf35ba20dbc4e406a64736f6c634300060c0033","sourceMap":"622:4578:42:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/Amm/PancakeForProtocol/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"script/Amm/PancakeForProtocol/libraries/SafeMath.sol\":{\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0da1c7fdf32ad0225980c821ec44eddb0a068dadbd60bb8e987dcff7cfc57fb\",\"dweb:/ipfs/QmYC9SQk4HQTi5MjRtGAFC1q4qrV44JaQk1XTtvqrciefR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"script/Amm/PancakeForProtocol/libraries/SafeMath.sol":"SafeMath"},"evmVersion":"istanbul","libraries":{}},"sources":{"script/Amm/PancakeForProtocol/libraries/SafeMath.sol":{"keccak256":"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763","urls":["bzz-raw://d0da1c7fdf32ad0225980c821ec44eddb0a068dadbd60bb8e987dcff7cfc57fb","dweb:/ipfs/QmYC9SQk4HQTi5MjRtGAFC1q4qrV44JaQk1XTtvqrciefR"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"script/Amm/PancakeForProtocol/libraries/SafeMath.sol","id":49508,"exportedSymbols":{"SafeMath":[49507]},"nodeType":"SourceUnit","src":"33:5168:42","nodes":[{"id":49313,"nodeType":"PragmaDirective","src":"33:23:42","nodes":[],"literals":["solidity","0.6",".12"]},{"id":49507,"nodeType":"ContractDefinition","src":"622:4578:42","nodes":[{"id":49340,"nodeType":"FunctionDefinition","src":"874:176:42","nodes":[],"body":{"id":49339,"nodeType":"Block","src":"941:109:42","nodes":[],"statements":[{"assignments":[49325],"declarations":[{"constant":false,"id":49325,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":49339,"src":"951:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49324,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":49329,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49317,"src":"963:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":49327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49319,"src":"967:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"963:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"951:17:42"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49331,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49325,"src":"986:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":49332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49317,"src":"991:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"986:6:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":49334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"994:29:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":49330,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"978:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":49335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:46:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49336,"nodeType":"ExpressionStatement","src":"978:46:42"},{"expression":{"argumentTypes":null,"id":49337,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49325,"src":"1042:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":49323,"id":49338,"nodeType":"Return","src":"1035:8:42"}]},"documentation":{"id":49315,"nodeType":"StructuredDocumentation","src":"645:224:42","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"add","overrides":null,"parameters":{"id":49320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49317,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":49340,"src":"887:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49316,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49319,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":49340,"src":"898:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49318,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"886:22:42"},"returnParameters":{"id":49323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49322,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":49340,"src":"932:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49321,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"931:9:42"},"scope":49507,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49357,"nodeType":"FunctionDefinition","src":"1321:134:42","nodes":[],"body":{"id":49356,"nodeType":"Block","src":"1388:67:42","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":49351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49343,"src":"1409:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":49352,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49345,"src":"1412:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":49353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1415:32:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":49350,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[49357,49385],"referencedDeclaration":49385,"src":"1405:3:42","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":49354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1405:43:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":49349,"id":49355,"nodeType":"Return","src":"1398:50:42"}]},"documentation":{"id":49341,"nodeType":"StructuredDocumentation","src":"1056:260:42","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","overrides":null,"parameters":{"id":49346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49343,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":49357,"src":"1334:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49345,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":49357,"src":"1345:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1333:22:42"},"returnParameters":{"id":49349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49348,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":49357,"src":"1379:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1378:9:42"},"scope":49507,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49385,"nodeType":"FunctionDefinition","src":"1746:187:42","nodes":[],"body":{"id":49384,"nodeType":"Block","src":"1841:92:42","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49362,"src":"1859:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":49371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49360,"src":"1864:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":49373,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49364,"src":"1867:12:42","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":49369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1851:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":49374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1851:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49375,"nodeType":"ExpressionStatement","src":"1851:29:42"},{"assignments":[49377],"declarations":[{"constant":false,"id":49377,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":49384,"src":"1890:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":49381,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49360,"src":"1902:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":49379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49362,"src":"1906:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1902:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1890:17:42"},{"expression":{"argumentTypes":null,"id":49382,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49377,"src":"1925:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":49368,"id":49383,"nodeType":"Return","src":"1918:8:42"}]},"documentation":{"id":49358,"nodeType":"StructuredDocumentation","src":"1461:280:42","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","overrides":null,"parameters":{"id":49365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49360,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":49385,"src":"1759:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49362,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":49385,"src":"1770:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49364,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":49385,"src":"1781:26:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":49363,"name":"string","nodeType":"ElementaryTypeName","src":"1781:6:42","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"1758:50:42"},"returnParameters":{"id":49368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49367,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":49385,"src":"1832:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1832:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1831:9:42"},"scope":49507,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49420,"nodeType":"FunctionDefinition","src":"2180:459:42","nodes":[],"body":{"id":49419,"nodeType":"Block","src":"2247:392:42","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49388,"src":"2479:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":49396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2484:1:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2479:6:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":49401,"nodeType":"IfStatement","src":"2475:45:42","trueBody":{"id":49400,"nodeType":"Block","src":"2487:33:42","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":49398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2508:1:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":49394,"id":49399,"nodeType":"Return","src":"2501:8:42"}]}},{"assignments":[49403],"declarations":[{"constant":false,"id":49403,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":49419,"src":"2530:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2530:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":49407,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49388,"src":"2542:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":49405,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49390,"src":"2546:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2542:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2530:17:42"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49409,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49403,"src":"2565:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":49410,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49388,"src":"2569:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":49412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49390,"src":"2574:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:10:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":49414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2577:35:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":49408,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2557:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":49415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2557:56:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49416,"nodeType":"ExpressionStatement","src":"2557:56:42"},{"expression":{"argumentTypes":null,"id":49417,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49403,"src":"2631:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":49394,"id":49418,"nodeType":"Return","src":"2624:8:42"}]},"documentation":{"id":49386,"nodeType":"StructuredDocumentation","src":"1939:236:42","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"mul","overrides":null,"parameters":{"id":49391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49388,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":49420,"src":"2193:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49390,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":49420,"src":"2204:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2192:22:42"},"returnParameters":{"id":49394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49393,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":49420,"src":"2238:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2238:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2237:9:42"},"scope":49507,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49437,"nodeType":"FunctionDefinition","src":"3101:130:42","nodes":[],"body":{"id":49436,"nodeType":"Block","src":"3168:63:42","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":49431,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49423,"src":"3189:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":49432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49425,"src":"3192:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":49433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3195:28:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":49430,"name":"div","nodeType":"Identifier","overloadedDeclarations":[49437,49465],"referencedDeclaration":49465,"src":"3185:3:42","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":49434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3185:39:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":49429,"id":49435,"nodeType":"Return","src":"3178:46:42"}]},"documentation":{"id":49421,"nodeType":"StructuredDocumentation","src":"2645:451:42","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","overrides":null,"parameters":{"id":49426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49423,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":49437,"src":"3114:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49422,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49425,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":49437,"src":"3125:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3113:22:42"},"returnParameters":{"id":49429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49428,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":49437,"src":"3159:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3159:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3158:9:42"},"scope":49507,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49465,"nodeType":"FunctionDefinition","src":"3713:272:42","nodes":[],"body":{"id":49464,"nodeType":"Block","src":"3808:177:42","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49442,"src":"3826:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":49451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3830:1:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3826:5:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":49453,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49444,"src":"3833:12:42","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":49449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3818:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":49454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3818:28:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49455,"nodeType":"ExpressionStatement","src":"3818:28:42"},{"assignments":[49457],"declarations":[{"constant":false,"id":49457,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":49464,"src":"3856:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49456,"name":"uint256","nodeType":"ElementaryTypeName","src":"3856:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":49461,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49440,"src":"3868:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":49459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49442,"src":"3872:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3868:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3856:17:42"},{"expression":{"argumentTypes":null,"id":49462,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49457,"src":"3977:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":49448,"id":49463,"nodeType":"Return","src":"3970:8:42"}]},"documentation":{"id":49438,"nodeType":"StructuredDocumentation","src":"3237:471:42","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","overrides":null,"parameters":{"id":49445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49440,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":49465,"src":"3726:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49439,"name":"uint256","nodeType":"ElementaryTypeName","src":"3726:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49442,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":49465,"src":"3737:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3737:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49444,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":49465,"src":"3748:26:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":49443,"name":"string","nodeType":"ElementaryTypeName","src":"3748:6:42","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"3725:50:42"},"returnParameters":{"id":49448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49447,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":49465,"src":"3799:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3799:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3798:9:42"},"scope":49507,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49482,"nodeType":"FunctionDefinition","src":"4436:128:42","nodes":[],"body":{"id":49481,"nodeType":"Block","src":"4503:61:42","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":49476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49468,"src":"4524:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":49477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49470,"src":"4527:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":49478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4530:26:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":49475,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[49482,49506],"referencedDeclaration":49506,"src":"4520:3:42","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":49479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4520:37:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":49474,"id":49480,"nodeType":"Return","src":"4513:44:42"}]},"documentation":{"id":49466,"nodeType":"StructuredDocumentation","src":"3991:440:42","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","overrides":null,"parameters":{"id":49471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49468,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":49482,"src":"4449:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49470,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":49482,"src":"4460:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4460:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4448:22:42"},"returnParameters":{"id":49474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49473,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":49482,"src":"4494:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49472,"name":"uint256","nodeType":"ElementaryTypeName","src":"4494:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4493:9:42"},"scope":49507,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49506,"nodeType":"FunctionDefinition","src":"5035:163:42","nodes":[],"body":{"id":49505,"nodeType":"Block","src":"5130:68:42","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49487,"src":"5148:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":49496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:42","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5148:6:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":49498,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49489,"src":"5156:12:42","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":49494,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5140:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":49499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5140:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49500,"nodeType":"ExpressionStatement","src":"5140:29:42"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":49501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49485,"src":"5186:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":49502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49487,"src":"5190:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5186:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":49493,"id":49504,"nodeType":"Return","src":"5179:12:42"}]},"documentation":{"id":49483,"nodeType":"StructuredDocumentation","src":"4570:460:42","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","overrides":null,"parameters":{"id":49490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49485,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":49506,"src":"5048:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5048:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49487,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":49506,"src":"5059:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5059:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":49489,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":49506,"src":"5070:26:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":49488,"name":"string","nodeType":"ElementaryTypeName","src":"5070:6:42","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"5047:50:42"},"returnParameters":{"id":49493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49492,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":49506,"src":"5121:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49491,"name":"uint256","nodeType":"ElementaryTypeName","src":"5121:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5120:9:42"},"scope":49507,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":49314,"nodeType":"StructuredDocumentation","src":"58:563:42","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"linearizedBaseContracts":[49507],"name":"SafeMath","scope":49508}],"license":"MIT"},"id":42}