{"abi":[],"bytecode":{"object":"0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200eef8129ae7fb30e0b1492fac8392368cd9ad20f913c7fbc39b8a69ce72a9be564736f6c634300060c0033","sourceMap":"622:4578:123:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200eef8129ae7fb30e0b1492fac8392368cd9ad20f913c7fbc39b8a69ce72a9be564736f6c634300060c0033","sourceMap":"622:4578:123:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/libraries/math/SafeMath.sol\":{\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0da1c7fdf32ad0225980c821ec44eddb0a068dadbd60bb8e987dcff7cfc57fb\",\"dweb:/ipfs/QmYC9SQk4HQTi5MjRtGAFC1q4qrV44JaQk1XTtvqrciefR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/math/SafeMath.sol":"SafeMath"},"evmVersion":"istanbul","libraries":{}},"sources":{"src/libraries/math/SafeMath.sol":{"keccak256":"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763","urls":["bzz-raw://d0da1c7fdf32ad0225980c821ec44eddb0a068dadbd60bb8e987dcff7cfc57fb","dweb:/ipfs/QmYC9SQk4HQTi5MjRtGAFC1q4qrV44JaQk1XTtvqrciefR"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/libraries/math/SafeMath.sol","id":77560,"exportedSymbols":{"SafeMath":[77559]},"nodeType":"SourceUnit","src":"33:5168:123","nodes":[{"id":77365,"nodeType":"PragmaDirective","src":"33:23:123","nodes":[],"literals":["solidity","0.6",".12"]},{"id":77559,"nodeType":"ContractDefinition","src":"622:4578:123","nodes":[{"id":77392,"nodeType":"FunctionDefinition","src":"874:176:123","nodes":[],"body":{"id":77391,"nodeType":"Block","src":"941:109:123","nodes":[],"statements":[{"assignments":[77377],"declarations":[{"constant":false,"id":77377,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":77391,"src":"951:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77376,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":77381,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77369,"src":"963:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":77379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77371,"src":"967:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"963:5:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"951:17:123"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77383,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77377,"src":"986:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":77384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77369,"src":"991:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"986:6:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":77386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"994:29:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":77382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"978:7:123","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:46:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77388,"nodeType":"ExpressionStatement","src":"978:46:123"},{"expression":{"argumentTypes":null,"id":77389,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77377,"src":"1042:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":77375,"id":77390,"nodeType":"Return","src":"1035:8:123"}]},"documentation":{"id":77367,"nodeType":"StructuredDocumentation","src":"645:224:123","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"add","overrides":null,"parameters":{"id":77372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77369,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":77392,"src":"887:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77368,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77371,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":77392,"src":"898:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77370,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"886:22:123"},"returnParameters":{"id":77375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77374,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77392,"src":"932:7:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77373,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"931:9:123"},"scope":77559,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":77409,"nodeType":"FunctionDefinition","src":"1321:134:123","nodes":[],"body":{"id":77408,"nodeType":"Block","src":"1388:67:123","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":77403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77395,"src":"1409:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":77404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77397,"src":"1412:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":77405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1415:32:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":77402,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[77409,77437],"referencedDeclaration":77437,"src":"1405:3:123","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":77406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1405:43:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":77401,"id":77407,"nodeType":"Return","src":"1398:50:123"}]},"documentation":{"id":77393,"nodeType":"StructuredDocumentation","src":"1056:260:123","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","overrides":null,"parameters":{"id":77398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77395,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":77409,"src":"1334:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77397,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":77409,"src":"1345:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1333:22:123"},"returnParameters":{"id":77401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77400,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77409,"src":"1379:7:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1378:9:123"},"scope":77559,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":77437,"nodeType":"FunctionDefinition","src":"1746:187:123","nodes":[],"body":{"id":77436,"nodeType":"Block","src":"1841:92:123","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77414,"src":"1859:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":77423,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77412,"src":"1864:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":77425,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77416,"src":"1867:12:123","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":77421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1851:7:123","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1851:29:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77427,"nodeType":"ExpressionStatement","src":"1851:29:123"},{"assignments":[77429],"declarations":[{"constant":false,"id":77429,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":77436,"src":"1890:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":77433,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77412,"src":"1902:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":77431,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77414,"src":"1906:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1902:5:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1890:17:123"},{"expression":{"argumentTypes":null,"id":77434,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77429,"src":"1925:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":77420,"id":77435,"nodeType":"Return","src":"1918:8:123"}]},"documentation":{"id":77410,"nodeType":"StructuredDocumentation","src":"1461:280:123","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","overrides":null,"parameters":{"id":77417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77412,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":77437,"src":"1759:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77414,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":77437,"src":"1770:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77416,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":77437,"src":"1781:26:123","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":77415,"name":"string","nodeType":"ElementaryTypeName","src":"1781:6:123","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"1758:50:123"},"returnParameters":{"id":77420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77419,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77437,"src":"1832:7:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1832:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1831:9:123"},"scope":77559,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":77472,"nodeType":"FunctionDefinition","src":"2180:459:123","nodes":[],"body":{"id":77471,"nodeType":"Block","src":"2247:392:123","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77440,"src":"2479:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":77448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2484:1:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2479:6:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":77453,"nodeType":"IfStatement","src":"2475:45:123","trueBody":{"id":77452,"nodeType":"Block","src":"2487:33:123","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":77450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2508:1:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":77446,"id":77451,"nodeType":"Return","src":"2501:8:123"}]}},{"assignments":[77455],"declarations":[{"constant":false,"id":77455,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":77471,"src":"2530:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2530:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":77459,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77440,"src":"2542:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":77457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77442,"src":"2546:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2542:5:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2530:17:123"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77461,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77455,"src":"2565:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":77462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77440,"src":"2569:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:5:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":77464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77442,"src":"2574:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:10:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":77466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2577:35:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":77460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2557:7:123","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2557:56:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77468,"nodeType":"ExpressionStatement","src":"2557:56:123"},{"expression":{"argumentTypes":null,"id":77469,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77455,"src":"2631:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":77446,"id":77470,"nodeType":"Return","src":"2624:8:123"}]},"documentation":{"id":77438,"nodeType":"StructuredDocumentation","src":"1939:236:123","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"mul","overrides":null,"parameters":{"id":77443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77440,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":77472,"src":"2193:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77442,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":77472,"src":"2204:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2192:22:123"},"returnParameters":{"id":77446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77445,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77472,"src":"2238:7:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2238:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2237:9:123"},"scope":77559,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":77489,"nodeType":"FunctionDefinition","src":"3101:130:123","nodes":[],"body":{"id":77488,"nodeType":"Block","src":"3168:63:123","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":77483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77475,"src":"3189:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":77484,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77477,"src":"3192:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":77485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3195:28:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":77482,"name":"div","nodeType":"Identifier","overloadedDeclarations":[77489,77517],"referencedDeclaration":77517,"src":"3185:3:123","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":77486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3185:39:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":77481,"id":77487,"nodeType":"Return","src":"3178:46:123"}]},"documentation":{"id":77473,"nodeType":"StructuredDocumentation","src":"2645:451:123","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","overrides":null,"parameters":{"id":77478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77475,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":77489,"src":"3114:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77474,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77477,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":77489,"src":"3125:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3113:22:123"},"returnParameters":{"id":77481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77480,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77489,"src":"3159:7:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3159:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3158:9:123"},"scope":77559,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":77517,"nodeType":"FunctionDefinition","src":"3713:272:123","nodes":[],"body":{"id":77516,"nodeType":"Block","src":"3808:177:123","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77494,"src":"3826:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":77503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3830:1:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3826:5:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":77505,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77496,"src":"3833:12:123","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":77501,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3818:7:123","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3818:28:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77507,"nodeType":"ExpressionStatement","src":"3818:28:123"},{"assignments":[77509],"declarations":[{"constant":false,"id":77509,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":77516,"src":"3856:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77508,"name":"uint256","nodeType":"ElementaryTypeName","src":"3856:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":77513,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77492,"src":"3868:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":77511,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77494,"src":"3872:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3868:5:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3856:17:123"},{"expression":{"argumentTypes":null,"id":77514,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77509,"src":"3977:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":77500,"id":77515,"nodeType":"Return","src":"3970:8:123"}]},"documentation":{"id":77490,"nodeType":"StructuredDocumentation","src":"3237:471:123","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","overrides":null,"parameters":{"id":77497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77492,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":77517,"src":"3726:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3726:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77494,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":77517,"src":"3737:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3737:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77496,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":77517,"src":"3748:26:123","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":77495,"name":"string","nodeType":"ElementaryTypeName","src":"3748:6:123","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"3725:50:123"},"returnParameters":{"id":77500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77499,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77517,"src":"3799:7:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3799:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3798:9:123"},"scope":77559,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":77534,"nodeType":"FunctionDefinition","src":"4436:128:123","nodes":[],"body":{"id":77533,"nodeType":"Block","src":"4503:61:123","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":77528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77520,"src":"4524:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":77529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77522,"src":"4527:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":77530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4530:26:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":77527,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[77534,77558],"referencedDeclaration":77558,"src":"4520:3:123","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":77531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4520:37:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":77526,"id":77532,"nodeType":"Return","src":"4513:44:123"}]},"documentation":{"id":77518,"nodeType":"StructuredDocumentation","src":"3991:440:123","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","overrides":null,"parameters":{"id":77523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77520,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":77534,"src":"4449:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77519,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77522,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":77534,"src":"4460:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4460:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4448:22:123"},"returnParameters":{"id":77526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77525,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77534,"src":"4494:7:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77524,"name":"uint256","nodeType":"ElementaryTypeName","src":"4494:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4493:9:123"},"scope":77559,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":77558,"nodeType":"FunctionDefinition","src":"5035:163:123","nodes":[],"body":{"id":77557,"nodeType":"Block","src":"5130:68:123","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77539,"src":"5148:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":77548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:123","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5148:6:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":77550,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77541,"src":"5156:12:123","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":77546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5140:7:123","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5140:29:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77552,"nodeType":"ExpressionStatement","src":"5140:29:123"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":77553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77537,"src":"5186:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":77554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77539,"src":"5190:1:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5186:5:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":77545,"id":77556,"nodeType":"Return","src":"5179:12:123"}]},"documentation":{"id":77535,"nodeType":"StructuredDocumentation","src":"4570:460:123","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","overrides":null,"parameters":{"id":77542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77537,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":77558,"src":"5048:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5048:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77539,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":77558,"src":"5059:9:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77538,"name":"uint256","nodeType":"ElementaryTypeName","src":"5059:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77541,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":77558,"src":"5070:26:123","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":77540,"name":"string","nodeType":"ElementaryTypeName","src":"5070:6:123","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"5047:50:123"},"returnParameters":{"id":77545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77544,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77558,"src":"5121:7:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5121:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5120:9:123"},"scope":77559,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":77366,"nodeType":"StructuredDocumentation","src":"58:563:123","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"linearizedBaseContracts":[77559],"name":"SafeMath","scope":77560}],"license":"MIT"},"id":123}